{
  "source": "ArXiv",
  "filename": "046_Conceptual_Modeling_of_Inventory_Management_Proces.pdf",
  "total_chars": 43707,
  "total_chunks": 61,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nConceptual Modeling of Inventory Management\nProcesses as a Thinging Machine\nSabah Al-Fedaghi Nourah Al-Huwais\nComputer Engineering Department Information Technology Department\nKuwait University Kuwait National Petroleum Company\nKuwait Kuwait\nsabah.alfedaghi@ku.edu.kw n_huwais@knpc.com\nAbstract—A control model is typically classified into three Inventory management models are typically classified into\nforms: conceptual, mathematical and simulation (computer). three forms [3]:\nThis paper analyzes a conceptual modeling application with  A conceptual model that contains text, pictures and\nrespect to an inventory management system. Today, most diagrams to explain the terms and principles of a particular\norganizations utilize computer systems for inventory control that system’s functioning.",
      "size": 916,
      "sentences": 5
    },
    {
      "id": 2,
      "content": "ect to an inventory management system. Today, most diagrams to explain the terms and principles of a particular\norganizations utilize computer systems for inventory control that system’s functioning. provide protection when interruptions or breakdowns occur\n An analytical (purely mathematical) model that uses\nwithin work processes. Modeling the inventory processes is an\nmathematical concepts and language and contains\nactive area of research that utilizes many diagrammatic\nformulas for analysis and calculations. techniques, including data flow diagrams, Universal Modeling\n A simulation (computer) model that attempts to simulate an\nLanguage (UML) diagrams and Integration DEFinition (IDEF). abstract model of a particular system. We claim that current conceptual modeling frameworks lack\nThe last two modeling techniques are concerned with\nuniform notions and have inability to appeal to designers and\nanalysts.",
      "size": 919,
      "sentences": 7
    },
    {
      "id": 3,
      "content": "articular system. We claim that current conceptual modeling frameworks lack\nThe last two modeling techniques are concerned with\nuniform notions and have inability to appeal to designers and\nanalysts. We propose modeling an inventory system as an minimizing the total cost of inventory based on a decision-\nabstract machine, called a Thinging Machine (TM), with five making process considering the cost of holding the stock,\noperations: creation, processing, receiving, releasing and placing an order or encountering a shortage (e.g., insufficient\ntransferring. The paper provides side-by-side contrasts of some stock to meet demand). This paper is focused on conceptual\nexisting examples of conceptual modeling methodologies that modeling of inventory management systems. apply to TM. Additionally, TM is applied in a case study of an Conceptual modeling pertains to identifying, analyzing and\nactual inventory system that uses IBM Maximo.",
      "size": 939,
      "sentences": 7
    },
    {
      "id": 4,
      "content": "f inventory management systems. apply to TM. Additionally, TM is applied in a case study of an Conceptual modeling pertains to identifying, analyzing and\nactual inventory system that uses IBM Maximo. The resulting describing the essential concepts and constraints of a domain\nconceptual depictions point to the viability of FM as a valuable with the help of (diagrammatic) modeling language that is\ntool for developing a high-level representation of inventory based on a small set of basic meta-concepts [4]. It helps in\nprocesses. understanding and communicating among the stakeholders and\nserves as a base for consequent phases of a system’s\nKeywords— conceptual model, diagrammatic representation,\ndevelopment [5]. It should reflect the reality of the organization\ninventory control, inventory management, workflow, thinging\nand its operations; conceptual models are most valued in terms\nI.",
      "size": 893,
      "sentences": 7
    },
    {
      "id": 5,
      "content": "ation,\ndevelopment [5]. It should reflect the reality of the organization\ninventory control, inventory management, workflow, thinging\nand its operations; conceptual models are most valued in terms\nI. INTRODUCTION of completeness, faithfulness to the realization of the\nunderlying real system, understandability and susceptibility\nIn general, inventory is defined as items stocked in a store\nanalysis. to meet anticipated requests. Inventory management or control\nis a system to balance product needs with demand to minimize A. Inventory management\ncosts that arise from obtaining and holding inventory [1]. There In an inventory management system, several basic notions\nare several schools of thought that view inventory and its are recognized, including minimum and maximum stock level,\nfunctions differently. This paper presents a foundation for safety and reorder points and timing.",
      "size": 885,
      "sentences": 8
    },
    {
      "id": 6,
      "content": "ols of thought that view inventory and its are recognized, including minimum and maximum stock level,\nfunctions differently. This paper presents a foundation for safety and reorder points and timing. The basic function of a\ninventory processes modeling that views an inventory as an management system requires preserving items’ quantities and\nabstract machine, called a Thinging Machine (TM), with five maintains them in such a manner that they do not remain in\noperations that may include infrastructure of submachines. We stock for a long time, which would result in efforts waste (e.g.,\nclaim that such modeling, which is based on TM, facilitates delays in production, work and maintenance). Inventory cost\nunderstanding and serves as a base for consequent phases of an remains low when the correct quantities of products are\ninventory system’s design and development. A model is ordered at the right price and time.",
      "size": 919,
      "sentences": 6
    },
    {
      "id": 7,
      "content": "ing and serves as a base for consequent phases of an remains low when the correct quantities of products are\ninventory system’s design and development. A model is ordered at the right price and time. understood as an abstract view of a portion of reality that Control is established by fixing the minimum and\nenables developers to concentrate on relevant aspects of the maximum levels of stock. These levels are calculated based on\nsystem and discount needless complications [2]. historical data, the expected requirements and in view of the\ninventory’s condition. Reaching the minimum level may result\nin stock running out; reordering occurs in such a way that items\nare received before the stock volume reaches the minimum\nlevel. 1 | P a ge\nwww.thesai.org\n=== 페이지 2 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No.",
      "size": 859,
      "sentences": 8
    },
    {
      "id": 8,
      "content": "t items\nare received before the stock volume reaches the minimum\nlevel. 1 | P a ge\nwww.thesai.org\n=== 페이지 2 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nMinimum stock occurs when the stock falls below an In this section, several samples of inventory-related\nestablished critical level at which the enterprise processes may diagrams are presented. The purpose is not intended to give a\nbe harmed. In such an event, a warning is sent to management fair discussion of these examples; rather, the aim is to provide\nto exert further efforts or extra resources to ensure that the an awareness of the type and nature of conception and\nsituation is rectified. The maximum point is utilized to avoid depiction upon which this method is built. The samples will\nany superfluous stocks that may result in halting the flow of also provide the opportunity to contrast the diagramming\nitems.",
      "size": 941,
      "sentences": 8
    },
    {
      "id": 9,
      "content": "ized to avoid depiction upon which this method is built. The samples will\nany superfluous stocks that may result in halting the flow of also provide the opportunity to contrast the diagramming\nitems. Designated stock is maintained for safety considerations, techniques after presenting TM diagrams of our case study. especially for events such as a serious stoppage of operations Saraste [7] used the flowchart technique, which is “very\nor to maintain the reliability of supply. In most cases, it is equal flexible and easy to use” [7], as shown in Fig. 1. In the\nto minimum stock. The reordering process ensures that items inventory control environment, the modeling used by Saraste\nare not out of stock by taking into consideration current stock, [7] may not be suitable to model the system in a holistic way\nlead time and receiving time before reaching a minimum level. through developing a framework that is sufficiently inclusive.",
      "size": 935,
      "sentences": 9
    },
    {
      "id": 10,
      "content": "rrent stock, [7] may not be suitable to model the system in a holistic way\nlead time and receiving time before reaching a minimum level. through developing a framework that is sufficiently inclusive. Whatever the adopted inventory system, an organization In certain situations, the entire enterprise processes may be\nneeds a conceptual description that describes its real-world harmed by local event (e.g., stock goes below an established\ndomain and does not include any information technology critical level). Having knowledge of the entire view of the\naspects. It would be able to serve various levels of granularity system—something that is missing in flowcharting—can help\nand complexity, such as by serving as a guide for the management employ efforts and/or resources to prevent an\nsubsequent information systems specification, analysis, design adverse effect on a production situation. Another flowchart-\nand validation.",
      "size": 927,
      "sentences": 6
    },
    {
      "id": 11,
      "content": "he management employ efforts and/or resources to prevent an\nsubsequent information systems specification, analysis, design adverse effect on a production situation. Another flowchart-\nand validation. based representation is a sample of the Maximo diagram in an\nIBM Knowledge Center [8], as partially shown in Fig. 2. B. Problem and Solution\nFlowcharts were the target of many criticisms regarding their\nThis paper claims that current conceptual models of value in design and education [9-10] that have nearly led to\ninventory management systems lack comprehensiveness and their elimination. Lately, they have also been revived in the\ncompleteness. Additionally, a lack of conceptual representation form of a UML activity diagram. According to Storrle and\nof processes makes it more difficult for end users to understand Hausmann [11], “activity diagrams have always been poorly\nan existing process or simulate a new one.",
      "size": 920,
      "sentences": 9
    },
    {
      "id": 12,
      "content": "diagram. According to Storrle and\nof processes makes it more difficult for end users to understand Hausmann [11], “activity diagrams have always been poorly\nan existing process or simulate a new one. Accordingly, a high- integrated, lacked expressiveness, and did not have an adequate\nlevel conceptual language can contribute by filling some needs semantics in UML.”\nand acting as a foundation in this area of research. As a step in According to Patel [12], Entity Relationship (ER) modeling\nthis direction, the paper applies the recently developed TM that allows for the formation of high-level conceptual data models\nis based on the thinging machine notion and presents a that can be used to form a graphical representation for design,\ndifferent conceptualization of such. This paper advances the as seen in the initial ER diagram in Fig. 3.\ninventory management processes in a holistic way by\ndeveloping a framework that is sufficiently inclusive.",
      "size": 950,
      "sentences": 6
    },
    {
      "id": 13,
      "content": "ceptualization of such. This paper advances the as seen in the initial ER diagram in Fig. 3.\ninventory management processes in a holistic way by\ndeveloping a framework that is sufficiently inclusive. Generally, TM provides a diagrammatic representation of the Check storage Order? Order register Order process\nstatic, dynamic and control specifications at play in the (de ficiency recorded onto system and acceptance\nmanually)\ninventory management processes. To show the viability of the proposed methodology, we use No\nTM in an actual case study of an inventory management\nsystem that is currently being implemented using IBM … Picking into cart Supplies received in\n(ordered items) storage\nsoftware without an explicitly documented conceptual\ndescription. Fig.",
      "size": 762,
      "sentences": 7
    },
    {
      "id": 14,
      "content": "management\nsystem that is currently being implemented using IBM … Picking into cart Supplies received in\n(ordered items) storage\nsoftware without an explicitly documented conceptual\ndescription. Fig. 1 Order modeling using a flowchart (partially redrawn from [7])\nC. Appraoch\nApparently, it is very difficult to contrast the involved\nSupervisor\ndiagrammatic models because they are based, to a large extent, Start appr oval Stop\non factors such as understandability (that pertains to\nvisualization and graph completeness). A straightforward way Manager Purchasing\nto accomplish that is to put different diagrammatic depictions <$500 appr oval Dept. side-by-side and judge them accordingly. Therefore, we will …\ngive a few examples of current techniques so that, at the end,\nFig. 2 IBM Knowledge Center diagram that involves a flowchart\nwe are able to observe and contrast different samples.",
      "size": 890,
      "sentences": 7
    },
    {
      "id": 15,
      "content": "herefore, we will …\ngive a few examples of current techniques so that, at the end,\nFig. 2 IBM Knowledge Center diagram that involves a flowchart\nwe are able to observe and contrast different samples. (partially redrawn from [8])\nD. Sample diagrams\nToday, most companies utilize computer systems for\n… Make Employee\ninventory control in which withdrawals are recorded and the\ninventory balance is monitored. Orders are placed and the\nbalance of stock is updated by the computer. Modeling Product Make Order\ninventory processes is an active area of research that uses many …\nmethods, including flow charts, data flow diagrams, Universal Send to Supplier\nModeling Language (UML) diagrams, role interaction\nFig. 3 ER diagram (partially redrawn from [12])\ndiagrams, Gant charts and Integration DEFinition (IDEF) [6]. 2 | P a ge\nwww.thesai.org\n=== 페이지 3 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No.",
      "size": 939,
      "sentences": 8
    },
    {
      "id": 16,
      "content": "from [12])\ndiagrams, Gant charts and Integration DEFinition (IDEF) [6]. 2 | P a ge\nwww.thesai.org\n=== 페이지 3 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nNevertheless, difficulties in ER modeling (e.g., temporal It is inhabited by many tiny creatures, and it responds to the\naspects) are well known [13]. Rinardwiatma [14] used wind currents. The tree is a certain compilation of the threads\nworkflow process diagrams, such as the one shown in Fig. 4, to of life. It is a thing when we see it as a glimpse of life-in-\nintegrate inventory management in an IBM Maximo-based formation, never the same from one moment to the next [28]. system. It is not only the tree that is a machine, but also people,\nMost existing conceptual modeling methods use object- animals, towns, the sun and clouds, as well as day, night,\noriented methodology that employs UML as a foundation that feelings, numbers, atoms, data, etc.",
      "size": 972,
      "sentences": 10
    },
    {
      "id": 17,
      "content": "ting conceptual modeling methods use object- animals, towns, the sun and clouds, as well as day, night,\noriented methodology that employs UML as a foundation that feelings, numbers, atoms, data, etc. requires breaking the system structure and behavior into\nseveral types of diagrams, then further decomposing them into Warehouse Maintenance Procurement Supplier\nother diagrams. It is claimed that this approach has many Stock and non-stock purchases Order\nReceiving\nadvantages, such as simulating the modeler’s way of thinking processing\n[15] and contributing to the reduction of complexity in the\nStock\nrepresentation of technical systems and design processes [16]. Purchase\nFor example, Tchantchane [17] utilized UML use case, class, Requisition Purchase\nSOH against order\nstate and sequence diagrams in designing a sales ordering\nMin/Max\nsystem (as shown in Figs. 5-8). Non Stock\nNevertheless, According to Mordecai [18], there is a\n“significant inability of common conceptual modeling\nFig.",
      "size": 993,
      "sentences": 6
    },
    {
      "id": 18,
      "content": "diagrams in designing a sales ordering\nMin/Max\nsystem (as shown in Figs. 5-8). Non Stock\nNevertheless, According to Mordecai [18], there is a\n“significant inability of common conceptual modeling\nFig. 4 Inventory flow process (partially redrawn from [14])\nframeworks to appeal to practicing designers and analysts.”\nThese diagrams are completely heterogeneous with several\nMake a new Order\ndifferent conceptual bases. The purpose of this heterogeneity is\nto achieve a wide range of options for expression, depending Update Stock\nEdit Order\non the situation. Shoval and Kabeli [19] suggested a merger of\nView Orders\nthe data flow diagram, the ER diagram and object-oriented\nconstructs. The multiplicity of diagrams for the same dilemma Service an Order\nin UML is a known problem [20] that contrasts with providing\nFig. 5 Use case diagram (partially redrawn from [17])\na single, integrated diagrammatic representation that\nincorporates function, structure and behavior.",
      "size": 966,
      "sentences": 8
    },
    {
      "id": 19,
      "content": "n problem [20] that contrasts with providing\nFig. 5 Use case diagram (partially redrawn from [17])\na single, integrated diagrammatic representation that\nincorporates function, structure and behavior. The next section introduces TM to be used both as a Order Customers\nthinking style and as a vehicle for depicting the capturing\ninventory processes [21-26]. OrderDetail Item\n- itemCode\nII. THINGING MACHINE (TM) - Quantity\n- Price\nReality consists of a range of things, such as an externally\nexperienced object, situation, event or action, or a privately Fig. 6 Class diagram (partially redrawn from [17])\nexperienced sensation, mood, emotion, memory or thought. These things are the content of our wajood (existence). Some Place_ order\nof these things comprise others or they form an environment Made Invoiced\nor a place for others. Fig. 7 State diagram (partially redrawn from [17])\nThe thing tree takes the thing carbon dioxide from the thing\nair and gives it the thing oxygen.",
      "size": 979,
      "sentences": 10
    },
    {
      "id": 20,
      "content": "an environment Made Invoiced\nor a place for others. Fig. 7 State diagram (partially redrawn from [17])\nThe thing tree takes the thing carbon dioxide from the thing\nair and gives it the thing oxygen. We say that the tree receives\ncarbon dioxide from the air and releases and transfers oxygen :Frame\nto it. Also, the thing tree processes carbon dioxide to create\n:Frame main Place_order :Frame customer\noxygen. The tree in this case is a machine that releases, Place_order()\ntransfers, receives, processes and creates things. By the same\nPlace_order()\nSelect_customer()\nconceptual manner, the thing human being is a machine that\nreceives the thing oxygen and processes it to create the thing\nGet_all_items()\ncarbon dioxide that is released and transferred to the\natmosphere. These things/machines are called TMs. The\nmachine can be conceptualized as a lived atmosphere (i.e., Fig.",
      "size": 878,
      "sentences": 9
    },
    {
      "id": 21,
      "content": "the thing\nGet_all_items()\ncarbon dioxide that is released and transferred to the\natmosphere. These things/machines are called TMs. The\nmachine can be conceptualized as a lived atmosphere (i.e., Fig. 8 Sequence diagram (partially redrawn from [17])\nenvironment/space/capsule) of its things where they are\ncreated, processed, received, released or transferred. We\nd\nfi\ne\ng\ns\nu\nc\nr\nr\ne\ni b\ni\ne\ns\na\na g\nT\ne\nM\nne r\nd\na\ni\nl\na\niz\ng\na\nr\nt\na\ni\nm\non\nm\no\na\nf\nti c\nt\na\nh\nl\ne\nl y\nt y\na\np\ns\ni ca\nsh\nl\no\ni\nw\nnp\nn\nu t\ni\n-\nn\np ro\nF\nc\nig\nes\n. s-\n9\no\n. ut\nT\np\nh\nu\ne\nt\nCreate\nRelease\nOutput Inp ut Transfer\nmodel that is used in many scientific fields. The machine is\nconstructed from the sub-machines of flows including the\nmachine itself. Process\nMartin Heidegger [27] describes viewing a particular tree\nAccept Arrive Receive\nas, in our model, a machine. It is rooted in the earth with its\ntrunk rising up and branches splayed out, swaying in the wind. Fig.",
      "size": 940,
      "sentences": 11
    },
    {
      "id": 22,
      "content": "gger [27] describes viewing a particular tree\nAccept Arrive Receive\nas, in our model, a machine. It is rooted in the earth with its\ntrunk rising up and branches splayed out, swaying in the wind. Fig. 9 Thinging Machine\n3 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 4 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nThe (unproven) claim in TM modeling is that the five In our case study, Maximo modules are used to manage\noperations—create, process, release, transfer and receive—are inventory, including functions such as controlling inventory,\nsufficient to represent all activities in a machine. The only making purchases and tracking stock levels and contracts. justification for this is the diverse modeling of many systems\nthat appear in many publications, including the modeling Inventory is a central module in Maximo. It functions in a\ndynamic relationship with the preventive maintenance, work\ninventories in this paper.",
      "size": 992,
      "sentences": 9
    },
    {
      "id": 23,
      "content": "at appear in many publications, including the modeling Inventory is a central module in Maximo. It functions in a\ndynamic relationship with the preventive maintenance, work\ninventories in this paper. orders, contracts, purchasing and assets modules. Maximo\nThings that flow in TM refer to the exclusive (i.e., there is\ncan automate processes that are repetitive or occur at regular\none and only one) conceptual movement among the five\nintervals; for example, preventive maintenance, periodic\noperations (stages) shown in Fig. 10. It may be argued that\nthings (e.g., goods) can also be stored in addition to being\ninspections or reordering inventory items” [30]. created, processed, released, transferred and received.",
      "size": 717,
      "sentences": 7
    },
    {
      "id": 24,
      "content": "in Fig. 10. It may be argued that\nthings (e.g., goods) can also be stored in addition to being\ninspections or reordering inventory items” [30]. created, processed, released, transferred and received. In Maximo, inventory management is an important part of\nHowever, because stored is not a generic operation, things can\nmaintaining any asset for which the inventory module in\nbe stored after being created, hence becoming stored created\nMaximo tracks the required materials (e.g., monitoring reorder\ndata, or, after being processed, becoming stored processed\npoints, purchase requisitions and purchase orders; tracking the\ndata and so on. When all arriving things are accepted, then\nmovement of items into and out of inventory; issuing work\narrive and accept are represented by receive. orders; etc.). Create (emerge) is one starting point of a thing in a\nTM and Maximo have a completely different conceptual\nmachine, in addition to being imported (transfer/receive) from\nview.",
      "size": 976,
      "sentences": 8
    },
    {
      "id": 25,
      "content": "receive. orders; etc.). Create (emerge) is one starting point of a thing in a\nTM and Maximo have a completely different conceptual\nmachine, in addition to being imported (transfer/receive) from\nview. Maximo-based systems utilize different types of\nthe outside. Through creation and importing the system\ndiagrams to document and describe various applications,\n(machine) becomes aware (recognition) of a new thing in the\nincluding inventory management systems. Assuming\nmachine. Additionally, a thing “disappears” from the “radar”\nknowledge of basic Maximo terms, consider a difference in\nof a machine, either when it is de-created (e.g., deleted) or by\nterms of Maximo location and asset (e.g., a bank as the\ndeparting (release/transfer). Note that a thing can be released,\nlocation).",
      "size": 783,
      "sentences": 8
    },
    {
      "id": 26,
      "content": "in\nof a machine, either when it is de-created (e.g., deleted) or by\nterms of Maximo location and asset (e.g., a bank as the\ndeparting (release/transfer). Note that a thing can be released,\nlocation). From the standpoint of IBM Maximo, a location is a\nbut not transferred (e.g., finished goods waiting to be shipped\nphysical place, an operating position where equipment resides\nwhen a truck arrives) or a thing being transferred (input), yet\n[31]. It is a place where assets are operated, stored or repaired. not arriving (e.g., an email arriving, but an error preventing\nFig. 10 contrasts the conceptualization of a location and an\nthe recipient from accessing it). asset. In TM, the location is a machine while the asset is a\nProcess means that the machine changes the thing in a\nsubmachine and a thing that flows. certain way. For example, a doctor machine processes a\nIn TM, an inventory system is a machine that serves other\npatient to decide how to treat him/her.",
      "size": 968,
      "sentences": 10
    },
    {
      "id": 27,
      "content": "thing in a\nsubmachine and a thing that flows. certain way. For example, a doctor machine processes a\nIn TM, an inventory system is a machine that serves other\npatient to decide how to treat him/her. machines by managing their input/output flows so that they are\nEach type of flow of things is distinguished and separated\nnear steady states. Ideally, flows in its stewarded machines are\nfrom other flows. No two streams of flow are mixed, just as\nnever stopped or slowed due to a lack of item supply. The\nlines of electricity and water are separated in buildings’\nmachine also ensures that the supply does not clog them with\nblueprints. However, two types of things can enter a machine\noverstocked items. of a super type of thing (e.g., integers and real numbers flow\nto a number machine). A TM does not need to include all of\nLocation\nthe stages; for example, an archiving system might only use\nt\nc\nh\nr\ne\ne at\ns\ne\nt\n)\na\n.",
      "size": 921,
      "sentences": 10
    },
    {
      "id": 28,
      "content": "thing (e.g., integers and real numbers flow\nto a number machine). A TM does not need to include all of\nLocation\nthe stages; for example, an archiving system might only use\nt\nc\nh\nr\ne\ne at\ns\ne\nt\n)\na\n. g es transfer, receive, release and process (i.e., not\nL ocation\nCreat e R\nA\ne\ns\nle\ns\na\ne\nse\nt\nOutput\nTran s f\nI\ne\nn\nr\np ut\nMultiple machines can interact with each other through\nflows or by triggering stages. Triggering is a transformation Asset Proces s Accept A rrive Receive\n(denoted by a dashed arrow) from one flow to another (e.g., a\nflow of electricity triggers a flow of air). (a) Maximo (b) TM\nIII. INVENTORY IN IBM MAXIMO Fig. 10 Maximo and TM representations of location and asset (The\nleft part is a partially redrawn part of a figure [31])\nThis section applies TM to model an actual inventory\nsystem. The system extends over physical and digital spheres,\nIV. CASE STUDY\nwhere it flows across different machines changing their forms.",
      "size": 945,
      "sentences": 9
    },
    {
      "id": 29,
      "content": "[31])\nThis section applies TM to model an actual inventory\nsystem. The system extends over physical and digital spheres,\nIV. CASE STUDY\nwhere it flows across different machines changing their forms. The TM representation is applied to the process of\nThis paper assesses a case study that uses IBM Maximo, an\nresponding to an approved requested order arriving from its\nasset management software system. In Maximo, nodes can\ndepartment to the commercial department. Accordingly, the\nrepresent various points in a business process (e.g., start node,\ncommercial department checks the inventory for the request. condition node, interaction node, sub-process node, task node\nThree possible cases are based on the inventory status: the\nand stop node). A workflow process is created by interweaving\nrequested items are available, partially available or not\nnodes and connection lines within the workflow. There are\navailable.",
      "size": 917,
      "sentences": 9
    },
    {
      "id": 30,
      "content": "tatus: the\nand stop node). A workflow process is created by interweaving\nrequested items are available, partially available or not\nnodes and connection lines within the workflow. There are\navailable. These cases can be modeled using a TM to produce\nmany notions: person records, role records, action records,\nTMs that involve the inventory system (as shown in Fig. 11). communication templates, notifications, escalations and action\ngroups, etc. Also, there are many actions (e.g., create, change,\nA. A request arrives and current inventory is checked\nincident, problem, service request and work order) [29]. Fig. 12 describes the general process of this case study. It is\nexpanded into three cases that are explained in the following\n4 | P a ge\nwww.thesai.org\n=== 페이지 5 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nsub-sections.",
      "size": 894,
      "sentences": 13
    },
    {
      "id": 31,
      "content": "ses that are explained in the following\n4 | P a ge\nwww.thesai.org\n=== 페이지 5 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nsub-sections. As shown in the figure, an approved request of an\nitem (circle 1) from the requesting department (2) flows (3) to\nWhen requested items are available. the commercial department system (4) to check the inventory Requester\ncontrol. The commercial department system, in this case study, When requested items are not available,\nFigs. is responsible for managing the inventory and ordering items. 12\nRequester\nput the request in pending queue. Once the approved request is received, the commercial and When requested items are partially Queue of\ndepartment triggers (5) a check of the inventory status (6) in 15 available, then send available items Pending\nand put the rest of the requests in the Requests\nthe inventory machine (7) to examine the current stock (8) of pending queue.",
      "size": 976,
      "sentences": 9
    },
    {
      "id": 32,
      "content": "e inventory status (6) in 15 available, then send available items Pending\nand put the rest of the requests in the Requests\nthe inventory machine (7) to examine the current stock (8) of pending queue. available items that pertain to the request, which is a global\nvariable and is initially set to zero. The current stock is Fig. Vendor\nItems are received fr om the vendor that\n16 requires retrieving pending requests and\nprocessed and compared to the minimum level of the inventory\nRequester\nsending requested items. (9). The minimum level is considered a point of emergency . (i.e., when a certain item volume reaches a level that is\nFig. 11 Different portions of the inventory system\nconsidered below critical).",
      "size": 712,
      "sentences": 8
    },
    {
      "id": 33,
      "content": "s. (9). The minimum level is considered a point of emergency . (i.e., when a certain item volume reaches a level that is\nFig. 11 Different portions of the inventory system\nconsidered below critical). The availability cases based on this\ncomparison are:\nReceive\nTransfer 1 A pproved Reques t 2 Requesting Department\nTransfer\n3 4 Commercial Department\nTransfer\nReceive\n5\nTransfer\n7\nReceiv e\nRelease 25\nIf Curre\nP\nn\nr\nt\no\nS\nc\nt\ne\no\nss\nc\n:\nk <\n8\n= Min\n24 Transfer\n1\n1 Release 10 Els e (Current Stock > Min)\nTransfer Tran sfer\nProcess Rece ive Tran sfer 6 Inventory Status\n27\nadd 1\nT\nP\nr\nr\na\no\nn\nc\ns\ne\nf\ns\ne\ns\nr\n2\n1\n6\nR\nPr\ne\no\nc\nc\ne\ne\niv\nss\ne\n11 C\nS\nu\nt\nr\no\nr\nc\ne\nk\nn t\n1 Rece ive Requested 9\nNumber of\nQ\nR\nP\ne\ne\nu\nq\nn\nu\ne\nd\ne\ni\nu\nn\ns\ne\nt\ng\ns\nPe n\nI\nd\nn\nQ\ni\ns\nP\nn\nu\ne\nr\ng\nr\ne\no\nt\nu\nR\nc\nr\ne\ne\ne\ne\ns\nq\no\nq\ns\nu\nf\n:\nu\ne\ne\ns\ns\nt\nt\n2\ns\n1\n8\nT\nT\nR\nR P\nr\nr\ne\nr e\na\na\no\nc\nl\nn\nn\ne c\ne\ns\ns\na e\ni\nf\nf\nv\ns s\ne\ne\ne\ne\ns\nr\nr\nQua\n1\nn\n2\nt ity\nMin\n1 3\nDecision Transfer\n14\nRequests Queue Receive\nProcess:\nTransfer Transfer\n15 New Stock = Current Stock – Requested Quantity New Stock Rele ase\nCase 1 (see description below)\n18 17\n16 If New Stock >= Min (full response to the request)\nRelease\n19 If New Stock < Min (partial response to the request) 21\n20 Available Quantity = Current Stock – Minimum\nAvailable\n1\nProcess\n2\n1\n3 2\n1\n2 Pending Quantity = Requested Quantity – Available Quantity\nPending\nInventory\nFig.",
      "size": 1386,
      "sentences": 5
    },
    {
      "id": 34,
      "content": "(partial response to the request) 21\n20 Available Quantity = Current Stock – Minimum\nAvailable\n1\nProcess\n2\n1\n3 2\n1\n2 Pending Quantity = Requested Quantity – Available Quantity\nPending\nInventory\nFig. 12 General TM representation of the inventory control case study\n5 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 6 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\n If the current stock of the request is above the Event 5 (E ): The new stock is calculated. 5\nminimum level: The request is processed (11) to extract Event 6 (E ): The new stock is = or > than the minimum. 6\n(12) the requested quantity that flows to a decision Event 7 (E ): Items are sent to the requester. 7\nmachine (13), which also receives the current stock value Event 8 (E ): The new stock is less than the minimum. 8\n(14).",
      "size": 854,
      "sentences": 8
    },
    {
      "id": 35,
      "content": "ntity that flows to a decision Event 7 (E ): Items are sent to the requester. 7\nmachine (13), which also receives the current stock value Event 8 (E ): The new stock is less than the minimum. 8\n(14). In the decision machine, the new stock is calculated Event 9 (E ): The available and pending quantities are\n9\nas the current stock minus the requested quantity (15). The calculated, and the request is modified and sent to the queue\nnew stock is considered a global variable and is initially system. set to zero. Event 10 (E ): The quantity (circle 25 in Fig. 12) is equal to\n10\n Accordingly, or less than the minimum. (i) If the new stock is equal or above minimum (16), Event 11 (E11): The request is added to the queue system. meaning that there are enough items to be delivered, Fig. 15 shows the chronology of these events.",
      "size": 828,
      "sentences": 11
    },
    {
      "id": 36,
      "content": "new stock is equal or above minimum (16), Event 11 (E11): The request is added to the queue system. meaning that there are enough items to be delivered, Fig. 15 shows the chronology of these events. It can be\nthen the decision machine triggers the release of the used in the execution and control (event operations) of events\nrequested items (17) to be directly delivered to the as exemplified in the figure. While a machine machines,\nrequesting department and the replacement of the current control is an awareness of this machining that creates second-\nstock by the new stock (18). level machining. (ii) If the new stock is less than the minimum (19), then a\npartial response to the request is possible: C. If new stock for the request is below minimum\n- The available quantity of items is calculated (20) as Fig. 16 models the machine in which the new calculated\n(the current stock minus the minimum) and released stock is less than the minimum (circle 19 in Fig. 12).",
      "size": 971,
      "sentences": 9
    },
    {
      "id": 37,
      "content": "uantity of items is calculated (20) as Fig. 16 models the machine in which the new calculated\n(the current stock minus the minimum) and released stock is less than the minimum (circle 19 in Fig. 12). In this\n(21) to the requesting department (assuming it accepts case, as shown in Fig. 16, the quantity of items available is\nthat). insufficient to be delivered to the requestor. Therefore, the\n- The pending quantity is calculated as the requested request is partially satisfied by sending the available stock (the\nquantity minus the available quantity (22). The request current stock minus the minimum) to the requestor (circles 1\nis processed (23) to make it an inquiry for pending and 2). Moreover, the updated current stock (3), which is now\nquantity and is sent to the queue system (24).",
      "size": 792,
      "sentences": 9
    },
    {
      "id": 38,
      "content": "e minimum) to the requestor (circles 1\nis processed (23) to make it an inquiry for pending and 2). Moreover, the updated current stock (3), which is now\nquantity and is sent to the queue system (24). equal to the minimum, and the number of pending items (the\n If the current stock of the request is equal to, or less requested quantity minus available quantity (4) are sent to the\nthan, the minimum level: The request is sent to the queue supervisor to decide upon making new supply order (5). system (26), where it is processed to increment the number The supervisor applies the company’s inventory policy (6),\nof queued requests (27) and to add the request to the queue which is based on statistics that pertain to the ordering level,\n(28). the minimum level and the maximum level. The maximum\nlevel is set according to the average of historical data to\nB. Modeling events maintain the number of items typically on hand in recent\nFig.",
      "size": 937,
      "sentences": 7
    },
    {
      "id": 39,
      "content": "(28). the minimum level and the maximum level. The maximum\nlevel is set according to the average of historical data to\nB. Modeling events maintain the number of items typically on hand in recent\nFig. 11 in the previous sub-section reflects a static structure years. These levels are determined by the commercial\nof distributing orders among the three cases. To model the manager. dynamic behavior of the case when a request arrives and the The supervisor (7) decides whether to issue a request for\ncurrent inventory is processed, we need the notion of a quotation (RFQ) (8). Moreover, the supervisor assigns (8) an\nmachine being-in-time. In being-in-time, the machine not only employee from the commercial department as the declared\ncreates, processes, receives, releases and/or transfers, but it also buyer (9 –bottom right of the figure) who is tasked with the\nmachines (habitually does these operations again and again). responsibility of the transaction for this RFQ.",
      "size": 971,
      "sentences": 11
    },
    {
      "id": 40,
      "content": "and/or transfers, but it also buyer (9 –bottom right of the figure) who is tasked with the\nmachines (habitually does these operations again and again). responsibility of the transaction for this RFQ. The RFQ flows\nTime in TM is a thing that can be created, processed, released, to the team leader (10) to be further processed. transferred and received. Consider the request has arrived and  If the requesting supervisor does not have the authority for\nreceived in the commercial department, which can be such a type of RFQ (11), then it is canceled (12) by the team\nrepresented as shown in Fig. 13. leader and a cancellation note is created and sent to the\nAn event is a machine in a TM that contains at least three supervisor. submachines: the time, the region and the event itself. The  If the specification of the RFQ is incorrect (13), then it is\nregion is where the event takes place. The event in Fig.",
      "size": 909,
      "sentences": 9
    },
    {
      "id": 41,
      "content": "three supervisor. submachines: the time, the region and the event itself. The  If the specification of the RFQ is incorrect (13), then it is\nregion is where the event takes place. The event in Fig. 13 rejected and a rejection note is sent (14) to the supervisor\nincludes the three machines: the region of the event (circle 1), in order to modify the RFQ specifications. Once the RFQ\nwhich is a subdiagram of Fig. 12; the (real) time submachine is modified (15), it is sent back (16) to the team leader. (2); and the event submachine itself (3/green). It was\npreviously stated in section two that the machine is constructed\n2 Time\nfrom the submachines of flows, including the machine itself. The machine itself is distinct from all of the submachines Transfer Receive Process Release Transfer\nwithin. For simplicity’s sake, an event will be represented only\nby its region. Create\nAccordingly, we can identify the events in Fig. 14 as Transfer 1\nfollows.",
      "size": 953,
      "sentences": 13
    },
    {
      "id": 42,
      "content": "nsfer Receive Process Release Transfer\nwithin. For simplicity’s sake, an event will be represented only\nby its region. Create\nAccordingly, we can identify the events in Fig. 14 as Transfer 1\nfollows. Commercial Department 3 Process\nEvent 1 (E\n1\n): A request is received. Receive\nRegi on\nEvent 2 (E ): The inventory status is checked. Event\n2\nEvent 3 (E ): The current stock exceeds the minimum. 3\nEvent 4 (E ): The request is sent to the decision procedure. Fig. 13 The event: The request has arrived and received in the\n4\ncommercial department\n6 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 7 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No.",
      "size": 685,
      "sentences": 11
    },
    {
      "id": 43,
      "content": "st has arrived and received in the\n4\ncommercial department\n6 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 7 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nReceive\nTransfer Ap proved Request Requesting Department\nTransfer\nE Comm ercial Department E\n1 Transfer 7\nReceive Transfer\nReceiv e\nE\nProcess: 2\nRelease If Cu rrent Stock <= Min\nE\n11\nTran sfer\nRelease Else (C u rrent Stock > Min) E\nTransfer Tran sfer 3\nP\na\nro\nd\nc\nd\ne\n1\nss R\nPr\ne\no\nc\nc\ne\ne\niv\nss\ne T\nR\nP\nr\nr\ne\na\no\nc\nn\nc\ne\ns\ne\ni\nf\nv\ns\ne\ns\ne\nr I nventor y Status\nCurrent\nTransfer\nStock\nRece ive Req uested\nNumber of\nR\nP\ne\ne\nq\nn\nu\nd\ne\nin\nst\ng\ns Ins\nP\ne\nr\nr\no\nt\nc\nr\ne\ne\ns\nq\ns\nu\n:\nest Transfer\nQuantity\nRece ive\nE\nQueue\nPend\nQ\nin\nu\ng\ne u\nR\ne\ne\no\nq\nf\nu ests T\nR P\nr\nr e\na\no l\nn\ne c\ns\na e\nf\ns s\ne\ne s\nr\nMin\n12 E\n4\nTransfer\nDecision\nReceive\nE\n5 New Stock = Current Stoc\nP\nk\nr o\n–\nc e\nR\nss\ne\n:\nq ue sted Quantity New Stock\nT\nR\nr\ne\na\nl\nn\ne\ns\na\nf\ns\ne\ne\nr Tran sfer\nE\n6 If New Stock >= Min (full response t o the request)\nRele ase\nE\nIf New Stock < Min (p artial response to the request)\n8\nAvailable\nE\nAvailable Quantity = Current Stock – Min imum\n10\nProc ess\nPending Quantity = Requested Quantity – Available Qu antity\nE\nPending Inventory\n9\nFig.",
      "size": 1251,
      "sentences": 3
    },
    {
      "id": 44,
      "content": "< Min (p artial response to the request)\n8\nAvailable\nE\nAvailable Quantity = Current Stock – Min imum\n10\nProc ess\nPending Quantity = Requested Quantity – Available Qu antity\nE\nPending Inventory\n9\nFig. 14 Events of the FM representation of the inventory control case study\nE\n1\nIf the specifications are still incorrect (17), then another Receiving time (T1)\nrejection process is repeated (18). Otherwise, it is E 2\napproved (19). E 3 E 10\n If the RFQ is neither cancelled nor rejected (20), then it is E 4\napproved (21) by the team leader. Approvals flow to the\nsupervisor (22 - copy) and to the manager (23) for further E 5\nprocessing. E\n8\n The same cycle of the team leader’s actions is repeated for E\n6 E E\nthe manager (24) and its description is omitted here. 9 11\nE\nAssuming that the manager approves the RFQ, the\n7\nDelivery time (T2), If (T2 – T1) > week then report. approval is sent to the supervisor (25 – copy) and to the\ndeclared buyer (26) who was specified by the supervisor. F ig.",
      "size": 994,
      "sentences": 9
    },
    {
      "id": 45,
      "content": "r approves the RFQ, the\n7\nDelivery time (T2), If (T2 – T1) > week then report. approval is sent to the supervisor (25 – copy) and to the\ndeclared buyer (26) who was specified by the supervisor. F ig. 15 The chronology of events of TM representation of the\ninventory control case\n7 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 8 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\nRequesting Department\nCommercial Department 2\nInventory Inventory Section\nSupe rvisor 1\nDecision 5 Available\nRele ase Tran sfer\nProcess: 6\nIf\nl\no\nev\nrd\nel\ne r\nis\nin\nr\ng\ne a\nle\nc\nv\nh\ne\ne\nl\nd\no\no\nr\nr\nm\nif\ni n Policy 3\npending items exist Current Stock Case:\nCreate\n4\nPending\nNew Stock < Minimum\n8 Cre ate\n7\nT\nR\nr\ne\na\nl\nn\ne\ns\na\nf\ns\ne\ne\nr\nRFQ\n10 Transfer Receive If em p\n1\n. 1\nn ot auth.",
      "size": 821,
      "sentences": 7
    },
    {
      "id": 46,
      "content": "e\nl\nd\no\no\nr\nr\nm\nif\ni n Policy 3\npending items exist Current Stock Case:\nCreate\n4\nPending\nNew Stock < Minimum\n8 Cre ate\n7\nT\nR\nr\ne\na\nl\nn\ne\ns\na\nf\ns\ne\ne\nr\nRFQ\n10 Transfer Receive If em p\n1\n. 1\nn ot auth. P r\nI\no\nf\nc\ns\ne\np\ns\ne\ns\nc\n:\ns in\n1\nc\n3\nor rect Else\n2 0\nReceive Transfer 12 Transfer R\nC\ne\na\nl\nn\ne\nc\na\ne\nse\nl\nCreate\nRej e\nC\nc\nr\nt\ne ate\nT\nR\nra\ne\nn\nj e\nsf\nc\ne\nt\nr 14 T\nR\nr\ne\na\nl\nn\ne a\nsf\ns\ne\ne\nr\nRece ive\nProc ess Team Leader 18\ne ta e rC e sa e le R re fsn a rT 16 Transfer Receive Process: If sp 1 e 7 c s. inco E r l r s e e c t Ap 2 p C r 1 r o e v a a te l\nModified RFQ\n15\n19 Rele ase\nApproval 1 Tran sfer\nReceive Transfer 22\n23\nTransfer Receive If em p. not auth. P r\nI\no\nf\nc\ns\ne\np\ns\ne\ns\nc\n:\ns incorrect Else\nReceive Transfer Transfer R\nC\ne\na\nl\nn\ne\nc\na\ne\nse\nl\nCreate\nRej e\nC\nc\nr\nt\ne ate\nT\nR\nra\ne\nn\nj e\nsf\nc\ne\nt\nr\nT\nR\nr\ne\na\nl\nn\ne a\nsf\ns\ne\ne\nr\nRece ive\nProcess 24 Manager\ne ta e rC e sa e le R re fsn a rT Transfer Receive Process: If specs.",
      "size": 944,
      "sentences": 4
    },
    {
      "id": 47,
      "content": "a\nl\nn\ne\nc\na\ne\nse\nl\nCreate\nRej e\nC\nc\nr\nt\ne ate\nT\nR\nra\ne\nn\nj e\nsf\nc\ne\nt\nr\nT\nR\nr\ne\na\nl\nn\ne a\nsf\ns\ne\ne\nr\nRece ive\nProcess 24 Manager\ne ta e rC e sa e le R re fsn a rT Transfer Receive Process: If specs. inco E r l r s e e c t App C r r o e v a a te l\nModified RFQ Rele ase\nReceive Transfer 25\nApproval 2 Tran sfer\n26\nTransfer Receive\nProcess:\n27\nAssign details to RFQ\nReceive Transfer 29 T\nL\nra\nT\nn\nS\ns\nA\nfe r\nr ead\nR\ny\ne\nv\nl\ne\ne\nr\na\ns\ns\ni\ne\no n\nCreate 28\nCreate 9 Declared Buyer\n30\nVendor\nFig. 16 TM representation of the case if the new stock for the request is below the minimum\n. 8 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 9 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\n The declared buyer is responsible for assigning more\ndetails in the RFQ (27), which triggers the creation Note that the loop of events for every request in the queue\n(28) of a long-term supply agreement (LTSA) (28).",
      "size": 956,
      "sentences": 6
    },
    {
      "id": 48,
      "content": "er is responsible for assigning more\ndetails in the RFQ (27), which triggers the creation Note that the loop of events for every request in the queue\n(28) of a long-term supply agreement (LTSA) (28). is represented as a second order control over the events\nThe LTSA does not need a bidding process because it required for each request. is agreed upon with a specific vendor as a single The thick horizontal bar at the bottom of Fig. 17 indicates\nsource. It is called long-term because the contract the possible parallelism of E , E and E . All of these events\n5 6 7\nwith the vendor states that the price of the requested should end before starting another round of the loop. items shall be fixed for a specific number of years. The LTSA is sent to the supervisor (29 - copy), then\nE\nthe specified vendor (30). The vendor creates his own\n1\ncycle of preparing and shipping the ordered items\nFor every pending request while current\nquantity =< minimum\naccording to a specified time limit.",
      "size": 985,
      "sentences": 9
    },
    {
      "id": 49,
      "content": "specified vendor (30). The vendor creates his own\n1\ncycle of preparing and shipping the ordered items\nFor every pending request while current\nquantity =< minimum\naccording to a specified time limit. E\n2\nD. TM representation of receiving the ordered items from\nthe vendor E 3\nFig. 17 shows the TM representation after receiving the E1\nordered items from the vendor. Once the vendor (1) delivers E 4\nthe items (2), the current stock is updated (3). The pending\nrequests (4) in the queue are released (5), one by one, to be E E E\n5 6 7\nprocessed to extract the requested quantity (6). Each request is\nprocessed to determine its quantity. Furthermore, the quantity\nis processed (7) to release the corresponding number of items\nin the queue (8). Additionally, the quantity flows to update the Fig. 19 The events and their control after receiving the\ncurrent stock (9) and the total pending items (10). Fig.",
      "size": 901,
      "sentences": 11
    },
    {
      "id": 50,
      "content": "ding number of items\nin the queue (8). Additionally, the quantity flows to update the Fig. 19 The events and their control after receiving the\ncurrent stock (9) and the total pending items (10). Fig. 18 requested items from the vendor\nshows the events after receiving the requested items from the . vendor. Fig. 19 displays the control over this sequence. 1 Vendor Requesting Department\nTotal\nPr oc ess Proc ess\nTransfer\nNumber of Wa iting Requests Q\nPe\nu\nn\na\nd\nn\ni\nt\nn\nit\ng\ny Receive Receive\nC\nS\nu\nt\nr\no\nr\nc\ne\nk\nn t\n2\nProcess Tran sfer Tran sfer 3 Receive\n10 9\nInventory\nIndividua l Pending\nT\nR\nr\ne\na\nl\nn\ne\ns\na\nf\ns\ne\ne\nr R\nQ\ne\nu\nq\na\nu\nn\ne\nt\ns\ni\nt\nt\ne\ny\nd\nTran sfer\n4\n6\nRequests\nPro c ess 8 Release\n5\nDB\nr\no\ne\nf\nq\np\nu\ne\nes\nn\nt\nd\ns\ni ng Rele ase Proc ess Cre ate Proc ess Cr e ate 7\nFig. 17 TM representation of receiving the re quested items from the vendor\n.",
      "size": 859,
      "sentences": 10
    },
    {
      "id": 51,
      "content": "sfer\n4\n6\nRequests\nPro c ess 8 Release\n5\nDB\nr\no\ne\nf\nq\np\nu\ne\nes\nn\nt\nd\ns\ni ng Rele ase Proc ess Cre ate Proc ess Cr e ate 7\nFig. 17 TM representation of receiving the re quested items from the vendor\n. Requesting\nVendor Department\nE\n6\nE\n7\nE\n1\nProcess Process\nTotal Transfer\nPending Current\nNumber of W aiting Requests Quantity Receive Receive Stock\nProcess\nTran sfer Tran sfer\nReceive\nE\n5\nE\nE 3 Inventory\n2\nIndividua l Pending\nT\nR\nr\ne\na\nl\nn\ne\ns\na\nf\ns\ne\ne\nr R\nQ\ne\nu\nq\na\nu\nn\ne\nt\ns\ni\nt\nt\ne\ny\nd\nTran sfer\nRequests\nProcess Release\nDB of pending\nRelease Process Create Process Cre ate E\nrequests\n4\nFig. 18 The events after receiving the requested items from the vendor\n. 9 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 10 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No.",
      "size": 803,
      "sentences": 6
    },
    {
      "id": 52,
      "content": "nts after receiving the requested items from the vendor\n. 9 | P a ge\nwww.thesai.org\n[표 데이터 감지됨]\n\n=== 페이지 10 ===\n(IJACSA)International Journal of Advanced Computer Science and Applications\nVol. 9, No. 11, November 2018\n[13] H. Quang and T. Pham, “Expressing a temporal entity-relationship\nV. CONCLUSION model as a traditional entity-relationship model,” in M. Núñez, N.\nNguyen, D. Camacho, and B. Trawiński (eds), “Computational\nThis paper demonstrates the viability of TM modeling for collective intelligence. Lecture notes in computer science,” vol. 9330.\ninventory management processes. The resultant conceptual Springer, Cham, 2015.\nmodel covers the static, dynamic and control of these [14] Y. Rinardwiatma and S. Kocharanchitt, “How IBM Maximo helped this\nprocesses. This feature of notions’ uniformity, based on the Indonesian mining company save over $70 million on inventory in two\nyears,” IBM InterConnect 2017 Conference, March 19 – 23, Las Vegas.",
      "size": 957,
      "sentences": 8
    },
    {
      "id": 53,
      "content": "is\nprocesses. This feature of notions’ uniformity, based on the Indonesian mining company save over $70 million on inventory in two\nyears,” IBM InterConnect 2017 Conference, March 19 – 23, Las Vegas. simplicity of the TM with its five stages, sets the modeling\n[15] A. Kusiak, E. Szczerbicki, and R. Vujosevic, “Intelligent design\nmethodology apart from the heterogeneous diagrammatic\nsynthesis: An object-oriented approach,” Int. J. Production Res., vol. 29,\nrepresentations (e.g., UML) that were displayed in section two\npp. 1291–1308, 1991.\nof the paper. Further research will establish different potential\n[16] Y. P. Khanal, “Object-oriented design methods for human centered\nbenefits of the TM approach. engineering,” Ph.D. thesis, Ontario, Canada: University of Western\nOntario, 2010.",
      "size": 790,
      "sentences": 9
    },
    {
      "id": 54,
      "content": "ifferent potential\n[16] Y. P. Khanal, “Object-oriented design methods for human centered\nbenefits of the TM approach. engineering,” Ph.D. thesis, Ontario, Canada: University of Western\nOntario, 2010. REFERENCES [17] A. Tchantchane, “Case study: Design and implementation of an ordering\n[1] Encyclopedia of Management, INVENTORY MANAGEMENT, system using UML, formal specification and Java builder,” SETIT 2005,\nAdvameg, Inc., 2018. 3rd International Conference: Sciences of Electronic,Technologies of\nhttp://www.referenceforbusiness.com/management/Int-Loc/Inventory- Information and Telecommunications, March 27 – 31, 2005, Tunisia. Management.html [18] Y. Mordecai, “Cyber-physical disruption modeling, analysis, and\n[2] J. Mukerji and J. Miller, “MDA guide version 1.0.1.,” OMG, 2003. management: An evolutionary object-process model-based robust\nhttp://www.omg.org/docs/omg/03-06-01.pdf. systems engineering approach,” Ph.D. thesis, Israel Institute of\nTechnology, February 2016.",
      "size": 981,
      "sentences": 6
    },
    {
      "id": 55,
      "content": "03. management: An evolutionary object-process model-based robust\nhttp://www.omg.org/docs/omg/03-06-01.pdf. systems engineering approach,” Ph.D. thesis, Israel Institute of\nTechnology, February 2016. [3] A. Muravjovs, “Inventory control system analysis using different\nsimulation modelling paradigms,” Doctoral thesis, Transport and [19] P. Shoval and J. Kabeli, “FOOM: Functional- and object-oriented\nTelecommunication Institute, 2015. analysis & design of information systems: An integrated methodology,”\nhttps://www.tsi.lv/sites/default/files/editor/science/PhD/Muravjovs/mura Journal of Database Management, vol. 12, no. 1, pp.15 – 25, 2001.\nvjovs_promotion_full.pdf [20] D. Dori, “Why significant UML change is unlikely. Communications of\n[4] G. Guizzardi, H. Herre, amd G. Wagner, “Towards ontological the ACM,” vol. 45, no.",
      "size": 830,
      "sentences": 7
    },
    {
      "id": 56,
      "content": "15 – 25, 2001.\nvjovs_promotion_full.pdf [20] D. Dori, “Why significant UML change is unlikely. Communications of\n[4] G. Guizzardi, H. Herre, amd G. Wagner, “Towards ontological the ACM,” vol. 45, no. 11, pp.82 – 85, 2002.\nfoundations for UML conceptual models,” in R. Meersman and Z. Tari [21] S. Al-Fedaghi and M. BehBehani, “Thinging machine applied to\n(eds) On the Move to Meaningful Internet Systems 2002: CoopIS, DOA, information leakage,” Int. J. Adv. Comp. Sci. and Applics. (IJACSA),\nand ODBASE. OTM 2002. Lecture Notes in Computer Science, vol vol. 9, no. 9, pp. 101–110, 2018. 2519. Berlin, Heidelberg: Springer, 2002. [22] S. Al-Fedaghi and H. Almutairi, “Diagramming language for process\n[5] I. Hadar and P. Soffer, “Variations in conceptual modeling: documentation,” 15th Int. Conf. on Appl. Comp. (AC 2018), Budapest,\nClassification and ontological analysis,” in Journal of the Association Hungary, 21–23 October, 2018.\nfor Information Systems, vol. 7, no. 8, August 2006, pp. 569-593.",
      "size": 999,
      "sentences": 24
    },
    {
      "id": 57,
      "content": "ppl. Comp. (AC 2018), Budapest,\nClassification and ontological analysis,” in Journal of the Association Hungary, 21–23 October, 2018.\nfor Information Systems, vol. 7, no. 8, August 2006, pp. 569-593. [23] S. Al-Fedaghi and H. Aljenfawi, “A small company as a thinging\n[6] “Knowledge based systems, Inc.,” http://www.idef.com/IDEF0.htm. machine,” 10th Int. Conf. on Info. Mgmt. and Eng. (ICIME), University\nIDEF Integrated DEFinition Methods. of Salford, Manchester, England, September 22 – 24, 2018.\nhttp://www.idef.com/pdf/idef0.pdf, 2010. [24] S. Al-Fedaghi and M. Alsharah, “Security processes as machines: a case\n[7] S. Saraste, “A framework for evaluating inventory management in study,” Eighth Int. Conf. on Innov. Comp. Technol. (INTECH), London,\nhealthcare case: HUS Logistics,” Master’s thesis, Department of England, August 15–17, 2018.",
      "size": 846,
      "sentences": 20
    },
    {
      "id": 58,
      "content": "or evaluating inventory management in study,” Eighth Int. Conf. on Innov. Comp. Technol. (INTECH), London,\nhealthcare case: HUS Logistics,” Master’s thesis, Department of England, August 15–17, 2018. Information and Service Economy, Aalto University, School of [25] S. Al-Fedaghi and R. Al-Azmi, “Control of waste water treatment as a\nBusiness, 2013. flow machine: a case study,” The 24th IEEE Int. Conf. Autom. Comp. [8] IBM Knowledge Center, “Example of a purchase requisition business (ICAC), pp. 6-7, September 2018, Newcastle University, Newcastle\nprocess,” Maximo Asset Management 7.6.0. upon Tyne, England. https://www.ibm.com/support/knowledgecenter/en/SSLKT6_7.6.0/com.i [26] S. Al-Fedaghi and N. Al-Huwais, “Toward modeling information in\nbm.mt.doc/gp_wkflow/c_sample_purchase.html asset management: case study using Maximo,” 4th Int. Conf. on Info. [9] T. Brooks, “The mythical man-month: Essays of software engineering,” Mgmt. (ICIM), Oxford, England, May 25–27, 2018.",
      "size": 980,
      "sentences": 17
    },
    {
      "id": 59,
      "content": "chase.html asset management: case study using Maximo,” 4th Int. Conf. on Info. [9] T. Brooks, “The mythical man-month: Essays of software engineering,” Mgmt. (ICIM), Oxford, England, May 25–27, 2018. Reading, MA: Addison Wesley, 1975. [27] M. Heidegger, “The thing,” in Poetry, language, thought, A. Hofstadter,\n[10] B. Shneiderman, R. Mayer, D. McKay, and P. Heller, “Experimental Trans. New York: Harper & Row, 1975, pp. 161–184. investigations of the utility of detailed flowcharts in programming.” [28] T. Ingold, “Bringing things to life: Creative entanglements in a world of\nCommun. ACM, vol. 20, no. 6, pp. 373-381, 1977. materials,” Realities working papers #15: Bringing things to life,\n[11] H. Storrle and J. H. Hausmann, “Towards a formal semantics of UML Department of Anthropology, University of Aberdeen, UK, July 2010. 2.0 activities.” German software engineering conference, 2005. [29] IBM Maximo, Maximo Core Concepts [Online].",
      "size": 944,
      "sentences": 16
    },
    {
      "id": 60,
      "content": "rmal semantics of UML Department of Anthropology, University of Aberdeen, UK, July 2010. 2.0 activities.” German software engineering conference, 2005. [29] IBM Maximo, Maximo Core Concepts [Online]. Available:\nhttp://wwwcs.uni-paderborn.de/cs/ag-engels/Papers/2005/SE2005- https://www.slideshare.net/sunk818/ibm-maximo-keyconceptsv43 IBM,\nStoerrle-Hausmann-ActivityDiagrams.pdf. IBM Maximo Asset Management, Version 7 Release 6, Workflow\n[12] D. R. Patel, “Inventory control system for a small business proprietor, Implementation Guide, IBM Corp., 2008, 2014.\nproject, University of Leeds (School of Computing), 2006. [30] IBM Maximo, “User’s guide,” Release 6.2.1, January 2007.\nhttps://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=\n[31] R. Potts, “Leveraging the ArcGIS platform to support Maximo spatial,\n5&ved=0ahUKEwiV34-Ly-\nSSP innovations, empowered solutions blog,” March 10, 2018.",
      "size": 899,
      "sentences": 6
    },
    {
      "id": 61,
      "content": "com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=\n[31] R. Potts, “Leveraging the ArcGIS platform to support Maximo spatial,\n5&ved=0ahUKEwiV34-Ly-\nSSP innovations, empowered solutions blog,” March 10, 2018. TZAhXOJSwKHY3nDfQQFgg8MAQ&url=https%3A%2F%2Fminerva\nhttps://sspinnovations.com/blog/leveraging-arcgis-platform-support-\n.leeds.ac.uk%2Fbbcswebdav%2Forgs%2FSCH_Computing%2FFYProj\nmaximo-spatial/\n%2Freports%2F0506%2FPatelDR.pdf&usg=AOvVaw07Q6nL2rvFvy2t\nc7ilLRmL\n10 | P a ge\nwww.thesai.org",
      "size": 486,
      "sentences": 2
    }
  ]
}