{
  "source": "ArXiv",
  "filename": "019_On_Computing_Makespan-Optimal_Solutions_for_Genera.pdf",
  "total_chars": 41406,
  "total_chunks": 62,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\nOn Computing Makespan-Optimal Solutions for Generalized Sliding-Tile Puzzles\nMarcusGozon JingjinYu\nUniversityofMichigan RutgersUniversity\nAbstract\n11 10 14 6 1 2 3 4\nIn the 15-puzzle game, 15 labeled square tiles are recon- 9 3 2 5 6 7 8\nfigured on a 4 × 4 board through an escort, wherein each\n7 1 4 8 9 10 11 12 (time)step,asingletileneighboringitmayslideintoit,leav-\ningthespacepreviouslyoccupiedbythetileasthenewes- 15 12 5 13 13 14 15\ncort. We study a generalized sliding-tile puzzle (GSTP) in\nwhich(1)thereare1+escortsand(2)multipletilescanmove Figure 1: Start and goal configurations of a 15-puzzle in-\nsynchronously in a single time step. Compared with popu-\nstance.InGSTP,therecanbe1+escortsandmultipletiles\nlardiscretemulti-agent/robotmotionmodels,GSTPprovides\nmaymovesynchronously,e.g.,tile3and9maymovetothe\na more accurate model for a broad array of high-utility ap-\nrightinasinglestepintheleftconfiguration.",
      "size": 934,
      "sentences": 3
    },
    {
      "id": 2,
      "content": "iscretemulti-agent/robotmotionmodels,GSTPprovides\nmaymovesynchronously,e.g.,tile3and9maymovetothe\na more accurate model for a broad array of high-utility ap-\nrightinasinglestepintheleftconfiguration. plications,includingwarehouseautomationandautonomous\ngarageparking,butislessstudiedduetothemoreinvolved\ntile interactions. In this work, we analyze optimal GSTP\nsolution structures, establishing that computing makespan- ond tile moves in a perpendicular direction, a collision oc-\noptimalsolutionsforGSTPisNP-completeanddeveloping curs,whichwecallthecornerfollowingconstraintorCFC. polynomialtimealgorithmsyieldingmakespansapproximat- Consideration of CFC renders GSTP different from popu-\ningtheminimumwithexpected/highprobabilityconstantfac- lar multi-agent/robot pathfinding (MAPF) problems (Stern\ntors,assumingrandomizedstartandgoalconfigurations.",
      "size": 851,
      "sentences": 4
    },
    {
      "id": 3,
      "content": "CFC renders GSTP different from popu-\ningtheminimumwithexpected/highprobabilityconstantfac- lar multi-agent/robot pathfinding (MAPF) problems (Stern\ntors,assumingrandomizedstartandgoalconfigurations. etal.2019)inwhichaclassicalformulationallowsthesec-\nondtiletomoveinadirectionperpendiculartothemoving\n1 Introduction directionofthefirsttile.IgnoringCFCsignificantlyreduces\nthe steps required to solve a tile reconfiguration problem,\nThe15-puzzle(Loyd1959)isasliding-tilepuzzleinwhich\nmakingcomputingoptimalsolutionslesschallenging,butis\nfifteen interlocked square tiles, labeled 1-15, and an empty\nlessaccurateinmodelingmanyreal-worldapplications.",
      "size": 647,
      "sentences": 2
    },
    {
      "id": 4,
      "content": "yd1959)isasliding-tilepuzzleinwhich\nmakingcomputingoptimalsolutionslesschallenging,butis\nfifteen interlocked square tiles, labeled 1-15, and an empty\nlessaccurateinmodelingmanyreal-worldapplications. escortsquarearelocatedona4×4squaregameboard(see\nGiventhestrongconnectionsbetweenGSTPandtoday’s\nFig.1).Ineachtimestep,atileneighboringtheescortmay\ngrid-basedmulti-robotapplicationsseekingevermoreopti-\nslideintoit,leavinganemptysquarethatbecomesthenew\nmalsolutions,wemusthaveafirmgrasponthefundamen-\nescort.Thegame’sgoalistoreconfigurethetilestorealize\ntal optimality structure of GSTP. Towards achieving such\narow-majororderingofthelabeledtiles.Westudyanatural\nan understanding, this work studies the induced optimal-\ngeneralization of the 15-puzzle, in which the game board\nity structure in computing makespan-optimal solutions for\nis an arbitrarily large rectangular grid with 1+ escorts.",
      "size": 889,
      "sentences": 3
    },
    {
      "id": 5,
      "content": "udies the induced optimal-\ngeneralization of the 15-puzzle, in which the game board\nity structure in computing makespan-optimal solutions for\nis an arbitrarily large rectangular grid with 1+ escorts. In\nGSTP,andbringsforththefollowingmaincontributions:\naddition,tilescanmovesynchronouslyinagiventimestep\nassumingnocollisionunderuniformmovement.Wecallthis • Weestablishthatcomputingmakespan-optimalsolutions\nproblemthegeneralizedsliding-tilepuzzleorGSTP. for GSTP is NP-complete with or without an enclosing\nGSTP provides a high-fidelity discretized model for grid.TheproblemremainsNP-completewhenthereare\nmulti-robot applications operating in grid-like environ- ⌊|G|ϵ⌋ escorts, where |G| is the grid size (i.e., the total\nments, including the efficient coordination of a large num- numberofgridcells)and0<ϵ<1isaconstant.",
      "size": 820,
      "sentences": 3
    },
    {
      "id": 6,
      "content": "ications operating in grid-like environ- ⌊|G|ϵ⌋ escorts, where |G| is the grid size (i.e., the total\nments, including the efficient coordination of a large num- numberofgridcells)and0<ϵ<1isaconstant. berofrobotsinwarehousesfororderfulfillment(Wurman, • We establish tighter makespan lower bounds for GSTP\nD’Andrea, and Mountz 2008; Mason 2019), motion plan- for all possible numbers of escorts. On an m × m\n1 2\nning in autonomous parking garages (Guo and Yu 2023), grid with k escorts, in expectation, solving GSTP re-\nandsoon.AparticularlyimportantfeatureofGSTPisthat, quires Ω(m1\nk\nm2) steps for 1 ≤ k < min(m\n1\n,m\n2\n) and\ngiven two neighboring tiles sharing a side, one tile may Ω(m +m )stepsfork ≥min(m ,m ).",
      "size": 712,
      "sentences": 3
    },
    {
      "id": 7,
      "content": "P re-\nandsoon.AparticularlyimportantfeatureofGSTPisthat, quires Ω(m1\nk\nm2) steps for 1 ≤ k < min(m\n1\n,m\n2\n) and\ngiven two neighboring tiles sharing a side, one tile may Ω(m +m )stepsfork ≥min(m ,m ). 1 2 1 2\nonlymoveinthedirectiontowardthesecondtileifthesec-\n• We establish tighter makespan upper bounds for GSTP\nondtilemovesinthesamedirection.Otherwise,ifthesec-\nforallpossiblenumbersofescortsthatmatchthecorre-\nCopyright©2023,AssociationfortheAdvancementofArtificial sponding makespan lower bounds, asymptotically, thus\nIntelligence(www.aaai.org).Allrightsreserved. closing the makespan optimality gap for GSTP. This\n3202\nceD\n81\n]OR.sc[\n1v78801.2132:viXra\n[표 데이터 감지됨]\n\n=== 페이지 2 ===\nleverages a key intermediate result showing that GSTP hasbeenshownthatcomputingtotaldistance-optimalsolu-\ninstances on 2 × m and 3 × m grids can be solved in tions with CFC is NP-complete in environments with spe-\nO(m) steps.",
      "size": 910,
      "sentences": 4
    },
    {
      "id": 8,
      "content": "te result showing that GSTP hasbeenshownthatcomputingtotaldistance-optimalsolu-\ninstances on 2 × m and 3 × m grids can be solved in tions with CFC is NP-complete in environments with spe-\nO(m) steps. For all upper bounds, via careful analysis, cially crafted obstacles (Geft and Halperin 2022). We note\nwefurtherprovideaconstantfactorthatisrelativelylow, that sliding-tile puzzles can easily become PSPACE-hard\nconsideringCFC’ssevererestrictionsontilemovements. in non-grid-based settings (Hopcroft, Schwartz, and Sharir\n1984),evenforunlabeledtiles(SoloveyandHalperin2015). Someproofsaresketchedoromitted;seesupplementary\nWhile of practical importance, hardness for computing op-\nmaterialsforadditionaldetails.",
      "size": 710,
      "sentences": 5
    },
    {
      "id": 9,
      "content": "nd Sharir\n1984),evenforunlabeledtiles(SoloveyandHalperin2015). Someproofsaresketchedoromitted;seesupplementary\nWhile of practical importance, hardness for computing op-\nmaterialsforadditionaldetails. timal solutions for GSTP in obstacle-free settings has not\nbeenestablished.Onthesideofcomputationaleffortsinad-\n2 RelatedWork\ndressing GSTP, CFC has been studied partially as part of\nModern studies on MAPF and related problems originated k-robustness(Atzmonetal.2018).ArecentSoCGcompeti-\nfromtheinvestigationofthegeneralizationofthe15-puzzle tionhasbeenheld(Feketeetal.2022)thataddressesexactly\n(Loyd 1959) to the (N2 − 1)-puzzle, with work address- theGSTPproblembutwithafocusoncomputingsolutions\ning both computational complexity (Ratner and Warmuth forasetofbenchmarkproblems.AvariationofGSTPwas\n1990) and the computation of optimal solutions (Culber- studied in (Guo and Yu 2023) targeting autonomous park-\nson and Schaeffer 1994, 1998).",
      "size": 941,
      "sentences": 3
    },
    {
      "id": 10,
      "content": "d Warmuth forasetofbenchmarkproblems.AvariationofGSTPwas\n1990) and the computation of optimal solutions (Culber- studied in (Guo and Yu 2023) targeting autonomous park-\nson and Schaeffer 1994, 1998). Gradually, graph-theoretic inggarageapplications.Thesecomputationalstudieslargely\nabstractions emerged that introduced non-grid-based envi- leaveunansweredfundamentalquestionsonGSTP,includ-\nronmentsandallowedmoreescorts(i.e.,therecanbemore ingcomputationalcomplexityandoptimalitybounds. than one empty vertex on the underlying graph). Whereas\nsuchproblemsaresolvableinpolynomialtimeifonlyafea- 3 Preliminaries\nsible solution is desired (Kornhauser, Miller, and Spirakis 3.1 TheGeneralizedSliding-TilePuzzle\n1984;Aulettaetal.1999;Yu2013),computingoptimalsolu-\nInthegeneralizedsliding-tilepuzzle(GSTP),onarectangu-\ntionsaregenerallyNP-hard(Wilson1974;Goldreich2011;\nlarm ×m gridG=(V,E)liesn<m m tiles,uniquely\nSurynek2010;YuandLaValle2013;Demaineetal.2019).",
      "size": 955,
      "sentences": 4
    },
    {
      "id": 11,
      "content": "u-\nInthegeneralizedsliding-tilepuzzle(GSTP),onarectangu-\ntionsaregenerallyNP-hard(Wilson1974;Goldreich2011;\nlarm ×m gridG=(V,E)liesn<m m tiles,uniquely\nSurynek2010;YuandLaValle2013;Demaineetal.2019). 1 2 1 2\nlabeled 1,...,n. A configuration of the tiles is an injec-\nWith the graph-based generalization, CFC is generally not\ntive mapping from {1,...,n} → V = {(v ,v )} where\nenforcedasthegeometricconstraintlengthensamotionplan y x\n1≤v ≤m and1≤v ≤m .Tilesmustbereconfigured\nandcomplicatesthereasoning. y 1 x 2\nfromarandomconfigurationS ={s ,...,s }tosomegoal\nDue to its close relevance to a great many high-impact 1 n\nconfigurationG ={g ,...,g },usuallyarow-majororder-\napplications,e.g.,gameAI(Pottinger1999),warehouseau- 1 n\ning of the tiles, subject to certain constraints.",
      "size": 776,
      "sentences": 3
    },
    {
      "id": 12,
      "content": "elevance to a great many high-impact 1 n\nconfigurationG ={g ,...,g },usuallyarow-majororder-\napplications,e.g.,gameAI(Pottinger1999),warehouseau- 1 n\ning of the tiles, subject to certain constraints. Specifically,\ntomation (Wurman, D’Andrea, and Mountz 2008; Mason\nlet the path of tile i, 1 ≤ i ≤ n, be p : N → V, and so\n2019), great interests started to develop in quickly com- i 0\nGSTPseeksafeasiblepathsetP ={p ,...,p }suchthat\nputing (near-)optimal solutions for MAPF (Silver 2005). 1 n\nthefollowingconstraintsaremetforall1≤i,j ≤n,i̸=j\nWith this development, a variant of the (N2 − 1)-puzzle\nand∀t≥0:\nwas introduced, which does not require the presence of es-\ncorts (Standley 2010). In other words, in the most well- • Continuousuniformmotion:p i (t+1)=p i (t)or(p i (t+\nstudiedMAPFformulation,anynon-self-intersectingchain 1),p i (t))∈E,\nof agents may potentially move synchronously, one fol- • Completion:p (0)=s andp (T)=g forsomeT ≥0,\ni i i i\nlowing another, in a single step.",
      "size": 984,
      "sentences": 4
    },
    {
      "id": 13,
      "content": "Fformulation,anynon-self-intersectingchain 1),p i (t))∈E,\nof agents may potentially move synchronously, one fol- • Completion:p (0)=s andp (T)=g forsomeT ≥0,\ni i i i\nlowing another, in a single step. In (Standley 2010), a bi- • Nomeetcollision:p (t)̸=p (t),\ni j\nlevel algorithmic solution framework, operator decompo-\n• Nohead-oncollision:(p (t) = p (t+1)∧p (t+1) =\nsition (OD) + independence detection (ID), is built upon i j i\np (t))=false,\nthegeneralideaofdecoupling(ErdmannandLozano-Perez j\n• Corner-followingconstraint:lete (t)=p (t+1)−p (t)\n1987),whichtreatseachagentindividuallyasifotheragents i i i\nbethemovementdirectionvector.Ifp (t+1) = p (t),\ndonotexistandhandlesagent-agentinteractionsondemand. i j\nthene (t)̸⊥e (t).",
      "size": 729,
      "sentences": 3
    },
    {
      "id": 14,
      "content": "t)=p (t+1)−p (t)\n1987),whichtreatseachagentindividuallyasifotheragents i i i\nbethemovementdirectionvector.Ifp (t+1) = p (t),\ndonotexistandhandlesagent-agentinteractionsondemand. i j\nthene (t)̸⊥e (t). Asuper-majorityofmodernMAPFmethodshavegenerally i j\nadoptedabi-leveldecouplingsearchapproach.Representa- Let T P be the smallest T ≥ 0 such that the completion\ntiveworkalongthislineincludesincreasingcost-treesearch constraint is met for a given path set P. Naturally, it is de-\n(ICTS) (Sharon et al. 2013), conflict-based search (CBS) sirabletocomputeP withminimumT P .Wedefinethede-\nandvariants(Sharonetal.2015;Bareretal.2014;Li,Ruml, cisionversionofmakespan-optimalGSTPasfollows. and Koenig 2021), priority inheritance with backtracking\nMOGSTP\n(PIBT)(Okumuraetal.2022),andmostrecently,lazycon-\nINSTANCE:AGSTPinstanceandapositiveintegerK. straints addition search for MAPF (LaCAM) (Okumura\nQUESTION:IsthereafeasiblepathsetP withT ≤K? 2023).",
      "size": 941,
      "sentences": 7
    },
    {
      "id": 15,
      "content": "STP\n(PIBT)(Okumuraetal.2022),andmostrecently,lazycon-\nINSTANCE:AGSTPinstanceandapositiveintegerK. straints addition search for MAPF (LaCAM) (Okumura\nQUESTION:IsthereafeasiblepathsetP withT ≤K? 2023). Besides search-driven methods, reduction-based ap- P\nproaches have also been proposed (Surynek 2012; Erdem 3.2 2/2/4-SAT\netal.2013;YuandLaValle2016). WewillneedaspecializedSATinstancecalled2/2/4-SAT\nIn contrast, MAPF formulations similar to GSTP, i.e.,\nforourhardnessresult,definedasfollows. considering CFC,havereceivedrelativelymutedattention.",
      "size": 545,
      "sentences": 6
    },
    {
      "id": 16,
      "content": "6). WewillneedaspecializedSATinstancecalled2/2/4-SAT\nIn contrast, MAPF formulations similar to GSTP, i.e.,\nforourhardnessresult,definedasfollows. considering CFC,havereceivedrelativelymutedattention. Onthesideofcomputationalcomplexity,besidesthehard- 2/2/4-SAT\nness result of the (N2 − 1)-puzzle (Ratner and Warmuth INSTANCE: A boolean satisfiability instance with n vari-\n1990)andarecentfollowup(DemaineandRudoy2018),it ablesx ,...x andnclausesc ,...c .Eachclausec has\n1 n 1 n j\n=== 페이지 3 ===\n4literals,andeachvariablex appearsacrossallclausesex- columnshuffles,andthenm rowshuffles.Alternatively,the\ni 1\nactly4timesintotal,twicenegatedandtwiceunnegated. tilescanberearrangedusingm columnshuffles,followed\n2\nQUESTION:Isthereanassignmenttox ,...,x suchthat bym rowshuffles,andthenanotherm columnshuffles. 1 n 1 2\neachclausec hasexactlytwotrueliterals? i Fig.2illustratesrunningtheRubiktablealgorithmovera\n2/2/4-SATwasshowntobeNP-completein(Ratnerand 4×3grid,usingarow-column-rowshufflesequence.",
      "size": 994,
      "sentences": 7
    },
    {
      "id": 17,
      "content": "shuffles. 1 n 1 2\neachclausec hasexactlytwotrueliterals? i Fig.2illustratesrunningtheRubiktablealgorithmovera\n2/2/4-SATwasshowntobeNP-completein(Ratnerand 4×3grid,usingarow-column-rowshufflesequence. Warmuth 1990), which is subsequently employed to show\nthehardnessofthe(N2−1)-puzzle. 8 12 6 12 6 8 1 3 2 1 2 3\n3.3 FeasibilityandKnownMakespanBounds 3 2 9 9 3 2 5 6 4 4 5 6\nIt is well-known that the (N2 −1)-puzzle may not always 10 11 1 1 10 11 9 7 8 7 8 9\nhaveasolution(Loyd1959)duetotheconfigurationsform-\n7 5 4 5 7 4 12 10 11 10 11 12\ning two connected graphs. More formally, it can be shown\nthattheconfigurationsofan(N2−1)-puzzlearepartitioned\ninto two groups, each of which is isomorphic to the alter- Figure 2: Applying the Rubik table algorithm to rearrange\nnating group A (Wilson 1974). Because moves on a tiles on a 4×3 grid using a sequence of row shuffles, fol-\nN2−1\nGSTPinstanceonanN×N gridwithasingleescortcanbe lowedbycolumnshuffles,followedbyrowshuffles.",
      "size": 969,
      "sentences": 7
    },
    {
      "id": 18,
      "content": "g group A (Wilson 1974). Because moves on a tiles on a 4×3 grid using a sequence of row shuffles, fol-\nN2−1\nGSTPinstanceonanN×N gridwithasingleescortcanbe lowedbycolumnshuffles,followedbyrowshuffles. “sloweddown”toequivalentmovesonan(N2−1)-puzzle,\nthey share the same feasibility. The same remains true for\nrectangulargrids.Checkingfeasibilitycanbeperformedin 4 Intractabilityof MOGSTP\nlineartime(Wilson1974).Ontheotherhand,alsoclearfrom\nWeproceedinthissectiontoestablishtheNP-completeness\n(Wilson1974),whentherearetwoormoreescorts,aGSTP\nofMOGSTPonsquaregrids,whichwillshow\ninstanceisalwaysfeasible.Tosummarize,\nTheorem4.1. MOGSTP isNP-complete,withorwithout\nLemma3.1. GSTP withasingleescortmaybeinfeasible. anenclosinggrid. Thefeasibilityof GSTPwithasingleescortcanbechecked\ninlineartime.GSTPwithtwoormoreescortsisfeasible. First,wesketchtheprooftoprovidekeyideasbehindthe\nreduction of hardness.",
      "size": 896,
      "sentences": 9
    },
    {
      "id": 19,
      "content": "nfeasible. anenclosinggrid. Thefeasibilityof GSTPwithasingleescortcanbechecked\ninlineartime.GSTPwithtwoormoreescortsisfeasible. First,wesketchtheprooftoprovidekeyideasbehindthe\nreduction of hardness. Then, detailed constructions of the\nGivenafeasible(N2−1)-puzzle,eachtilecanbemoved\nrequiredgadgetsandthefullinstanceconstructionfollow. to its goal in O(N) steps since a tile is within O(N) dis-\ntance to its goal and O(1) steps are needed to switch two 4.1 ProofOutline\ntiles.ThissuggestsanO(N3)algorithm,whichreadilyex-\nWeproveviaareductionfrom2/2/4-SAT(RatnerandWar-\ntends to an O(m m max(m ,m )) step algorithm on an\n1 2 1 2 muth1990)definedinSec.3.2.Ourreductionconstructsan\nm ×m grid.Thisisalsoanupperboundfor GSTP with\n1 2 MOGSTPinstancetoforceaflowofliteraltilesfromvari-\na single escort.",
      "size": 795,
      "sentences": 6
    },
    {
      "id": 20,
      "content": ")) step algorithm on an\n1 2 1 2 muth1990)definedinSec.3.2.Ourreductionconstructsan\nm ×m grid.Thisisalsoanupperboundfor GSTP with\n1 2 MOGSTPinstancetoforceaflowofliteraltilesfromvari-\na single escort. GSTP with more escorts is studied in the\nable gadgets to clause gadgets in matching pairs, forming\ncontext of automated garages (Guo and Yu 2023), with re-\na truth side of literals and a false side of literals (realized\nsultsonΘ(m m )escortsand(2m +2m −4)escorts.To\n1 2 1 2 through a gadget train, see Fig. 3(a) for a sketch and ex-\nsummarize,thefollowingisknown:\nplanation). For each variable x , 1 ≤ i ≤ n, there are four\ni\nNumberofescorts Makespanupperbound slidingtileslabeledx1,x2,x¯1,x¯2thatcorrespondtothefour\ni i i i\n1 O(m m max(m ,m )) literalsforx ,thefirstpairpositiveandthesecondpairnega-\n1 2 1 2 i\n(2m\n1\n+2m\n2\n−4) O(m\n1\nm\n2\n) tive.Whenthecontextisclear,wesimplysayliteralsinstead\nΘ(m 1 m 2 ) O(max(m 1 ,m 2 )) of literal tiles. A variable gadget (see Fig. 3(b) and Fig.",
      "size": 982,
      "sentences": 6
    },
    {
      "id": 21,
      "content": "hesecondpairnega-\n1 2 1 2 i\n(2m\n1\n+2m\n2\n−4) O(m\n1\nm\n2\n) tive.Whenthecontextisclear,wesimplysayliteralsinstead\nΘ(m 1 m 2 ) O(max(m 1 ,m 2 )) of literal tiles. A variable gadget (see Fig. 3(b) and Fig. 5)\nIt is easy to see that Ω(max(m ,m )) is a makespan isconstructedthatforcesthepairofunnegatedliterals(e.g.,\n1 2\nlower bound in expectation. It can be shown that the x1 i andx2 i ,“+”tilesinthefigure)toonlyexittogetherfrom\nmakespanlowerboundiscloseto(m +m )withhighprob- one side of the gadget (e.g., left) while forcing the pair of\n1 2\nabilitywhenthereareΩ(m 1 m 2 )tiles(GuoandYu2022). negated literal (e.g., x¯1 i and x¯2 i , , “-” tiles in the figure) to\nexit together from the opposite side, each passing through\n3.4 TheRubikTableAlgorithm limitedopeningsoftherailsthatflankthetrainandmovein\nthe opposite direction.",
      "size": 821,
      "sentences": 6
    },
    {
      "id": 22,
      "content": "x¯2 i , , “-” tiles in the figure) to\nexit together from the opposite side, each passing through\n3.4 TheRubikTableAlgorithm limitedopeningsoftherailsthatflankthetrainandmovein\nthe opposite direction. After all 4n literals exit from the n\nA notable tool, Rubik tables (Szegedy and Yu 2023), has\nvariablegadgets,thereare2neachontheleftandrightside\nbeen applied to derive polynomial-time, 1.x-optimal solu-\noftherails.Theseliteralsarethenroutedintoclausegadgets\ntions to classical MAPF problems on grids (Guo and Yu\n(seeFig.3(c)andFig.6),eachallowingatmosttwoliterals\n2022).Thistoolwillalsobeemployedinthiswork.Wewill\ntoenterfromeachside.Theoverall MOGSTP instanceis\nusethefollowingtheoremwithanassociatedalgorithm. constructedsuchthatifthe2/2/4-SATissatisfiable,thenin\nTheorem 3.2 (Rubik Table Algorithm for 2D Grids theMOGSTP,the2nliteraltilesthatmovetotheleftside\n(SzegedyandYu2023)).",
      "size": 884,
      "sentences": 3
    },
    {
      "id": 23,
      "content": "mwithanassociatedalgorithm. constructedsuchthatifthe2/2/4-SATissatisfiable,thenin\nTheorem 3.2 (Rubik Table Algorithm for 2D Grids theMOGSTP,the2nliteraltilesthatmovetotheleftside\n(SzegedyandYu2023)). Letanm ×m gridbefilledwith ofthetraincanbechosentobethetrueliteralsinthegiven\n1 2\ntileslabeled1,...,m m .Arow(resp.,column)shufflecan truth assignment, and so all literal tiles can then be readily\n1 2\narbitrarilypermutearow(resp.,column)oftiles.Then,the routed to the clause gadgets. Similarly, in the other direc-\ntiles can be rearranged from any configuration to the row- tionofthereduction,becauseexactlynpairsofliteraltiles\nmajorconfigurationusingm rowshuffles,followedbym mustbeontheleftsideinamakespan-optimalsolution,the\n1 2\n[표 데이터 감지됨]\n\n=== 페이지 4 ===\ncorresponding2nliteralscanbesettopositivetosatisfythe\n2/2/4-SATinstance.",
      "size": 831,
      "sentences": 4
    },
    {
      "id": 24,
      "content": "rconfigurationusingm rowshuffles,followedbym mustbeontheleftsideinamakespan-optimalsolution,the\n1 2\n[표 데이터 감지됨]\n\n=== 페이지 4 ===\ncorresponding2nliteralscanbesettopositivetosatisfythe\n2/2/4-SATinstance. + ↓↑ + ↑↓ ↓↑↑↑↓ ↑↑↑\n+ ↓ x + x ↓ ↓ ↓ ↑\n𝑷𝑷𝒎𝒎 ↓ x x ↓ ↓ ↓ ↑ 𝑷𝑷𝒇𝒇\n↓ x x ↓ ↓ ↓ ↓ ↑ ↓\n𝒙𝒙𝟏𝟏 𝒄𝒄𝟏𝟏 ↓ x ↥\n↥\n- x ↓ - ↓ ↓ ↓ ↑ ↓\n↓ - ↓ - ↓ ↓ ↓ ↑ ↓\n… … ↓ ↓ ↓↑ ↑↓ ↓↑↑↑↓\n𝒄𝒄𝒏𝒏 ↓ ↑ ↓ ↓↑ ↑↓ ↓ ↑ ↓\n𝒙𝒙𝒏𝒏 ↓↑↑↑↓ ↓↑ ↑↓ ↓ ↑ ↓\n𝑷𝑷𝒓𝒓 ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\n𝑺𝑺\n↰ ↲\n↰\n↰\n↲\n↲\nVariableCar(Gadget) Avariablecar(x ,...,x blocks\n1 n\nin Fig. 3) is an upwards moving 10×3 block whose start\nconfigurationisshowninFig.3(b).Forthevariablecarcor-\n↓ ↓ respondingtox i ,besidesthe(blue)uptilesasmarked,there\n↓ ↓ aretwounnegatedliteraltiles(thetwo“+”tiles)correspond-\n↓ ↓ ing to x1 and x2, and two negated literal tiles (the two “-”\ni i tiles)correspondingtox¯1andx¯2.Thesetilesmustbemoved\ni i\ntosomeclausecarstobeintroducedshortly.Therearealso\n(pink)single-delayuptilesthatmustpauseinplaceexactly\nonce throughout the execution of the MOGSTP instance.",
      "size": 1000,
      "sentences": 3
    },
    {
      "id": 25,
      "content": "dingtox¯1andx¯2.Thesetilesmustbemoved\ni i\ntosomeclausecarstobeintroducedshortly.Therearealso\n(pink)single-delayuptilesthatmustpauseinplaceexactly\nonce throughout the execution of the MOGSTP instance. Additionally,thereareeightobstacletiles(thextiles)whose\ngoal configurations are three spots lower within the same\n(a) (b) (c) (d)\nvariable car. These obstacle tiles help ensure that the pairs\nFigure 3: Pieces of MOGSTP. (a) Sketch of the train-\nofpositiveandnegativeliteralssplitupontodifferentsides. likeMOGSTPinstancesplitintotwohalves.Theupward-\nmovinggadgettrainissurroundedbytwo(red)railsoftiles\nthat move strictly downwards, with a few gaps (not shown ↓↑+↑↓ ↓↑+↑↓ ↓↑ ↑↓ ↑ ↑ ↑ ↑\n↓ x + x ↓ ↓ + x ↓ ↓ + x ↓ + x ↓ x ↓\nhere,see Fig.4) toallow tiles toexit/enter.",
      "size": 763,
      "sentences": 5
    },
    {
      "id": 26,
      "content": "inissurroundedbytwo(red)railsoftiles\nthat move strictly downwards, with a few gaps (not shown ↓↑+↑↓ ↓↑+↑↓ ↓↑ ↑↓ ↑ ↑ ↑ ↑\n↓ x + x ↓ ↓ + x ↓ ↓ + x ↓ + x ↓ x ↓\nhere,see Fig.4) toallow tiles toexit/enter. Thetrain, from ↓ x ↥ x ↓ ↓ x ↓ ↓+ x ↓ + x + x\ntop to bottom, contains a front padding car P , variable ↓ x ↥ x ↓ ↓ x ↥ x ↓ ↓ ↥ x ↓ ↓ ↥ x ↓ + ↥ x\nf ↓ x - x ↓ ↓ x ↥ x ↓ ↓ x ↥ x ↓ ↓ x ↥ x ↓ x ↥ x\ncarsx ,...,x ,asecuritycarS,amiddlepaddingcarP , ↓ - ↓ ↓ x - ↓ ↓ x - ↓ ↓ x - ↓ ↓ x - ↓\n1 n m\n↓ ↓ ↓ x - ↓ ↓ x - ↓ ↓ x - ↓ ↓ x - ↓\nclausecarsc ,...,c ,andarearpaddingcarP . (b)Avari-\n1 n r ↓ ↑ ↓ ↓ ↑ ↓ ↓ x ↑ ↓ ↓ x ↑ ↓ ↓ x ↑ ↓\nable gadget (center 10×3 portion) is constructed to force ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\n↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\nunnegated (“+”) and negated (“-”) literal tiles to exit from\ndifferentsides.Theexitedtitleswillbeoutsidetherails.",
      "size": 847,
      "sentences": 3
    },
    {
      "id": 27,
      "content": ") is constructed to force ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\n↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\nunnegated (“+”) and negated (“-”) literal tiles to exit from\ndifferentsides.Theexitedtitleswillbeoutsidetherails. (c) ↑ ↑ ↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓\nx ↓ x ↓ ↓ x ↓ ↓ x ↓ ↓ x ↓\nAclausegadgetisconstructedtoallowatmosttwoliterals + x x ↓ x ↓ ↓ x ↓ ↓ x ↓\nto come in from each side of the rails. (d) The security car ↓ ↥ x ↓ + ↥ x ↓ ↥ x ↓ ↓ ↥ x ↓ ↓ ↥ x ↓\nx ↥ x x ↥ x x ↥ x ↓ x ↥ x ↓ ↓ x ↥ x ↓\nwheretheupperfourpurpletileswillexittoblockvariable x - ↓ x ↓ x ↓ x ↓ ↓ x ↓\nexits on the rails (see Fig. 4). The lower two light purple x - x - x - x ↓ x ↓\n↓ x ↑ ↓ x ↑ - ↓ x ↑ ↓ x ↑ - ↓ x ↑ ↓\nblocksaregoalsfortwotilesinitiallyontherails(Fig.4). ↓↑↑↑↓ ↑↑↑ ↑↑↑ ↑↑↑ ↑↑↑\n↓↑↑↑↓ ↓↑↑↑↓ ↑↑↑ ↓↑↑↑↓ ↑↑↑\nFigure 5: Illustration of how (green) literal tiles may exit a\n4.2 Gadgets variablegadgetinpairs.Thebottomleftsubfigureshowsthe\nfourlowergapsontherails,eacha3×1block.",
      "size": 929,
      "sentences": 6
    },
    {
      "id": 28,
      "content": "↑↑ ↑↑↑\n↓↑↑↑↓ ↓↑↑↑↓ ↑↑↑ ↓↑↑↑↓ ↑↑↑\nFigure 5: Illustration of how (green) literal tiles may exit a\n4.2 Gadgets variablegadgetinpairs.Thebottomleftsubfigureshowsthe\nfourlowergapsontherails,eacha3×1block. Ourgadgetsconsistofpresettilesthatmoveinafixeddirec-\ntionthroughoutthesolutionroutingprocess.Theup(resp.,\ndown)tilesmoveonestepup(resp.,down)ateachtimestep, Lemma4.2. Asavariablecarpassesbythevariableexits\nwhich can be forced by setting their goals a distance up- on the rails, the positive and negative literals can only exit\nwards(resp.downwards)equaltothegivenmakespanofthe todifferentsidesoftherails. MOGSTPinstance. ProofSketch. Onlyliteralandobstacletilesmaymoveout-\nRail (Gadget) A MOGSTP instance contains two sym-\nside a variable car (the 10×3 grid). It can be shown that\nmetricrails(redstripsonthetwosidesinFig.3,withmore\nobstacle tiles should not change columns. Because of this,\ndetails in Fig.",
      "size": 906,
      "sentences": 8
    },
    {
      "id": 29,
      "content": "ntains two sym-\nside a variable car (the 10×3 grid). It can be shown that\nmetricrails(redstripsonthetwosidesinFig.3,withmore\nobstacle tiles should not change columns. Because of this,\ndetails in Fig. 4) consisting of down tiles with gaps, which\nunnegated (resp., negated) literals can only exit from the\nare 3×1 blocks of escorts. Each rail contains three gaps,\n3th(resp.,7th)row.Thisforcestheobstacletilestobecome\nseparatedintotwogroups:twolowergapsaredesignatedas\nasymmetric on the two sides of a variable car, resulting in\nvariableexits,andasingleuppergapfunctionsasaclause\nthe unnegated literals exiting from one side of the car and\nentrance.Adowntileseparatesthevariableexits.Thefour\nthenegatedliteralsexitingfromtheoppositeside.Onesuch\npPurple\nm\nCtiles f…rom t\n1\nChe secPurityScar w\nm\nXill ent…er the\n1\nXmiddlPe of\nexitsequenceisillustratedinFig.5. thesegapsandthenmovewiththerailsuntiltheend.There\naretwo(purple)tilesinitiallyintheentrancegapsthatwill Clause Car (Gadget) As shown in Fig.",
      "size": 995,
      "sentences": 6
    },
    {
      "id": 30,
      "content": "ent…er the\n1\nXmiddlPe of\nexitsequenceisillustratedinFig.5. thesegapsandthenmovewiththerailsuntiltheend.There\naretwo(purple)tilesinitiallyintheentrancegapsthatwill Clause Car (Gadget) As shown in Fig. 3(c), the clause\nlaterenterthesecuritycar.Thesegapswillbeexplainedin carisanupward-moving10×3subgridentirelycomposed\nmoredetail. ofuptilesandrequires4literaltilescorrespondingtoc in\ni\nthe goal configuration. With two symmetric 3×1 gaps on\n↰ ↰ ↰ the rail, it is clear that at most two literals can enter from\nvariableexitgaps clauseentrancegaps eachside,asshowninFig.6. ↲ ↲ ↲ Security Car (Gadget) Shown in Fig. 3(d), the security\ncarisanupward-moving10×3subgridwhoseframecon-\nFigure4:Partoftherails,rotated90degreesclockwisefrom\nsistsofuptileswithfouradditionalpurpletilesatrows3and\nFig.3(a),showingthevariableexitandclauseentrancegaps. 5thatneedtobeinjectedintothemiddleofthefourvariable\nexits on the rails (see Fig. 4 for reference) as they pass by.",
      "size": 951,
      "sentences": 9
    },
    {
      "id": 31,
      "content": "dditionalpurpletilesatrows3and\nFig.3(a),showingthevariableexitandclauseentrancegaps. 5thatneedtobeinjectedintothemiddleofthefourvariable\nexits on the rails (see Fig. 4 for reference) as they pass by. [표 데이터 감지됨]\n\n=== 페이지 5 ===\n↑↑↑ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ 5 TighterMakespanLower&UpperBounds\n↓ ↓ ↓ ↓ ↓ ↓\n↓ ↓ ↓ ↓ In this section, we first establish a tighter makespan lower\n↓ ↓ ↓ ↓ ↓ ↓\nbound as a function of the number of escorts. Then, we\n↓ ↓ ↓ ↓\n↓ ↓ ↓ ↓ ↓ ↓ proceed to the more involved efforts of deriving tighter\n↓↑ ↑↓ ↓↑ ↑↓ ↑ ↑ ↓↑ ↑↓\n↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓ makespan upper bounds again as a function of the avail-\n↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓ ↓↑ ↑↓ ablenumberofescorts.Thenewandtighterlowerandupper\n↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\nboundsaresummarizedinthetablebelow.Wefurtherpro-\nFigure6:Greenliteraltilesenteringaclausecargadget. videanexactconstantforallupperboundsasamoreprecise\ncharacterization.",
      "size": 877,
      "sentences": 6
    },
    {
      "id": 32,
      "content": "dupper\n↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓ ↓↑↑↑↓\nboundsaresummarizedinthetablebelow.Wefurtherpro-\nFigure6:Greenliteraltilesenteringaclausecargadget. videanexactconstantforallupperboundsasamoreprecise\ncharacterization. In all cases, our upper and lower bounds\nmatch asymptotically, eliminating the gaps left by previ-\nThispreventsthesegapsfrombeingusedbyclausegadgets. ous studies on GSTP. All upper bounds come with low-\nItwillreceivethetwopurpletilesthatareinitiallyinsidethe polynomial-time algorithms for computing the actual plan,\nclauseentrances(seeFig.4)togotorow8. whichisclearfromthecorrespondingproofs. 4.3 CompleteSpecificationandReductions k,thenumberofescorts Makespanlowerbound\nm m\nWe construct the MOGSTP instance as follows.",
      "size": 721,
      "sentences": 7
    },
    {
      "id": 33,
      "content": "eentrances(seeFig.4)togotorow8. whichisclearfromthecorrespondingproofs. 4.3 CompleteSpecificationandReductions k,thenumberofescorts Makespanlowerbound\nm m\nWe construct the MOGSTP instance as follows. Let d = k<min(m 1 ,m 2 ) exp.Ω( 1 k 2)\n24n+38;ourupwardsmovingtrainisad×3block;fromtop k≥min(m ,m ) h.p.Ω(max(m ,m ))\n1 2 1 2\ntobottom,thethreepaddingcardshave4,4n,and24rows\nk,thenumberofescorts Makespanupperbound\nofuptiles,respectively.Themiddlepaddingcarallowsthe k=1 (81+o(1))m m\n1 2\nliteral tiles to reorder before entering the clause cars. Ini- k=2 (18+o(1))m m\n1 2\ntially, the bottoms of the rails are aligned with the bottom 2<k<min(m ,m ) (22+o(1)) m 1 m 2\nofthegadgettrain.Thevariableexitopeningsoccupyrows 1 2 ⌊k/2⌋\nd+2tod+4andd+6tod+8fromthebottom.Theclause k≥m 1 +m 2 −1 34max(m 1 ,m 2 )\nentranceopeningoccupyrowsd+14n+12tod+14n+14. While a grid is not needed, we can select our grid G to be Table1:Ourmatchingmakespanlowerandupperbounds.",
      "size": 950,
      "sentences": 6
    },
    {
      "id": 34,
      "content": "ebottom.Theclause k≥m 1 +m 2 −1 34max(m 1 ,m 2 )\nentranceopeningoccupyrowsd+14n+12tod+14n+14. While a grid is not needed, we can select our grid G to be Table1:Ourmatchingmakespanlowerandupperbounds. ofsize4d×4dwiththeconstructpositionedinthemiddle\nhorizontally,withthebottomoftheconstructstartingatthe For convenience, instead of viewing GSTP through\n(d+1)throwfromthebottomofG.Themakespanbound batched tile movements, we focus on the movement of\nK issettod.TheMOGSTPinstanceisfullyspecified. the escorts, which encodes tile motion more concisely. A\nstraightcontiguoustrainoftilesmovinginasinglestepmay\nProofofThm.4.1.",
      "size": 619,
      "sentences": 5
    },
    {
      "id": 35,
      "content": "we focus on the movement of\nK issettod.TheMOGSTPinstanceisfullyspecified. the escorts, which encodes tile motion more concisely. A\nstraightcontiguoustrainoftilesmovinginasinglestepmay\nProofofThm.4.1. Ifthe2/2/4-SATinstanceissatisfiable, beequivalentlyviewedasajumpofanescort.Sincethenew\nwecanselectthepositive(resp.,negative)literalstoexitto escortpositionmustremaininthesameroworcolumn,we\ntheleft(resp.,right)oftherailsfromthevariablecars,when callthejumparowjumporcolumnjump,respectively.Inad-\ntheypassbytheliteralexitgaps.Then,theseliteralscanre- dition,weuserectangularshift orr-shift,asafundamental\norderandenterintotheclausegadgetsasrequired,reaching motionprimitiveinwhichtheescortcyclesthroughthefour\nthetargetgoalconfigurationwithamakespanofd.",
      "size": 752,
      "sentences": 4
    },
    {
      "id": 36,
      "content": "ion,weuserectangularshift orr-shift,asafundamental\norderandenterintotheclausegadgetsasrequired,reaching motionprimitiveinwhichtheescortcyclesthroughthefour\nthetargetgoalconfigurationwithamakespanofd. corners of a rectangle, thus shifting all boundary elements\nSimilarly, in the other direction, if the MOGSTP in- byonetileintheoppositedirection.Wecalltherectangular\nstancehasasolutionwithamakespanofd,thentheup/down shift cwr-shift (resp., ccwr-shift) if the escort traverses the\ntilesmustmoveuninterrupted.Inthiscase,fourliteralsmust cornersinthecounterclockwise(resp.,clockwise)direction. exitavariablecarinpairsofthesametruthvaluetodiffer-\nent sides.",
      "size": 653,
      "sentences": 3
    },
    {
      "id": 37,
      "content": "the escort traverses the\ntilesmustmoveuninterrupted.Inthiscase,fourliteralsmust cornersinthecounterclockwise(resp.,clockwise)direction. exitavariablecarinpairsofthesametruthvaluetodiffer-\nent sides. Subsequently, these literals reorder and enter the 5.1 TighterMakespanLowerBounds\nclausecarsasdescribed.Therefore,wecanpickliteraltiles\nUsing escort jumps instead of tile moves lets us see im-\nononesideoftherails,e.g.,left,andmaketheircorrespond-\nmediately that a single time step can only change the sum\ningliteralspositive,ensuringallclausesaretrue.Thisyields\nof the Manhattan distances by kmax(m ,m ), where k is\nasatisfyingassignmentforthe2/2/4-SATinstance. 1 2\nthe number of escorts. The observation readily leads to a\nMOGSTPisinNPsincetheexistenceofasolutioncan\ntighter makespan lower bound than the previously estab-\nbereadilychecked,andafeasiblesolutioncanbecomputed\nlishedΩ(m +m )(orΩ(max(m ,m ))).",
      "size": 906,
      "sentences": 5
    },
    {
      "id": 38,
      "content": "dily leads to a\nMOGSTPisinNPsincetheexistenceofasolutioncan\ntighter makespan lower bound than the previously estab-\nbereadilychecked,andafeasiblesolutioncanbecomputed\nlishedΩ(m +m )(orΩ(max(m ,m ))). in polynomial time similar to how (N2 − 1)-puzzles are 1 2 1 2\nsolved.Thus,MOGSTPisNP-complete. Lemma 5.1. The expected minimum makespan for GSTP\nonm\n1\n×m\n2\ngridswithkescortsisΩ(m1\nk\nm2). MOGSTP remainsNP-hardwhenwespecifythatthere\nare exactly ⌊|G|ϵ⌋, 0 < ϵ < 1 escorts (where |G| is the Proof. ConsiderthesumofManhattandistancesS ofeach\nnumber of cells of the grid) by blowing up the grid by a tile’sstartandgoalpositions.Overallpossiblestartandgoal\npolynomialamountandfillingtheextraspacewithstation- configurations,eachtileisexpectedtohaveaManhattandis-\narytilestoachievethedesirednumberofescorts.Thennote tanceofΩ(m +m ) = Ω(max(m ,m ))(Santalo´ 2004).",
      "size": 856,
      "sentences": 6
    },
    {
      "id": 39,
      "content": "mialamountandfillingtheextraspacewithstation- configurations,eachtileisexpectedtohaveaManhattandis-\narytilestoachievethedesirednumberofescorts.Thennote tanceofΩ(m +m ) = Ω(max(m ,m ))(Santalo´ 2004). 1 2 1 2\nthat 2/2/4-SAT isstillsimulatedthroughthemovementof Becausetherearem m −ktiles,wehaveS =Ω((m m −\n1 2 1 2\ntheliteraltilesaroundthepresettiles,andinaddition,aso- k)max(m ,m )),inexpectation.Becauseeachofthekes-\n1 2\nlutionroutingcanbeconstructedinthesamemannerfroma cortscanjumpadistanceofmax(m ,m )withinthesame\n1 2\ntruthassignment. row/column,alteringtheManhattandistancecontributionby\n[표 데이터 감지됨]\n\n=== 페이지 6 ===\n1 for each tile in its jump path, in a single time step, S 18 20 21 3 23 24 22 9 23 24\ncan only change by at most kmax(m 1 ,m 2 ). Thus, at least 10 12 4 6 5 2 8 14 (a) 8 (b)\nkmax(\nS\nm1,m2)\n= Ω(m1\nk\nm2)stepsareneededtosolvethein-\n17 7 19 13 16 11 15 7 16 15\nstanceinexpectation.",
      "size": 898,
      "sentences": 4
    },
    {
      "id": 40,
      "content": "9 23 24\ncan only change by at most kmax(m 1 ,m 2 ). Thus, at least 10 12 4 6 5 2 8 14 (a) 8 (b)\nkmax(\nS\nm1,m2)\n= Ω(m1\nk\nm2)stepsareneededtosolvethein-\n17 7 19 13 16 11 15 7 16 15\nstanceinexpectation. 23 24 23 24\n(c) (d)\nCombining with the previously known lower bounds 7\nyieldsatightermakespanlowerboundofΩ(m1m2)fork ≤ 7 16 8 15 16 8 15\nk\nmin(m ,m )andΩ(max(m ,m ))fork ≥min(m ,m ),\n1 2 1 2 1 2\nwhichmatchourdevelopedupperbounds,establishednext. 15 16 8 7 24 23 (e) 15 16 8 7 (f)\n5.2 TighterMakespanUpperBounds:Outline 23 24\nWe leverage RTA (Sec. 3.4) to establish tighter makespan\n7 8 2 3 4 5 6 7 8\nupper bounds for GSTP. Each round of row/column shuf- 15 16 (g) 9 10 11 12 13 14 15 16 (h)\nfles in RTA can be executed in parallel, potentially leading\n23 24 17 18 19 20 21 22 23 24\nto a significantly reduced makespan. However, the shuffles\ndo not readily translate to feasible sliding-tile motion; per- Figure 7: Sorting right 1 on a 3×8 grid with one escort.",
      "size": 960,
      "sentences": 7
    },
    {
      "id": 41,
      "content": "18 19 20 21 22 23 24\nto a significantly reduced makespan. However, the shuffles\ndo not readily translate to feasible sliding-tile motion; per- Figure 7: Sorting right 1 on a 3×8 grid with one escort. formingin-placepermutationoftilesinasinglerow/column 3\n(a)and(h)arethestartandgoalconfigurations. (b)→(c):A\nis impossible. To enable the application of RTA, instead\ncwr-shiftinsertsBtile8tothecircularhighway. (c)→(d)→\nworkingwithonegridrow/column,wesimulaterow/column\n...→(e):Aseriesofr-shiftsordersBtilesintheworkspace. shuffles by grouping multiple rows or columns together. (e)→(g):Additionalr-shiftsmoveBtilestogoals. Therefore,atahighlevel,wederivebetterupperboundsby:\n• ApplyingRTAtoobtainthreebatchesofroworcolumn\nshuffles(see,e.g.,Fig.2)withescortstreatedaslabeled moveB tilestothehighway,(2)arrangeB tilesproperlyin\ntiles.Eachbatchofshuffleswillbeexecutedtocomple- theworkspace,and(3)moveBtilestogoals.",
      "size": 911,
      "sentences": 9
    },
    {
      "id": 42,
      "content": "orcolumn\nshuffles(see,e.g.,Fig.2)withescortstreatedaslabeled moveB tilestothehighway,(2)arrangeB tilesproperlyin\ntiles.Eachbatchofshuffleswillbeexecutedtocomple- theworkspace,and(3)moveBtilestogoals. tion(viasimulationsaccordingtorulesofGSTP)before To execute the first stage, if a B tile in the workspace\nthenextbatchisstarted. has a W tile above it, then execute a cwr-shift to insert the\n• In a given batch of row/column shuffles, adjacent leftmostsuchBtileintothehighwaytonotaffecttilestothe\nrows/columnswillbegroupedtogether(e.g.,twoorthree right(Fig.7(b)-(c)).Otherwise,applyadjustmentcwr-shifts\nrows per group), on which tile-sliding motions will be to the circular highway until a B tile in the workspace has\nplannedtorealizethedesiredshuffles.",
      "size": 752,
      "sentences": 3
    },
    {
      "id": 43,
      "content": "ig.7(b)-(c)).Otherwise,applyadjustmentcwr-shifts\nrows per group), on which tile-sliding motions will be to the circular highway until a B tile in the workspace has\nplannedtorealizethedesiredshuffles. aW tileaboveit.Becausetherearem−2B tiles,atmost\nm−2adjustmentsareneededtomoveaW tileovereachB\nPerforming efficient tile-sliding motions with the CFC\ntile,andsothetotalnumberofstepsforthisstageisatmost\nconstraint is key to establishing tighter upper bounds. We\n4[(m−2)+(m−2)]=8m−16. firstdescribesubroutinesforsolving GSTP with1or2es-\nThe second stage uses the same operation to insert the\ncortson3×mand2×mgrids.Thesesubroutineswillthen\nB tiles into the workspace. The difference is that B tiles\nbeusedtosolvegeneralGSTPinstances.",
      "size": 729,
      "sentences": 5
    },
    {
      "id": 44,
      "content": "es-\nThe second stage uses the same operation to insert the\ncortson3×mand2×mgrids.Thesesubroutineswillthen\nB tiles into the workspace. The difference is that B tiles\nbeusedtosolvegeneralGSTPinstances. are now being inserted in the exact spot in the workspace\ncorrespondingtothedesiredpermutation.Throughthepro-\n5.3 UpperBoundsfor2-3Rowswith1-2Escorts\ncess, a tile in B never makes a full lap around the circu-\nOur GSTP algorithmswillbuildonsubroutinesforsorting lar highway. Therefore, at most 2m + 1 adjustments are\nmultiplerows.Wefirstprovesucharoutineon3×mgrids. needed,withatmostm−2Btileinsertions,takingatmost\n4[(2m+1)+(m−2)]=12m−4steps. Lemma5.2. FeasibleGSTPinstanceswithasingleescort\nona3×mgridcanbesolvedin120msteps. In the third stage, apply r-shifts to move B tiles to their\ngoalsasshowninFig.7(e)-(g),taking4[m−⌊m−2⌋]steps. 3\nProof.",
      "size": 843,
      "sentences": 9
    },
    {
      "id": 45,
      "content": "mma5.2. FeasibleGSTPinstanceswithasingleescort\nona3×mgridcanbesolvedin120msteps. In the third stage, apply r-shifts to move B tiles to their\ngoalsasshowninFig.7(e)-(g),taking4[m−⌊m−2⌋]steps. 3\nProof. Wegiveaprocedurethatsortstheright 1 ofthe3×m Now, approximately the right third of the grid has been\ngridinO(m)steps.Arecursiveapplicationoft 3 heprocedure solvedin4[6m−5−⌊m−2⌋]steps;werecurseinthesame\n3\nthen yields an overall O(m+ 2m+ 4m+...) = O(m) mannerform ≥ 5andsolvethebasecaseofm = 4in53\n3 9\nmakespan. timessteps(Korf2008)bytreatingtheproblemasanormal\nTostart,wemovetheescorttothebottomleftcornerfor (n2−1)-puzzleinstance.Throughcarefulcounting,wecan\nboth the start and goal configurations, which takes 4 steps. concludethat120mstepsarealwayssufficient.",
      "size": 761,
      "sentences": 7
    },
    {
      "id": 46,
      "content": "start,wemovetheescorttothebottomleftcornerfor (n2−1)-puzzleinstance.Throughcarefulcounting,wecan\nboth the start and goal configurations, which takes 4 steps. concludethat120mstepsarealwayssufficient. Thesewillbethenewstart/goalconfigurations.Fromhere,\nfortilesona3×mgrid,letB denotethesetoftilescorre- The 120m makespan can be significantly reduced with\nspondingtothe⌊m−2⌋rightmostcolumnsinthegoalcon- morecarefulanalysis,whichweomitduetolimitedspace. 3\nfiguration.WerefertothesetilesasBtilesandtherestasW The important takeaway is Lemma 5.2 shows GSTP on\ntiles.Wewilltreattheboundarycellsasacircularhighway 3×mgridscanbesolvedinO(m)steps,sufficientfores-\nmovingclockwiseandtheinnermiddlelineasaworkspace tablishingtheupperboundsinourclaimedcontribution.In\nto move B tiles to their destination. As an example, the B what follows, we describe related results needed to get the\n(resp., W) tiles are shown in dark gray (resp., light gray) constantfactorsstatedinTable1omittingtheproofs. in Fig.",
      "size": 991,
      "sentences": 6
    },
    {
      "id": 47,
      "content": "n. As an example, the B what follows, we describe related results needed to get the\n(resp., W) tiles are shown in dark gray (resp., light gray) constantfactorsstatedinTable1omittingtheproofs. in Fig. 7(b)-(g). The algorithm operates in three stages: (1) If we have two escorts, we can cycle them on opposite\n[표 데이터 감지됨]\n\n=== 페이지 7 ===\ncornersoftheirrespectiver-shiftstoallowtwocwr-shiftsto\nhappensimultaneously,leadingtothefollowing. Corollary5.3. GSTPinstanceswithtwoescortsona3×m\ngridcanbesolvedin60msteps. Withsignificantadditionaleffortsbutfollowingasimilar\nlineofreasoning,wecanestablishon2×mgridsthat (a) (b) (c) (d)\nLemma5.4. FeasibleGSTPinstanceswithasingleescort Figure8:Illustratingperformingabatchofrowshuffleson\nona2×mgridcanbesolvedin58msteps. a 4 × 4 grid with a single escort. (a). The (updated) start\nconfiguration,inwhicheachrowmustbepermuted.",
      "size": 860,
      "sentences": 11
    },
    {
      "id": 48,
      "content": "ngleescort Figure8:Illustratingperformingabatchofrowshuffleson\nona2×mgridcanbesolvedin58msteps. a 4 × 4 grid with a single escort. (a). The (updated) start\nconfiguration,inwhicheachrowmustbepermuted. (b).To\nWhilesimulatingtworoworcolumnpermutationsatonce\nprepare for running Corollary 5.5, the escort is moved to\ncanbeusefulinsolvingGSTPfaster,thelimitedamountof\nthe top left of the last two rows. (c). After applying Corol-\nspacemaypreventusfromdoingso.Instead,simulatingthe\nlary5.5tosortthelastrow,theescortisshiftedaboveforthe\npermutationofoneroworcolumnwillbemuchmoreuseful. next application. (d) The top two rows will be sorted using\nCorollary5.5. Givenasingleescort,a2×mgridcanbe\nLemma 5.4. Note that the top (resp., left) two rows (resp.,\npermutedtofilloneofitsrowsarbitrarilyin27msteps. columns) may not be fully solvable in the first two batches\nWithtwoescorts,wegetsignificantlyfasteralgorithms. ofshuffles,whichisfineforthenextsetofcolumnshuffles. Lemma5.6.",
      "size": 968,
      "sentences": 14
    },
    {
      "id": 49,
      "content": "owsarbitrarilyin27msteps. columns) may not be fully solvable in the first two batches\nWithtwoescorts,wegetsignificantlyfasteralgorithms. ofshuffles,whichisfineforthenextsetofcolumnshuffles. Lemma5.6. GSTPinstanceswithtwoescortsona2×m\ngridcanbesolvedin10m−13steps. ProofSketch. Theproofissimilartothesingleescortcase;\nCorollary5.7. Giventwoescortsontheleftofthetoprow with two escorts, we invoke Lemma 5.6 and Corollary 5.7\nofa2×mgrid,thebottomrowcanbearbitrarilypermuted tospeeduptheprocess.Theentireinstancecanbesolvedin\nin6m−1timesteps,maintainingthepositionoftheescorts. 2[(m −2)(6m −1)+10m −13]+[(m −2)(6m −1)+\n1 2 2 2 1\n10m −13]+4=18m m −4m −5m −29steps. Corollaries5.5and5.7willbeinstrumentalinparalleliz- 1 1 2 1 2\ning row and column permutations necessitated by the RTA\nTheorem 5.10. A GSTP instance containing 2 ≤ k <\nShuffles without wasting additional steps in permuting the\nmin(m ,m ) escorts, where k is even, can be solved with\notherrow.",
      "size": 951,
      "sentences": 11
    },
    {
      "id": 50,
      "content": "s necessitated by the RTA\nTheorem 5.10. A GSTP instance containing 2 ≤ k <\nShuffles without wasting additional steps in permuting the\nmin(m ,m ) escorts, where k is even, can be solved with\notherrow. 1 2\namakespanlessthan 44m\nk\n1m2 +m\n1\n(5− 2\nk\n4)+15m\n2\n−29. 5.4 TighterMakespanUpperBoundsfor GSTP\nProofSketch. The main strategy is distributing the escorts\nWearenowreadytotacklesolvingfullGSTPinstances.For acrosstherows/columnstointroduceparallelisminsolving\nGSTP,wewillonlyexaminethecaseinwhichgriddimen- abatchofrow/columnshuffles.Forexample,givenk = 2ℓ\nsionsareatleast2;theproblemisotherwisetrivial. escorts,tosolveabatchofm rowshuffles,wecandistribute\n1\ntwoescortsper m1 rows.Foreachsuch m1 rows,weinvoke\nTheorem 5.8. Feasible single-escort GSTP instances can ℓ ℓ\nLemma5.6andCorollary5.7tosolvethem,inparallel.This\nbesolvedin81m m +6m +9m −3steps. 1 2 1 2 allows the entire batch of row shuffles to be completed in\nProof.",
      "size": 926,
      "sentences": 8
    },
    {
      "id": 51,
      "content": "ible single-escort GSTP instances can ℓ ℓ\nLemma5.6andCorollary5.7tosolvethem,inparallel.This\nbesolvedin81m m +6m +9m −3steps. 1 2 1 2 allows the entire batch of row shuffles to be completed in\nProof. First, move the escort to the top left for start/goal\nO(m\nℓ\n1)O(m\n2\n) = O(m1\nℓ\nm1) = O(m1\nk\nm1) steps. Tallying\nover the three phases, the total number of steps required is\nconfigurations to get new start/goal configurations. Then,\nRTA is applied in a row-column-row fashion to yield three\nboundedby 44m\nk\n1m2 +m\n1\n(5− 2\nk\n4)+15m\n2\n−29. batches of row/column shuffles. Each batch requires sort-\nNotethatifk isodd,wecansimplyignoreoneescort.It\ningm orm rowsorcolumns.Inthe4×4gridshownin\n1 2 isalsocleartheresultscontinuetoapplyforkmin(m ,m )\nFig. 8(a), a batch of row shuffles must permute each of the 1 2\nbyignoringextraescorts,butwecangetadditionalspeedups\nfourrowshighlightedindifferentcolors.Wearedoneifwe\nwhen k ≥ m + m − 1 due to enough room to use 5.6\ncansuccessfullyperformeachbatchofshuffles.",
      "size": 1000,
      "sentences": 8
    },
    {
      "id": 52,
      "content": "1 2\nbyignoringextraescorts,butwecangetadditionalspeedups\nfourrowshighlightedindifferentcolors.Wearedoneifwe\nwhen k ≥ m + m − 1 due to enough room to use 5.6\ncansuccessfullyperformeachbatchofshuffles. 1 2\nstraightforwardly by having escorts along the top row and\nTo execute a batch of shuffles, e.g., performing the four\nleftcolumn.Compilingeverythingsofaryieldstheclaimed\nrowshufflesonthe4×4gridshowninFig.8(a),wemove\nboundsgiveninTable.1. the escort to the top left of the bottom two rows and apply\nCorollary 5.5 sort the last row. The procedure is repeated\n6 ConclusionandDiscussion\nwith the escort moved one row above, until there are only\ntwo top rows, at which point Lemma 5.4 is invoked to ar- We show that it is NP-complete to compute makespan-\nrange the two rows simultaneously. The top two rows may optimal solutions for the generalized sliding-tile puz-\nnotbesolvedexactlybecausenotall(N2 −1)-puzzlesare zle (GSTP).",
      "size": 925,
      "sentences": 5
    },
    {
      "id": 53,
      "content": "lete to compute makespan-\nrange the two rows simultaneously. The top two rows may optimal solutions for the generalized sliding-tile puz-\nnotbesolvedexactlybecausenotall(N2 −1)-puzzlesare zle (GSTP). We further establish matching asymptotic\nsolvable, but the issue will resolve on its own if the GSTP makespanlowerandupperboundsforGSTPforallpossible\ninstanceissolvable.Othershufflesareexecutedsimilarly. numbers of escorts, and provide concrete constants for all\nCountingallsteps,thetotalnumberisatmost81m m + makespanupperbounds.Inongoingandfuturework,weare\n1 2\n6m +9m −3. examining(1)computingoptimalsolutionsforotherobjec-\n1 2\ntivesforGSTP,(2)relatedvariationsoftheGSTPformula-\nTheorem 5.9. A two-escort GSTP instance can be solved tion,and(3)developingpracticalalgorithmsforcomputing\nin18m m −4m −5m −29steps. differentoptimalsolutionsforlarge-scaleGSTPinstances. 1 2 1 2\n=== 페이지 8 ===\nAcknowledgement Objects;PSPACE-Hardnessofthe”Warehouseman’sProb-\nlem”.",
      "size": 960,
      "sentences": 8
    },
    {
      "id": 54,
      "content": "icalalgorithmsforcomputing\nin18m m −4m −5m −29steps. differentoptimalsolutionsforlarge-scaleGSTPinstances. 1 2 1 2\n=== 페이지 8 ===\nAcknowledgement Objects;PSPACE-Hardnessofthe”Warehouseman’sProb-\nlem”. The international journal of robotics research, 3(4):\nWe thank the reviewers and editorial staff for their insight-\n76–88. ful suggestions. This work is supported in part by the DI-\nMACSREUprogramNSFCNS-2150186,NSFawardCCF- Korf, R. E. 2008. Linear-time disk-based implicit graph\n1934924, NSF award IIS-1845888, and an Amazon Re- search. JournaloftheACM(JACM),55(6):1–40. searchAward. Kornhauser, D.; Miller, G.; and Spirakis, P. 1984. Coordi-\nnatingPebbleMotionOnGraphs,TheDiameterOfPermu-\nReferences tation Groups, And Applications. In 25th Annual Sympo-\nAtzmon, D.; Stern, R.; Felner, A.; Wagner, G.; Barta´k, R.; siumonFoundationsofComputerScience,1984.,241–250. andZhou,N.-F.2018. Robustmulti-agentpathfinding. In IEEE.",
      "size": 924,
      "sentences": 15
    },
    {
      "id": 55,
      "content": "ications. In 25th Annual Sympo-\nAtzmon, D.; Stern, R.; Felner, A.; Wagner, G.; Barta´k, R.; siumonFoundationsofComputerScience,1984.,241–250. andZhou,N.-F.2018. Robustmulti-agentpathfinding. In IEEE. ProceedingsoftheInternationalSymposiumonCombinato- Li,J.;Ruml,W.;andKoenig,S.2021. Eecbs:Abounded-\nrialSearch,volume9(1),2–9. suboptimalsearchformulti-agentpathfinding. InProceed-\nAuletta, V.; Monti, A.; Parente, M.; and Persiano, P. 1999. ings of the AAAI Conference on Artificial Intelligence, vol-\nAlinear-timealgorithmforthefeasibilityofpebblemotion ume35(14),12353–12362. ontrees. Algorithmica,23(3):223–245. Loyd, S. 1959. Mathematical puzzles, volume 1. Courier\nBarer,M.;Sharon,G.;Stern,R.;andFelner,A.2014. Sub- Corporation. optimal variants of the conflict-based search algorithm for Mason, R. 2019. Developing a profitable online grocery\nthemulti-agentpathfindingproblem.",
      "size": 881,
      "sentences": 17
    },
    {
      "id": 56,
      "content": "on,G.;Stern,R.;andFelner,A.2014. Sub- Corporation. optimal variants of the conflict-based search algorithm for Mason, R. 2019. Developing a profitable online grocery\nthemulti-agentpathfindingproblem. InProceedingsofthe logisticsbusiness:Exploringinnovationsinordering,fulfil-\nInternationalSymposiumonCombinatorialSearch,volume ment,anddistributionatocado. ContemporaryOperations\n5(1),19–27. and Logistics: Achieving Excellence in Turbulent Times,\nCulberson,J.;andSchaeffer,J.1994. Efficientlysearching 365–383. the15-puzzle.Technicalreport,UniversityofAlberta.Tech- Okumura, K. 2023. Lacam: Search-based algorithm for\nnicalreportTR94-08. quick multi-agent pathfinding. In Proceedings of the\nCulberson,J.C.;andSchaeffer,J.1998. Patterndatabases. AAAIConferenceonArtificialIntelligence,volume37(10),\nComputationalIntelligence,14(3):318–334. 11655–11662. Demaine,E.D.;Fekete,S.P.;Keldenich,P.;Meijer,H. ;and Okumura, K.; Machida, M.; De´fago, X.; and Tamura, Y.\nScheffer, C. 2019.",
      "size": 977,
      "sentences": 17
    },
    {
      "id": 57,
      "content": "gence,volume37(10),\nComputationalIntelligence,14(3):318–334. 11655–11662. Demaine,E.D.;Fekete,S.P.;Keldenich,P.;Meijer,H. ;and Okumura, K.; Machida, M.; De´fago, X.; and Tamura, Y.\nScheffer, C. 2019. Coordinated Motion Planning: Recon- 2022. Priority inheritance with backtracking for itera-\nfiguringaSwarmofLabeledRobotswithBoundedStretch. tive multi-agent path finding. Artificial Intelligence, 310:\nSIAMJournalonComputing,48(6):1727–1762. 103752. Demaine, E.D. ; andRudoy, M.2018. A simple proof that Pottinger, D. 1999. Implementing coordinated movement. the (n2 - 1)-puzzle is hard. Theoretical Computer Science, GameDeveloperMagazine,48–58. 732:80–84. Ratner,D.;andWarmuth,M.1990. The(n2-1)-puzzleand\nErdem,E.;Kisa,D.;Oztok,U. ;andSchu¨ller,P.2013.Agen- relatedrelocationproblems. JournalofSymbolicComputa-\neralformalframeworkforpathfindingproblemswithmulti- tion,10(2):111–137. pleagents. InProceedingsoftheAAAIConferenceonArti- Santalo´,L.A.2004.",
      "size": 954,
      "sentences": 22
    },
    {
      "id": 58,
      "content": "gen- relatedrelocationproblems. JournalofSymbolicComputa-\neralformalframeworkforpathfindingproblemswithmulti- tion,10(2):111–137. pleagents. InProceedingsoftheAAAIConferenceonArti- Santalo´,L.A.2004. Integralgeometryandgeometricprob-\nficialIntelligence,volume27(1),290–296. ability. Cambridgeuniversitypress. Erdmann,M. ;andLozano-Perez,T.1987.Onmultiplemov- Sharon,G.;Stern,R.;Felner,A.;andSturtevant,N.R.2015. ingobjects. Algorithmica,2:477–521. Conflict-based search for optimal multi-agent pathfinding. Fekete, S. P.; Keldenich, P.; Krupke, D.; and Mitchell, ArtificialIntelligence,219:40–66. J. S. 2022. Computing coordinated motion plans for robot Sharon,G.;Stern,R.;Goldenberg,M.;andFelner,A.2013. swarms:Thecg:shopchallenge2021. ACMJournalofEx- The increasing cost tree search for optimal multi-agent\nperimentalAlgorithmics(JEA),27:1–12. pathfinding. Artificialintelligence,195:470–495. Geft, T.; and Halperin, D. 2022. Refined Hard- Silver,D.2005. Cooperativepathfinding.",
      "size": 980,
      "sentences": 22
    },
    {
      "id": 59,
      "content": "rch for optimal multi-agent\nperimentalAlgorithmics(JEA),27:1–12. pathfinding. Artificialintelligence,195:470–495. Geft, T.; and Halperin, D. 2022. Refined Hard- Silver,D.2005. Cooperativepathfinding. InProceedingsof\nness of Distance-Optimal Multi-Agent Path Finding. theaaaiconferenceonartificialintelligenceandinteractive\narXiv:2203.07416. digitalentertainment,volume1(1),117–122. Goldreich,O.2011. Findingtheshortestmove-sequencein Solovey,K.;andHalperin,D.2015. Onthehardnessofun-\nthegraph-generalized15-puzzleisNP-hard. Springer. labeledmulti-robotmotionplanning. arXiv:1408.2260. Guo, T.; and Yu, J. 2022. Sub-1.5 Time-Optimal Standley,T.2010. Findingoptimalsolutionstocooperative\nMulti-Robot Path Planning on Grids in Polynomial Time. pathfinding problems. In Proceedings of the AAAI Confer-\narXiv:2201.08976. enceonArtificialIntelligence,volume24(1),173–178. Guo, T.; and Yu, J. 2023.",
      "size": 891,
      "sentences": 22
    },
    {
      "id": 60,
      "content": "Robot Path Planning on Grids in Polynomial Time. pathfinding problems. In Proceedings of the AAAI Confer-\narXiv:2201.08976. enceonArtificialIntelligence,volume24(1),173–178. Guo, T.; and Yu, J. 2023. Toward Efficient Phys- Stern, R.; Sturtevant, N.; Felner, A.; Koenig, S.; Ma, H.;\nical and Algorithmic Design of Automated Garages. Walker,T.;Li,J.;Atzmon,D.;Cohen,L.;Kumar,T.;etal. arXiv:2302.01305. 2019. Multi-agent pathfinding: Definitions, variants, and\nHopcroft,J.E.;Schwartz,J.T.;andSharir,M.1984. Onthe benchmarks.InProceedingsoftheInternationalSymposium\nComplexity of Motion Planning for Multiple Independent onCombinatorialSearch,volume10(1),151–158. === 페이지 9 ===\nSurynek, P. 2010. An optimization variant of multi-robot\npath planning is intractable. In Proceedings of the AAAI\nconference on artificial intelligence, volume 24(1), 1261–\n1263. Surynek, P. 2012. Towards optimal cooperative path plan-\nninginhardsetupsthroughsatisfiabilitysolving.",
      "size": 955,
      "sentences": 16
    },
    {
      "id": 61,
      "content": "ble. In Proceedings of the AAAI\nconference on artificial intelligence, volume 24(1), 1261–\n1263. Surynek, P. 2012. Towards optimal cooperative path plan-\nninginhardsetupsthroughsatisfiabilitysolving. InPacific\nRiminternationalconferenceonartificialintelligence,564–\n576.Springer. Szegedy,M.;andYu,J.2023. Rubiktablesandobjectrear-\nrangement.TheInternationalJournalofRoboticsResearch,\n42(6):459–472. Wilson,R.M.1974. Graphpuzzles,homotopy,andtheal-\nternatinggroup. JournalofCombinatorialTheory,SeriesB,\n16(1):86–96. Wurman, P. R.; D’Andrea, R.; and Mountz, M. 2008. Co-\nordinatinghundredsofcooperative,autonomousvehiclesin\nwarehouses. AImagazine,29(1):9–9. Yu, J. 2013. A linear time algorithm for the feasibility of\npebblemotionongraphs. arXivpreprintarXiv:1301.2342. Yu,J.;andLaValle,S.2013. Structureandintractabilityof\noptimalmulti-robotpathplanningongraphs.InProceedings\nof the AAAI Conference on Artificial Intelligence, volume\n27(1),1443–1449. Yu, J.; and LaValle, S. M. 2016.",
      "size": 982,
      "sentences": 20
    },
    {
      "id": 62,
      "content": "e,S.2013. Structureandintractabilityof\noptimalmulti-robotpathplanningongraphs.InProceedings\nof the AAAI Conference on Artificial Intelligence, volume\n27(1),1443–1449. Yu, J.; and LaValle, S. M. 2016. Optimal multirobot\npathplanningongraphs:Completealgorithmsandeffective\nheuristics. IEEE Transactions on Robotics, 32(5): 1163–\n1177.",
      "size": 332,
      "sentences": 5
    }
  ]
}