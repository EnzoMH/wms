{
  "source": "ArXiv",
  "filename": "022_Dynamic_AGV_Task_Allocation_in_Intelligent_Warehou.pdf",
  "total_chars": 73074,
  "total_chunks": 106,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\nDynamic AGV Task Allocation in Intelligent Warehouses\nArashDehghana,MucahitCevika,1,∗,MerveBodurb\naTorontoMetropolitanUniversity,Toronto,ON,Canada\nbUniversityofEdinburgh,Edinburgh,UK\nAbstract\nThis paper explores the integration of Automated Guided Vehicles (AGVs) in warehouse order\npicking,acrucialandcost-intensiveaspectofwarehouseoperations. TheboomingAGVindustry,\naccelerated by the COVID-19 pandemic, is witnessing widespread adoption due to its efficiency,\nreliability,andcost-effectivenessinautomatingwarehousetasks. Thispaperfocusesonenhancing\nthe picker-to-parts system, prevalent in small to medium-sized warehouses, through the strate-\ngic use of AGVs. We discuss the benefits and applications of AGVs in various warehouse tasks,\nhighlighting their transformative potential in improving operational efficiency. We examine the\ndeployment of AGVs by leading companies in the industry, showcasing their varied functionali-\nties in warehouse management.",
      "size": 974,
      "sentences": 5
    },
    {
      "id": 2,
      "content": "ransformative potential in improving operational efficiency. We examine the\ndeployment of AGVs by leading companies in the industry, showcasing their varied functionali-\nties in warehouse management. Addressing the gap in research on optimizing operational perfor-\nmance in hybrid environments where humans and AGVs coexist, our study delves into a dynamic\npicker-to-parts warehouse scenario. We propose a novel approach Neural Approximate Dynamic\nProgramming approach for coordinating a mixed team of human and AGV workers, aiming to\nmaximize order throughput and operational efficiency. This involves innovative solutions for non-\nmyopicdecisionmaking,orderbatching,andbatterymanagement. Wealsodiscusstheintegration\nof advanced robotics technology in automating the complete order-picking process.",
      "size": 799,
      "sentences": 6
    },
    {
      "id": 3,
      "content": "es innovative solutions for non-\nmyopicdecisionmaking,orderbatching,andbatterymanagement. Wealsodiscusstheintegration\nof advanced robotics technology in automating the complete order-picking process. Through a\ncomprehensive numerical study, our work offers valuable insights for managing a heterogeneous\nworkforce in a hybrid warehouse setting, contributing significantly to the field of warehouse au-\ntomationandlogistics. ∗Correspondingauthor\nEmailaddresses: arash.dehghan@torontomu.ca(ArashDehghan),mcevik@torontomu.ca\n(MucahitCevik),merve.bodur@ed.ac.uk(MerveBodur)\n1TorontoMetropolitanUniversity,Toronto,ON,Canada\n1\n3202\nceD\n62\n]CO.htam[\n1v62061.2132:viXra\n=== 페이지 2 ===\nKeywords: Warehousemanagement,Dynamictaskallocation,Approximatedynamic\nprogramming,Deeplearning\n1. Introduction\nTheAutomatedGuidedVehicle(AGV)industryisflourishingwithinthewarehousingsector,\nwithover100manufacturerscompetinginthisgrowingmarket[1].",
      "size": 923,
      "sentences": 5
    },
    {
      "id": 4,
      "content": "ion,Approximatedynamic\nprogramming,Deeplearning\n1. Introduction\nTheAutomatedGuidedVehicle(AGV)industryisflourishingwithinthewarehousingsector,\nwithover100manufacturerscompetinginthisgrowingmarket[1]. FinancialinvestmentinAGVs\ncontinues to soar, projected to hit US$2.74 billion by 2023, propelled further by the COVID-19\npandemic which accelerated investments in this domain [12]. A significant 53% of third-party lo-\ngistics providers see warehouse automation as a prime opportunity for 2023, showcasing a strong\ntrend towards embracing these technologies [28]. This pivot towards automation is not only a re-\nactiontopersistentlaborshortages,butalsoastrategicsteptostaycompetitiveagainstmajorretail\nconglomerates [4]. Retail behemoth Walmart anticipates that about 65% of its stores will incor-\nporate automation by 2026, emphasizing the critical role of AGV technology in shaping the retail\nsector’slogisticalfuture[18].",
      "size": 923,
      "sentences": 6
    },
    {
      "id": 5,
      "content": "il behemoth Walmart anticipates that about 65% of its stores will incor-\nporate automation by 2026, emphasizing the critical role of AGV technology in shaping the retail\nsector’slogisticalfuture[18]. Thiscollectivetransitionindicatesthatwarehouseautomation,espe-\ncially through AGV adoption, is swiftly becoming an industry norm, addressing modern logistics\nandsupplychainchallengeseffectively. The adoption of AGVs is driven by their significant advantages, which include improved\nefficiency that speeds up warehouse operations, as well as consistent and reliable workflow man-\nagement which reduces human error and enhances predictability [31]. Financially, they provide\nnotable direct labor cost reductions and indirect savings through improved accuracy and speed,\nwhile safety enhancements and reductions in workplace accidents bolster their value proposition\nfurther [5, 31, 39].",
      "size": 884,
      "sentences": 4
    },
    {
      "id": 6,
      "content": "ct labor cost reductions and indirect savings through improved accuracy and speed,\nwhile safety enhancements and reductions in workplace accidents bolster their value proposition\nfurther [5, 31, 39]. Furthermore, the agility of AGVs in adapting to varied tasks, their scalability\nfor business growth, their contribution to better space utilization, and the relative ease of integra-\ntion into existing systems fortify their appeal [5]. AGVs also enable a more strategic allocation\nof labor, allowing workers to focus on more complex or customer-centric tasks [30, 39]. Subse-\nquently, the breadth of AGV applications within warehouses continues to expand, encompassing\ntasks such as item delivery, stock replenishment, order picking, and loading and unloading, which\nare all essential to efficient warehouse operations [14, 32]. This wide-ranging functionality of\n2\n=== 페이지 3 ===\nAGVs showcases their transformative potential and their rising status as a staple in warehouse\nmanagementandlogistics.",
      "size": 998,
      "sentences": 5
    },
    {
      "id": 7,
      "content": "arehouse operations [14, 32]. This wide-ranging functionality of\n2\n=== 페이지 3 ===\nAGVs showcases their transformative potential and their rising status as a staple in warehouse\nmanagementandlogistics. Given the numerous advantages and the versatility in application, several companies have al-\nready made significant strides in integrating AGVs into their warehouse workflows. Amazon, a\ntrailblazer in warehouse automation, has deployed over 100,000 robots across its fulfillment cen-\nters, while Seegrid has introduced robust pallet trucks and tow tractors which can handle massive\nloads of up to 8,000 and 10,000 pounds, respectively [12].",
      "size": 640,
      "sentences": 4
    },
    {
      "id": 8,
      "content": "100,000 robots across its fulfillment cen-\nters, while Seegrid has introduced robust pallet trucks and tow tractors which can handle massive\nloads of up to 8,000 and 10,000 pounds, respectively [12]. Additionally, Linde Material Handling\ncaters to a broad range of customer needs, offering a diverse portfolio of AGVs designed for the\nmultifaceteddemandsofdailywarehouseoperations[15],andDematichaspositioneditsAGVsas\nessentialcomponentsformaterialtransport,bridgingthegapbetweenproductionareasandstorage\nfacilities,aswellasexecutingvariousotherlogisticaltasks[11]. OurworkinvestigatestheroleofAGVsintheorderpickingaspectsofwarehouseoperations,\nwhich involve individual items being selected and collected from storage locations to fulfill cus-\ntomerorders. Addressingthisaspectofwarehouseoperationsiscrucialasitisthemostexpensive\nand time-consuming.",
      "size": 849,
      "sentences": 4
    },
    {
      "id": 9,
      "content": "involve individual items being selected and collected from storage locations to fulfill cus-\ntomerorders. Addressingthisaspectofwarehouseoperationsiscrucialasitisthemostexpensive\nand time-consuming. More specifically, the picking process accounts for up to 55% of the total\nwarehouse operating costs [40], and as much as 60% of all labor activities within the warehouse\n[8]. Two common methods exist in manual order picking: picker-to-parts systems, where workers\ntravel to item locations, collect them, and move to the next location; and parts-to-picker systems,\nwhich bring goods from storage to designated picking areas for worker selection. Our paper pri-\nmarily focuses on the picker-to-parts systems as they are employed by a vast majority of small to\nmedium-sized retail and logistics firms [45], and up to 90% of warehouses in the grocery sector\n[22]. The integration of robotics into order picking operations presents a compelling opportunity\nforenhancementsinoperationalefficiency.",
      "size": 991,
      "sentences": 6
    },
    {
      "id": 10,
      "content": "firms [45], and up to 90% of warehouses in the grocery sector\n[22]. The integration of robotics into order picking operations presents a compelling opportunity\nforenhancementsinoperationalefficiency. Manualpicker-to-partstasksareamongthemostlabo-\nriousinwarehouses,oftenresultinginmusculoskeletaldisorders,lowbackpain,andotherphysical\nailments which can diminish the efficiency of the picking system [41]. Implementing robots not\nonly addresses these human-centric issues but also offers a substantial reduction in costs related\nto human labor, such as insurance, salaries, and benefits [5, 39]. Numerous studies have explored\n3\n=== 페이지 4 ===\nthe integration of Autonomous Mobile Robots (AMRs) in the picking process to aid human pick-\ners with the transportation of items within a hybrid environment [3, 26, 33, 38].",
      "size": 817,
      "sentences": 5
    },
    {
      "id": 11,
      "content": "explored\n3\n=== 페이지 4 ===\nthe integration of Autonomous Mobile Robots (AMRs) in the picking process to aid human pick-\ners with the transportation of items within a hybrid environment [3, 26, 33, 38]. In such setups,\nhumans are responsible for picking the items from shelves, while AMRs are utilized solely for\ntransportation, thereby automating only a portion of the picking process. However, thanks to ad-\nvancementsinobjectpickingtechnology,therearenowcompanieswhichautomatetheentiretyof\nthe robot-to-parts process. For instance, Magazino’s TORU [27] is a sophisticated logistics robot\nthat adeptly navigates to shelves to retrieve items directly or to pull cartons toward itself. When\ndealingwithmixedcartons,itsintegrated2Dand3Dcamerasemploy3Dcomputervisiontoscan\nthe shelf contents. After matching the items with its database, it selectively extracts the targeted\ngoods. These are then stored internally in the robot’s adaptable compartments.",
      "size": 947,
      "sentences": 7
    },
    {
      "id": 12,
      "content": "omputervisiontoscan\nthe shelf contents. After matching the items with its database, it selectively extracts the targeted\ngoods. These are then stored internally in the robot’s adaptable compartments. Equipped with\nnumerous sensors, TORU safely operates alongside humans, enabling the flexible automation of\ntasksthatwerepreviouslydonemanually. Thistechnologycanreducepickingcostsbyupto40%\nwhen compared to traditional methods. Similarly, Fetch Robotics has introduced its Fetch and\nFreightrobots[44]. ThesemachinesnavigatethroughADA-compliantbuildingsandareequipped\nwitharmscapableofreachingdowntoretrieveitemsfromthefloor,ensuringefficientitemrecov-\nery. Their comprehensive sensor array allows for object perception, navigation, and manipulation\nindynamicsettings. As the concept of a hybrid order-picking environment –where robots and humans work to-\ngether in a shared warehouse space– is relatively new, few studies explored the optimization of\noperational performance in such settings.",
      "size": 991,
      "sentences": 9
    },
    {
      "id": 13,
      "content": "d order-picking environment –where robots and humans work to-\ngether in a shared warehouse space– is relatively new, few studies explored the optimization of\noperational performance in such settings. That is, the collaboration between humans and robots\nin warehouses remains under-explored, leaving several unanswered questions about how to most\neffectively pair orders with this joint workforce to enhance efficiency. Our research specifically\nfocuses on this emerging paradigm. We explore the coordination of a mixed team of humans and\nAGVs navigating the warehouse space, with the objective of intelligently pairing incoming orders\nto these operatives, taking into account the battery management of AGVs. Our specific modeling\nobjective is to enhance operational efficiency and maximize order throughput.",
      "size": 807,
      "sentences": 5
    },
    {
      "id": 14,
      "content": "ly pairing incoming orders\nto these operatives, taking into account the battery management of AGVs. Our specific modeling\nobjective is to enhance operational efficiency and maximize order throughput. To that end, we de-\nvelopanovelMarkovDecisionProcess(MDP)modelanddeviseaNeuralApproximateDynamic\nProgramming(NeurADP)framework[37]tohandleefficientbatchingandassignmentofincoming\n4\n=== 페이지 5 ===\norders while concurrently managing the battery life of the robotic workers. While there has been\nsome recent research in this specific area within the AGV literature, it has mostly concentrated on\nstatic,predictablescenarios,oftenemployingbasicheuristicsorrule-basedapproachesforassign-\ning incoming orders to human and robot teams, and has also neglected the charging aspects of the\nrobots. Asummaryofcontributionstotheexistingliteratureisprovidedasfollows. • WeformulatetheorderpickingproblemasanMDPtoaccountfortheuncertaintyofstochas-\nticorderarrivalsinahybridenvironmentwithhumanandAGVworkers.",
      "size": 992,
      "sentences": 6
    },
    {
      "id": 15,
      "content": "ryofcontributionstotheexistingliteratureisprovidedasfollows. • WeformulatetheorderpickingproblemasanMDPtoaccountfortheuncertaintyofstochas-\nticorderarrivalsinahybridenvironmentwithhumanandAGVworkers. Ourmodelextends\nbeyondpreviousresearchforthisproblembybeingthefirsttoincorporatechargingstations\nwithinthehybridwarehousesettingandintroducebatterymanagementdecision-makingfor\nAGVs. • WeimplementaNeurADPsolutionmethodology,advancingbeyondtraditionalmyopic-and\nheuristic-based solutions used in previous work. Our experimental results demonstrate that\nNeurADP significantly outperforms myopic and heuristic-based methods, both in terms of\nthe quantity of orders processed, as well as in the efficiency achieved in executing picking\ntasks.",
      "size": 737,
      "sentences": 5
    },
    {
      "id": 16,
      "content": "nstrate that\nNeurADP significantly outperforms myopic and heuristic-based methods, both in terms of\nthe quantity of orders processed, as well as in the efficiency achieved in executing picking\ntasks. • Weprovidemanagerialinsightsrelatedtothehybridorderpickingsettingaswellasanalysis\non the impact of various factors such as the number and types of workers, worker speed,\ndelay time allowance, worker capacity, and the availability of orders for both humans and\nAGVs,alongwiththeincorporationoforderdeadlines. The remainder of the paper is organized as follows. Section 2 provides a comprehensive\nreview of the relevant AGV literature, better positioning our research within the existing body of\nwork. Section3providesaformaldescriptionoftheproblemsettingforourproblem. InSection4,\nwedescribethesolutionmethodology. Detailsregardingthedatasetsandbenchmarkpoliciesused\nin the experiments are provided in Section 5.",
      "size": 912,
      "sentences": 7
    },
    {
      "id": 17,
      "content": "idesaformaldescriptionoftheproblemsettingforourproblem. InSection4,\nwedescribethesolutionmethodology. Detailsregardingthedatasetsandbenchmarkpoliciesused\nin the experiments are provided in Section 5. The results of the computational experiments are\npresentedinSection6,followedbyaconclusioninSection7thatsummarizestheresearchfindings\nandsuggestsavenuesforfutureresearch. 5\n=== 페이지 6 ===\n2. LiteratureReview\nAGVcontrolproblemsmaybebrokendownintofivecoretasks: taskallocation,inwhichthe\ngoal is to optimally assign a set of tasks to a set of AGVs, localization, where the goal is to locate\ntheexactlocationonamap,pathplanning,whichseekstogenerateanobstacle-freepathfromtwo\nlocations, motion planning, which requires real time modifications of a planned path according\nto dynamic obstacles, and vehicle management, which focuses on the management of vehicles\nbattery, error, and maintenance statuses. Our research particularly relates to task allocation and\nvehiclemanagementaspects.",
      "size": 980,
      "sentences": 7
    },
    {
      "id": 18,
      "content": "acles, and vehicle management, which focuses on the management of vehicles\nbattery, error, and maintenance statuses. Our research particularly relates to task allocation and\nvehiclemanagementaspects. Battery management is an important part of AGV operations. While many studies highlight\nthe importance of integrating battery management into AGV decision-making, emphasizing its\nsignificantinfluenceonsystemperformance[23,42],theliteraturestilllargelyoverlooksthisarea\n[9]. KawakamiandTakata[20]investigatetheimportanceofbatterymanagementinAGVsystems\nforreducingcostsandimprovingefficiency. TheyspecificallyfocusonValve-regulatedLead-Acid\nbatteries,commonlyusedinAGVs,highlightingtheneedforappropriatechargingintervalstopre-\nvent battery deterioration and extend battery life.",
      "size": 776,
      "sentences": 6
    },
    {
      "id": 19,
      "content": "ngefficiency. TheyspecificallyfocusonValve-regulatedLead-Acid\nbatteries,commonlyusedinAGVs,highlightingtheneedforappropriatechargingintervalstopre-\nvent battery deterioration and extend battery life. Similarly, Kabir and Suzuki [17] examine the\neffects of different routing techniques for battery management on the performance of AGVs and\nanalyze how routing to charging stations can impact the overall productivity of a manufacturing\nfacility. Kabir and Suzuki [16] study how adjusting the battery charging durations of AGVs can\nenhancemanufacturingcapacitiesintheshortterm,andDeRycketal. [10]introduceanadvanced\ndecentralized method for optimizing the integration of charging stations into the existing optimal\ntour routes of AGVs. Different from these studies, which focus primarily on the battery manage-\nment aspects of AGV operations, our work extends the scope by integrating battery management\nconsiderationswithorder-pickingtaskallocationinahybridwarehousesetting.",
      "size": 973,
      "sentences": 6
    },
    {
      "id": 20,
      "content": "s primarily on the battery manage-\nment aspects of AGV operations, our work extends the scope by integrating battery management\nconsiderationswithorder-pickingtaskallocationinahybridwarehousesetting. Solution approaches for AGV task allocation may be broken down into two: optimization-\nbased and market-based. In optimization-based methods, an algorithm searches for an optimal\nsolution in a solution space which maximizes a profit or minimizes a cost using global informa-\ntion and considering all constraints. Whereas, in market-based methods, an economic principle is\nusedtosolvethetaskallocationproblem. Inthisliteraturereview,wefocusonoptimization-based\n6\n=== 페이지 7 ===\nmethods given that they are most relevant to our work; a breakdown of further market-based solu-\ntions may be found in [9].",
      "size": 799,
      "sentences": 5
    },
    {
      "id": 21,
      "content": "problem. Inthisliteraturereview,wefocusonoptimization-based\n6\n=== 페이지 7 ===\nmethods given that they are most relevant to our work; a breakdown of further market-based solu-\ntions may be found in [9]. Task allocation problems span many domains such as manufacturing,\nhealthcare, and robotics and can be solved using a wide range of methodologies such as exact\nalgorithms [2, 6, 13], heuristics [21, 24, 25, 35], dynamic programming [34], and many others. Several papers have looked at the incorporation of hybrid warehouse settings for order picking\ntaskallocationsystems. RecentstudieshaveexaminedtheuseofAMRsinhybridenvironmentstoassisthumanpick-\ners,wherehumanspickitemsfromshelvesandAMRshandletransportation[3,26,33,38]. Onthe\nother hand, innovations in object picking technology, such as Magazino’s TORU robot and Fetch\nRobotics’ Fetch and Freight robots, have enabled full automation of the picking process [27, 44].",
      "size": 921,
      "sentences": 6
    },
    {
      "id": 22,
      "content": ". Onthe\nother hand, innovations in object picking technology, such as Magazino’s TORU robot and Fetch\nRobotics’ Fetch and Freight robots, have enabled full automation of the picking process [27, 44]. The idea of a hybrid order-picking environment, combining human and robot collaboration in\nshared warehouse spaces, is relatively new, leading to a research gap in optimizing operational\nperformance in these contexts. However, recent studies have begun to explore and address this\nemerging field. We highlight these relevant studies in Table 1, which is comprised of seven indi-\ncators that provide information about the problem setting and solution methodology.",
      "size": 662,
      "sentences": 5
    },
    {
      "id": 23,
      "content": "and address this\nemerging field. We highlight these relevant studies in Table 1, which is comprised of seven indi-\ncators that provide information about the problem setting and solution methodology. These are:\n“Solution Technique”, which describes the approach used to solve the problem, “Non-Myopic”,\nwhich indicates whether a myopic solution technique is employed, “No Prior Knowledge”, which\nindicates whether orders are not known at the beginning of each work day, “Deadline”, which\nindicates whether specific deadlines are set for fulfilling incoming orders, “Shared Area”, which\nindicates whether human and AGVs workers share a workspace in the hybrid setting, “Batching”,\nwhich indicates whether orders are able to be batched together, and finally “Charging”, which\nindicateswhetherchargingdecisionsandbatterymanagementisconsideredforAGVs. Sgarbossa et al.",
      "size": 863,
      "sentences": 4
    },
    {
      "id": 24,
      "content": "g, “Batching”,\nwhich indicates whether orders are able to be batched together, and finally “Charging”, which\nindicateswhetherchargingdecisionsandbatterymanagementisconsideredforAGVs. Sgarbossa et al. [36] introduce a robotic picker designed for pallet retrieval and formulate a\nstrategy for allocating products between two distinct warehouse areas, which are designated re-\nspectively for human workers and robots. This approach involves a dual-objective optimization\nmodel aimed at reducing the labor intensity for human workers while simultaneously enhancing\nthe uniformity of product categories assigned to each zone. To achieve these objectives, the au-\nthors employ the non-dominated sorting genetic algorithm to balance the minimization of human\n7\n=== 페이지 8 ===\nTable1: Summaryofrelevantstudies. Study Solution Non- NoPrior Deadline Shared Batching Charging\nTechnique Myopic Knowledge Area\nSgarbossaetal. [36] Heuristic ✓\nZhangetal. [47] Heuristic ✓ ✓ ✓\nKaukeetal.",
      "size": 970,
      "sentences": 8
    },
    {
      "id": 25,
      "content": "le1: Summaryofrelevantstudies. Study Solution Non- NoPrior Deadline Shared Batching Charging\nTechnique Myopic Knowledge Area\nSgarbossaetal. [36] Heuristic ✓\nZhangetal. [47] Heuristic ✓ ✓ ✓\nKaukeetal. [19] Heuristic ✓ ✓ ✓\nWinkelhausetal. [43] Heuristic ✓ ✓\nZhangetal. [46] Heuristic ✓ ✓\nOurWork NeurADP ✓ ✓ ✓ ✓ ✓ ✓\nworkloadandthemaximizationofproductcategorysimilaritywithinthedesignatedzones. Zhang\net al. [47] develop a simulation model to assess the energy expenditure of human pickers in a\ncollaborative environment with picking robots, analyzing the operational costs, efficiency, and er-\ngonomic impact. The model defines distinct roles for human pickers and robots based on a set of\nassignment rules that are contingent on different item classes. Under these rules, items belonging\nto specific classes are allocated either to human pickers or robots, depending on the nature of the\nitemandthepredefinedcriteria.",
      "size": 917,
      "sentences": 11
    },
    {
      "id": 26,
      "content": "tingent on different item classes. Under these rules, items belonging\nto specific classes are allocated either to human pickers or robots, depending on the nature of the\nitemandthepredefinedcriteria. Thestudy’sscenariosarethencategorizedandevaluatedbasedon\nvaryingcombinationsoftheseassignmentrules,leadingtodifferentdistributionsoftasksbetween\nhumansandrobots. Kaukeetal. [19]investigatetheeffectsofaislewidthsandlayoutvariationson\nhuman-robot interaction in order picking systems, focusing on enhancing performance efficiency. Their study contrasts zoning strategies with traditional order picking systems, emphasizing the\ncomplexityandcoordinationdemandsofhybridsystemsinvolvingbothhumansandrobots. Their\napproach uses a heuristic to determine picking routes, and assigning tasks to either humans or\nrobots without considering individual traits. Winkelhaus et al. [43] present a simulation model for\nevaluatingtheperformanceofhybridorderpickingsystems,incorporatingvariablessuchaspicker\nblocking.",
      "size": 999,
      "sentences": 9
    },
    {
      "id": 27,
      "content": "or\nrobots without considering individual traits. Winkelhaus et al. [43] present a simulation model for\nevaluatingtheperformanceofhybridorderpickingsystems,incorporatingvariablessuchaspicker\nblocking. In their model, order assignments are based on predetermined workloads for each team,\ncategorized by item classes (e.g., A, B, or C) and their turnover rates. Each item is pre-assigned\nto a specific team according to its class. When an item is required for an order, the designated\nteammember,eitherahumanorarobot,isresponsibleforpickingit. Zhangetal. [46]proposean\nagent-based simulation model to explore how hybrid order picking systems can reduce the daily\nworkload of human pickers. Their model operates under the assumption that all customer orders\n8\n=== 페이지 9 ===\nare known before each shift, eliminating idle time due to late-arriving orders. Orders are assigned\nfollowing a “first-come-first-served” principle.",
      "size": 918,
      "sentences": 10
    },
    {
      "id": 28,
      "content": "ssumption that all customer orders\n8\n=== 페이지 9 ===\nare known before each shift, eliminating idle time due to late-arriving orders. Orders are assigned\nfollowing a “first-come-first-served” principle. The assignment rules stipulate that human pickers\nhandle‘A’items,whilerobotsareresponsiblefor‘B’and‘C’items. Our workexploresthe combineduse ofhumans andAGVs ina warehouseto processorders. It extends previous research by not only pairing orders with workers but also by managing AGV\ncharging. Unlikepreviousheuristic-basedmethods,weemployanon-myopicNeurADPapproach,\nwhich is shown to be effective in such complex scenarios [37]. Additionally, our model incorpo-\nrates order deadlines and our empirical study includes a detailed sensitivity analysis on various\nkey parameters such as worker types, speeds, delay allowances, capacity, and order availability. As such, our paper provides new managerial insights for effectively operating in this hybrid ware-\nhousesetting. 3.",
      "size": 972,
      "sentences": 9
    },
    {
      "id": 29,
      "content": "s such as worker types, speeds, delay allowances, capacity, and order availability. As such, our paper provides new managerial insights for effectively operating in this hybrid ware-\nhousesetting. 3. ProblemDescriptionandFormulation\nIn our study, we introduce a dynamic picker-to-parts model tailored for a hybrid warehouse\nenvironment, integrating both human and AGV workers. This model aims to efficiently allocate\nworkerstoincomingorderbatchesanddetermineoptimalchargingstrategiesforAGVs,including\nthetiminganddurationofchargingsessions. Itfunctionsovera24-hourdecisionhorizon,adapting\nto the variable demand patterns of orders in a grid-layout warehouse equipped with strategically\nplacedchargingstationsandadesignateddrop-offareaforpickeditems. Ordersinoursystemare\ngenerated stochastically, each with its own delivery deadline influenced by its arrival time.",
      "size": 864,
      "sentences": 7
    },
    {
      "id": 30,
      "content": "d with strategically\nplacedchargingstationsandadesignateddrop-offareaforpickeditems. Ordersinoursystemare\ngenerated stochastically, each with its own delivery deadline influenced by its arrival time. Upon\nassignment to a worker, an order becomes an incorporated part of the system, with a guarantee to\nmeet its designated drop-off deadline. Moreover, the model takes into account a predetermined\ngroup of heterogeneous workers available during the planning horizon, considering their capacity\nconstraintsand,inthecaseofAGVs,theirbatterylevels. Ourmodelincorporatesseveralkeyproblemspecificationsrelatedtothehybridorder-picking\nproblem setting. First, workers may be matched with multiple orders per time-step, wherein each\norder is associated with its own pick-up location. A worker is then expected to traverse the ware-\nhouse to pick up the orders at each of their respective locations and deliver them to the designated\ndrop-off area.",
      "size": 937,
      "sentences": 7
    },
    {
      "id": 31,
      "content": "ated with its own pick-up location. A worker is then expected to traverse the ware-\nhouse to pick up the orders at each of their respective locations and deliver them to the designated\ndrop-off area. Workers maintain a queue of their assigned orders to track which ones need to be\n9\n=== 페이지 10 ===\npickedupandwhichhavebeencollected,beforetheyaredeliveredtothedrop-offarea. Thequeue\nisdynamicallyrearrangedwheneveraneworderorbatchisassignedtoaworker,optimizingtheir\nroute within the warehouse for order collection and return to the drop-off area. Once an order is\nplaced in a worker’s queue, it cannot be transferred to another worker’s queue. Unmatched orders\nthat surpass their arrival period are removed from the system, reflecting the expectation of cus-\ntomersfortimelyconfirmationoftheirrequests. However,newordersarrivinginsubsequenttime\nsteps can be assigned to workers and added to their queues, provided several considerations are\ntakenintoaccount.",
      "size": 957,
      "sentences": 7
    },
    {
      "id": 32,
      "content": "tomersfortimelyconfirmationoftheirrequests. However,newordersarrivinginsubsequenttime\nsteps can be assigned to workers and added to their queues, provided several considerations are\ntakenintoaccount. First, each worker has a designated capacity corresponding to the size of their storage bin,\nwhich is used to hold orders. Subsequently, a batch of orders is only eligible to be matched with a\nworkeriftheadditionalcapacityassignedtothemdoesnotexceedtheirbincapacity. Furthermore,\na batch of orders may only be assigned to a worker and added to their queue if by adding the\nbatch of orders, the worker is still able to pick up all remaining orders and drop off all orders\nat the drop-off area prior to each orders deadline. For AGVs, battery levels are additionally a\ncrucial factor in matching them with order batches.",
      "size": 818,
      "sentences": 6
    },
    {
      "id": 33,
      "content": "ick up all remaining orders and drop off all orders\nat the drop-off area prior to each orders deadline. For AGVs, battery levels are additionally a\ncrucial factor in matching them with order batches. Specifically, an AGV is only assigned a batch\nif it can complete all orders in that batch, as well as those already in its queue, and still reach the\nnearestchargingstationbeforeitsbatterydepletescompletely. ThispolicyensuresAGVsmaintain\nsufficient charge throughout the operational period. Additionally, it is assumed that AGVs cannot\nchargewhileservingorders. Onceadecisiontochargeismade,theAGVwillchargeuninterrupted\nuntilthestartofthenextdecisionepoch. The main goal of our model is to maximize the fulfillment of online orders within the de-\ncision horizon. We factor in uncertainties of future order arrivals and the downstream effects of\ncurrentchoices,includingthoserelatedtochargingdecisions.",
      "size": 901,
      "sentences": 8
    },
    {
      "id": 34,
      "content": "fulfillment of online orders within the de-\ncision horizon. We factor in uncertainties of future order arrivals and the downstream effects of\ncurrentchoices,includingthoserelatedtochargingdecisions. Tomanagethesecomplexdecisions,\nwe develop an MDP model and incorporated a NeurADP solution framework. This approach fa-\ncilitates efficient real-time decision-making, even amid uncertainty. We present the MDP model\ncomponentsinTable2.",
      "size": 433,
      "sentences": 5
    },
    {
      "id": 35,
      "content": "evelop an MDP model and incorporated a NeurADP solution framework. This approach fa-\ncilitates efficient real-time decision-making, even amid uncertainty. We present the MDP model\ncomponentsinTable2. To begin, the planning horizon T is divided into discrete time intervals of δ (e.g., five min-\nutes),suchthatdecisionsaremadeatthebeginningofeachinterval,whileexogenousinformation,\n10\n=== 페이지 11 ===\nTable2: MDPmodelcomponents\nComponent Notation/Description\nDecisionepochs t∈T ={0,...,T}\nSystemstate=(Workers,Orders) S =(W,O)\nt t t\nWorkerattributes w =(w ,w ,w ,w ,w )∈W\nloc human cap bat ords\nOrderattributes o=(o ,o ,o )∈O\npickup human dead\nDecisions a =(Assignorderbatch,ChargeAGV,Null)\nt\nFeasibledecisions a ∈A(S )\nt t t\nImmediatereward R(a)=β ·Ordersfulfilled-Timeuntildrop-off\nt t\nPost-decisionstate SPost =statepost(S ,a)=(SWorker-Post,SOrder-Post =∅)\nt t t t t\nExogenousuncertaintyinformation W : ordersarrivingbetweentandt+1\nt+1\nStatetransition S =statenext(SPost,W )=(SWorker-Post,W )\nt+1 t t+1 t t+1\nValuefunction V(S )\nt t\nPost-decisionvaluefunction VPost(SWorker-Post)=E [V (S )|SWorker-Post]\nt t Wt+1 t+1 t+1 t\nBellmanoptimalityequation V(S )=max{R(a)+VPost(SWorker-Post):a ∈A(S )}\nt t t t t t t t t\nMDPformulation maxV (S )\n0 0\ndenoted by W, is observed continuously throughout.",
      "size": 1292,
      "sentences": 4
    },
    {
      "id": 36,
      "content": "orker-Post]\nt t Wt+1 t+1 t+1 t\nBellmanoptimalityequation V(S )=max{R(a)+VPost(SWorker-Post):a ∈A(S )}\nt t t t t t t t t\nMDPformulation maxV (S )\n0 0\ndenoted by W, is observed continuously throughout. The state of the system S is characterized\nt\nbytheattributesofworkersandorders,definedbyW andO,respectively. Anindividualworker’s\nstateiscapturedbyafive-dimensionalattributevectorw. Thisvectorincludesw ,indicatingtheir\nloc\nposition in the warehouse, and w , a binary attribute distinguishing between human workers\nhuman\nand AGVs. w reflects the worker’s current order capacity, w shows their battery level (appli-\ncap bat\ncable only to AGVs), and w details the worker’s task queue, including assigned orders. This\nords\nqueue, optimized for minimal travel time, is updated with each new batch of orders assigned to\nthe worker. Moreover, the state of each order is represented by a three-dimensional vector o.",
      "size": 907,
      "sentences": 7
    },
    {
      "id": 37,
      "content": "This\nords\nqueue, optimized for minimal travel time, is updated with each new batch of orders assigned to\nthe worker. Moreover, the state of each order is represented by a three-dimensional vector o. This\nincludes o , specifying the order’s storage location in the warehouse, o , a binary value\npickup human\nindicating if the order requires handling exclusively by humans, and o , the drop-off deadline,\ndead\ncalculatedast+γ . Here,γ denotesthepermissibledelaytimefortheordero. o o\nThe set of feasible decisions may be defined by a ∈ A (S ). An individual action a for a\nt t t t\nworker may encompass one of the following: allocating a batch of orders, designating a charging\ntask,orassigninganullaction. Theassignmentoforderbatchesdependsontheworker’scapacity\nand ability to deliver both new and existing orders before their deadlines.",
      "size": 834,
      "sentences": 7
    },
    {
      "id": 38,
      "content": "atch of orders, designating a charging\ntask,orassigninganullaction. Theassignmentoforderbatchesdependsontheworker’scapacity\nand ability to deliver both new and existing orders before their deadlines. For AGVs, this also\nincludestheneedtohavesufficientbatterytocompletedeliveriesandpotentiallyreachacharging\n11\n[표 데이터 감지됨]\n\n=== 페이지 12 ===\nstation complete depletion. The charging action, specific to AGVs, is only feasible if the AGV\nis not actively serving orders. When assigned a charging action, the worker heads to the nearest\ncharging station in the warehouse. If they arrive at the charging station before the next decision\nepoch, they use the remaining time until that epoch to recharge their battery. Conversely, if the\nworkerdoesn’treachthechargingstationbythenextdecisionepoch,anewdecisionwillbemade\nfor them in the subsequent epoch, based on their updated state.",
      "size": 872,
      "sentences": 7
    },
    {
      "id": 39,
      "content": "t epoch to recharge their battery. Conversely, if the\nworkerdoesn’treachthechargingstationbythenextdecisionepoch,anewdecisionwillbemade\nfor them in the subsequent epoch, based on their updated state. Finally, the null action implies\nthat the worker continues their current activity, whether that is progressing with order pick-up and\ndeliveryorremainingidleintheabsenceofneworders. Furthermore,theimmediaterewardforan\naction a is determined by multiplying the total orders served by β and then subtracting the time\nt\nfrom t until the worker can deliver their assigned orders to the drop-off area. β is introduced to\nprioritizemaximizingthenumberoforderscompletedperinterval,ensuringthisaspectoutweighs\nthe time factor. When actions serve an equal number of orders, preference is given to the one\nthat minimizes task completion time, thereby freeing workers sooner for new order batches. This\naspectiscalculatedbymultiplyingtheworker’smaximumcapacitylengthbyγ.",
      "size": 959,
      "sentences": 7
    },
    {
      "id": 40,
      "content": "ers, preference is given to the one\nthat minimizes task completion time, thereby freeing workers sooner for new order batches. This\naspectiscalculatedbymultiplyingtheworker’smaximumcapacitylengthbyγ. VPost\n0\nVPost\n1\nW 0 W 1 W 2 W T\nPrevious S 0 t=0 S 0 Post S 1 t=1 S 1 Post S 2 t=2 S T t=T Next\nHorizon Horizon\n𝑎 0 R 0 𝑎 1 R 1 𝑎 2 R 2 𝑎 T R T\nV\nT\nV\n2\nV\n1\nV\n0\nFigure1: Systemevolutionforoneplanninghorizon\nInMDPmodels,thesystemevolutioninvolvesthetransitionfromaninitialstateS ,viaaset\n0\nofactionsa ,toasubsequentstateS . Thisrecursiveevolutioniscontinueduntilthefinaldecision\n0 1\n12\n[표 데이터 감지됨]\n\n=== 페이지 13 ===\nepochofthehorizonattimeT. However,asillustratedinFigure1,thesystemevolutioninADPis\nmoregranularlydefinedtoexplicitlydenotepre-decisionandpost-decisionstates,aswellasthear-\nrivalofexogenousinformation. GivenaninitialstateS ,andthearrivalofexogenousinformation\n0\nW ,asetofactionsa maybetakenattimet = 0,correspondingtosubsequentrewardsofR .",
      "size": 950,
      "sentences": 6
    },
    {
      "id": 41,
      "content": "st-decisionstates,aswellasthear-\nrivalofexogenousinformation. GivenaninitialstateS ,andthearrivalofexogenousinformation\n0\nW ,asetofactionsa maybetakenattimet = 0,correspondingtosubsequentrewardsofR . The\n0 0 0\nsystem then progresses to a post-decision state, denoted as SPost = statepost(S ,a ). This\n0 0 0\nrepresentsthesystem’sstateafterimplementingactionsonS ,butbeforethearrivalofnewexoge-\n0\nnous information in the next time step. The subsequent state, S , emerges through the receipt of\n1\nexogenous uncertainty W and the state transition function statenext(SPost,W ). This recur-\n1 0 1\nsive process again repeats up to the final decision epoch at time T. In our order picking problem,\ngiven that orders exit the system at the end of each decision epoch, the post-decision state may be\nrepresented as SPost = (SWorker-Post,SOrder-Post = ∅). The state transition is then expressed by\nt t t\nS = (SWorker-Post,W ),whereW denotesthearrivalofordersbetweentandt+1.",
      "size": 962,
      "sentences": 7
    },
    {
      "id": 42,
      "content": "post-decision state may be\nrepresented as SPost = (SWorker-Post,SOrder-Post = ∅). The state transition is then expressed by\nt t t\nS = (SWorker-Post,W ),whereW denotesthearrivalofordersbetweentandt+1. t+1 t t+1 t+1\nGiven that V (S ) denotes the value of being in a state S at decision epoch t, we may define\nt t t\ntheBellmanoptimalityequationassuch:\nV (S ) = max{R (a )+E [V (S )|S ,a ,W ] : a ∈ A (S )}.",
      "size": 403,
      "sentences": 3
    },
    {
      "id": 43,
      "content": "t t+1 t+1\nGiven that V (S ) denotes the value of being in a state S at decision epoch t, we may define\nt t t\ntheBellmanoptimalityequationassuch:\nV (S ) = max{R (a )+E [V (S )|S ,a ,W ] : a ∈ A (S )}. (1)\nt t t t Wt+1 t+1 t+1 t t t+1 t t t\nIncorporating the post-decision state, we may break down and rewrite the Bellman equation as\nfollows:\nV (S ) = max{R (a )+VPost(SWorker-Post) : a ∈ A (S )} (2a)\nt t t t t t t t t\nVPost(SWorker-Post) = E [V (S )|SWorker-Post,W ] (2b)\nt t Wt+1 t+1 t+1 t t+1\nTo simplify calculations and avoid the computational burden of examining each possible outcome\nfor future values, Equation (2a) formulates a deterministic optimality equation based on the post-\ndecision state, while Equation (2b) defines the value of the post-decision state as the expected\ntotaloffuturerewards. Giventheimpracticalityofcalculatingthisexpectedvalue,anapproximate\nvalue of the post-decision state value function is taken instead.",
      "size": 940,
      "sentences": 3
    },
    {
      "id": 44,
      "content": "e of the post-decision state as the expected\ntotaloffuturerewards. Giventheimpracticalityofcalculatingthisexpectedvalue,anapproximate\nvalue of the post-decision state value function is taken instead. This approach facilitates a more\nmanageable and efficient estimation of future rewards, streamlining the optimization process in\n13\n=== 페이지 14 ===\nlarge-scale problems such as the one in this paper. To determine the optimal policy which maxi-\nmizes the total expected reward, we must maximize the initial value function V , given the initial\n0\nstateS . Assuch,theobjectiveofourMDPmodelcanbedefinedasmaxV (S ). 0 0 0\n4. SolutionMethodology\nWe adapt the NeurADP framework [37] to our problem. NeurADP is a novel ADP-based\nalgorithm designed for large-scale decision-making problems. It employs neural network value\nfunctionapproximationsandutilizesdeepreinforcementlearningtechniquesforimprovedstability\nand efficiency.",
      "size": 917,
      "sentences": 9
    },
    {
      "id": 45,
      "content": "d\nalgorithm designed for large-scale decision-making problems. It employs neural network value\nfunctionapproximationsandutilizesdeepreinforcementlearningtechniquesforimprovedstability\nand efficiency. Furthermore, its ability to learn from integer programming-based assignments to\nmanagecomplexcombinatorialchallengesmakesitusefulforlarge-scaleproblems. In what follows, we explain the details of the adaptation of the general NeurADP framework\nto the dynamic AGV task allocation problem, to derive high-quality approximate solutions to our\nproposed MDP model. We start with the building blocks and then provide the overall NeurADP\nalgorithm. GivensystemstateS = (W ,O ),wemainlyfollowthebelowsteps. t t t\n1. Enumerate the set of feasible order batches for workers: Let Γ : W → P2(O ) where P\nt t t\ndenotes the power set and P2(·) = P(P(·)). Given a worker w ∈ W , this function returns\nt\nthe collection of order batches (created from the orders in O ) feasible to be assigned to the\nt\nworker.",
      "size": 992,
      "sentences": 9
    },
    {
      "id": 46,
      "content": "t t\ndenotes the power set and P2(·) = P(P(·)). Given a worker w ∈ W , this function returns\nt\nthe collection of order batches (created from the orders in O ) feasible to be assigned to the\nt\nworker. That is, Γ (w) is a set with each element G ∈ Γ (w) corresponding to a batch of\nt t\norders(i.e.,asubsetofO )suchthattheworkerofattributesw canhandleallofitscurrently\nt\nassignedtaskscombinedwithalltheordersinG inafeasiblemanner. Algorithm 1 defines the enumeration of the matching feasibility set Γ (w). The algorithm\nt\naccepts as input the attribute state of a worker, w, and the set of orders, O . It begins by\nt\ninitializing an empty set for the feasible matchings. Next, provided that the worker has\navailable capacity, the set of potential feasible batchings P(O ) is iterated. If the worker is\nt\nan AGV and there exists an order within potential batching which may only be handled by\nhumans, said batching is ignored.",
      "size": 921,
      "sentences": 8
    },
    {
      "id": 47,
      "content": "the set of potential feasible batchings P(O ) is iterated. If the worker is\nt\nan AGV and there exists an order within potential batching which may only be handled by\nhumans, said batching is ignored. Otherwise, the feasibility of matching potential batching\nG to worker w is derived through Algorithm 2. The algorithm begins by combining the set\nof potential batch orders, G, with the orders already assigned to a worker, w . This re-\nords\n14\n=== 페이지 15 ===\nsults in a new set of assigned orders, w′ . Additionally, w′ is initialized to denote\nords pickups\nthe new remaining set of pick-up locations the worker must visit prior to dropping orders\noff at the drop-off area. The algorithm then proceeds to iterate through all possible permu-\ntations of routes for collecting each order in the set w′ and dropping them off.",
      "size": 820,
      "sentences": 7
    },
    {
      "id": 48,
      "content": "prior to dropping orders\noff at the drop-off area. The algorithm then proceeds to iterate through all possible permu-\ntations of routes for collecting each order in the set w′ and dropping them off. If a\npickups\npath exists where all orders are delivered before their respective deadlines, and the worker\niseitherhumanoranAGVwithadequatebatterylifetocompletetherouteandrechargeaf-\nterwards, then the algorithm confirms the feasibility of the path. Otherwise, it returns false. If Algorithm 2 returns a value of true, then the potential batching G in Algorithm 1 is added\nto the matching feasibility set Γ (w), otherwise, the algorithm iterates to the next potential\nt\nbatching. Algorithm1endsbyreturningthematchingfeasibilitysetΓ (w).",
      "size": 734,
      "sentences": 6
    },
    {
      "id": 49,
      "content": "batching G in Algorithm 1 is added\nto the matching feasibility set Γ (w), otherwise, the algorithm iterates to the next potential\nt\nbatching. Algorithm1endsbyreturningthematchingfeasibilitysetΓ (w). t\nAlgorithm1:Matchingfeasibility\nInput :w,O\nt\nOutput:Setoffeasiblematchings\n1 MatchingFeasibility(w,O t ):\n2 InitializeΓ t (w)asanemptyset;\n3 ifw cap < maxcap w then\n4 forG ∈ P(O t )do\n5 ifw human == falseando human == trueforanyo ∈ G then\n6 continue\n7 ifisFeasible(w,G)== truethen\n8 Γ t (w) ← Γ t (w)∪{G}\n9 returnΓ t (w)\n2. Define decision variables: For worker w ∈ W , in addition to the possible order batch\nt\nassignment, we have possible actions of going to the nearest charging station (for AGVs)\nand taking the null action, i.e., just continue with the previously assigned tasks.",
      "size": 784,
      "sentences": 4
    },
    {
      "id": 50,
      "content": "the possible order batch\nt\nassignment, we have possible actions of going to the nearest charging station (for AGVs)\nand taking the null action, i.e., just continue with the previously assigned tasks. In that\nregard, we define the following binary decision variables: x which takes the value of 1\nw↔G\nif the order batch G is assigned, and 0 otherwise; y which takes the value of 1 if the null\nw\nactionatthecurrentstateisinstructed,and0otherwise;andz whichtakesthevalueof1if\nw\nthechargingactionistaken,and0otherwise. 15\n=== 페이지 16 ===\nAlgorithm2:Pathfeasibility\nInput :w,G\nOutput:Booleanvalueindicatingifthepathisfeasible\n1 isFeasible(w,G):\n2 initializew o ′ rds ← w ords ∪G;\n3 initializew p ′ ickups assetofpick-uplocationsforordersinw o ′ rds needingtobepickedup;\n4 foreachpathinpermutationofw p ′ ickups do\n5 ifpath dropoff-time ≤ o dead forallo ∈ w o ′ rds then\n6 ifw human ==trueorw bat issufficientforbatteryrequiredforactionthen\n7 returntrue\n8 returnfalse\n3.",
      "size": 963,
      "sentences": 3
    },
    {
      "id": 51,
      "content": "4 foreachpathinpermutationofw p ′ ickups do\n5 ifpath dropoff-time ≤ o dead forallo ∈ w o ′ rds then\n6 ifw human ==trueorw bat issufficientforbatteryrequiredforactionthen\n7 returntrue\n8 returnfalse\n3. Create task allocation model: Using the above-defined decision variables, we can obtain a\nbinary programming representation of the feasible set of the Bellman optimality equation,\npreviouslystatedas\nV (S ) = maxR (a )+VPost(SWorker-Post) (3)\nt t t t t t\ns.t.a ∈ A (S ), (4)\nt t t\nwhichyieldsthefollowingtaskallocationmodel:\nmax R (x,y,z)+VPost(W ,x,y,z)\nt t t\n(cid:88)\ns.t.",
      "size": 573,
      "sentences": 2
    },
    {
      "id": 52,
      "content": "tion,\npreviouslystatedas\nV (S ) = maxR (a )+VPost(SWorker-Post) (3)\nt t t t t t\ns.t.a ∈ A (S ), (4)\nt t t\nwhichyieldsthefollowingtaskallocationmodel:\nmax R (x,y,z)+VPost(W ,x,y,z)\nt t t\n(cid:88)\ns.t. x +y = 1 ∀w ∈ W : w = True (5)\nw↔G w t human\nG∈Γt(w)\n(cid:88)\nx +y +z = 1 ∀w ∈ W : w = False (6)\nw↔G w w t human\nG∈Γt(w)\n(cid:88) (cid:88)\nx ≤ 1 ∀o ∈ O (7)\nw↔G t\nw∈WtG∈Γt(w):o∈G\nz = 0 ∀w ∈ W : w = True (8)\nw t human\nx,y,z binary (9)\nThe model assigns one feasible action to each worker (namely order batch, null action, or\n16\n=== 페이지 17 ===\ncharging; the last being eligible only for AGVs), ensuring that each order is assigned to at\nmost one worker. With a slight abuse of notation, we parametrized the immediate and ex-\npectedfuturerewardoftheseactionsbythebinarydecisionvariablesaswellastheworkers’\nstatevectorforthelatter. 4.",
      "size": 829,
      "sentences": 4
    },
    {
      "id": 53,
      "content": "at\nmost one worker. With a slight abuse of notation, we parametrized the immediate and ex-\npectedfuturerewardoftheseactionsbythebinarydecisionvariablesaswellastheworkers’\nstatevectorforthelatter. 4. Approximatetheobjectivefunction: Weusealinearapproximationfortheobjectivefunction\nofthetaskallocationmodel:\n(cid:88) (cid:88) (cid:88)\nmax αx x + (αyy +αzz ) (10)\nw↔G w↔G w w w w\nw∈WtG∈Γt(w) w∈Wt\nwhere the coefficients (αx,αy,αz) are predicted via a neural network (NN). Note that since\nthe charging action is not relevant to human workers, we can ignore those decisions in the\nobjective, i.e., treat αz = 0 as fixed for any human worker index w; just for the ease of\nw\npresentation we use the full coefficient vector. As a result, we solve the approximated task\nallocationmodelgivenby(5)-(10)fordecisionmaking. We note that having this separable objective form, the NN is only providing estimates for\nthe post-decision value function per worker, not for the joint value of all the workers.",
      "size": 989,
      "sentences": 7
    },
    {
      "id": 54,
      "content": "0)fordecisionmaking. We note that having this separable objective form, the NN is only providing estimates for\nthe post-decision value function per worker, not for the joint value of all the workers. More\nspecifically, instead of approximating VPost(SWorker-Post), it helps with the approximation\nt t\noftheform\n(cid:88) (cid:0) (cid:1)\nV≈ {x } ,y ,z ,W . t w↔G G∈Γt(w) w w t\nw∈W\nThe function V≈ basically takes the input of the action selected for a fixed worker w (since\nt\nonly one the corresponding x, ,y, and z variables should be selected in the task allocation\nmodel) along with the current (i.e., pre-decision) state of all the workers. As a result, it\nhas access to the post-decision state of only worker w – that is, SWorker-Post– and uses the\ntw\npre-decision state of the other workers – that is, W from S – as auxiliary information to\nt t\npotentiallyimprovethepredictionforworkerw. 5.",
      "size": 894,
      "sentences": 6
    },
    {
      "id": 55,
      "content": "e of only worker w – that is, SWorker-Post– and uses the\ntw\npre-decision state of the other workers – that is, W from S – as auxiliary information to\nt t\npotentiallyimprovethepredictionforworkerw. 5. Learn objective coefficient prediction: We begin by sampling an experience, containing the\nstate of workers W , the associated feasible action set, and the post-decision state of the\nt\n17\n=== 페이지 18 ===\nworkers from the previous time step SPost. The experience is then evaluated by applying\nt−1\neachfeasibleactiontothestateofworkersandscoringthepost-decisionstatereached. This\nscoring for each post-decision state is carried out using a target neural network. The task\nallocation model is then employed to determine the actions of each worker. Subsequently,\nthepost-decisionstatesoftheworkersSPostfromtheprevioustimestepareupdatedthrough\nt−1\ngradient descent. This update utilizes the supervised target scores obtained from the task\nallocationmodel.",
      "size": 949,
      "sentences": 8
    },
    {
      "id": 56,
      "content": "uently,\nthepost-decisionstatesoftheworkersSPostfromtheprevioustimestepareupdatedthrough\nt−1\ngradient descent. This update utilizes the supervised target scores obtained from the task\nallocationmodel. Algorithm3:NeurADPtrainingforAGVtaskallocation\nInput :Initialstateofthesystem,S ,andNeuralNetwork(NN)\n0\nOutput:UpdatedNNaftersimulation\n1 do\n// Simulate the system for one planning horizon;\n2 Initializeworkers’andorders’states,S 0 ;\n3 fort = 0,...,T do\n4 Sampletheneworders,W t ;\n5 Enumeratethesetoffeasibleorderbatchesforworkers,Γ t (·);storethemasanexperience;\n6 Obtainthedecision-makingmodelobjectivecoefficientsfromthecurrentlytrainedversion\noftheNN,(αx,αy,αz);\n7 Createtheapproximatedtaskallocationmodel(usingthepredictedcoefficients)andobtain\nitsoptimalsolution;\n8 (Optional)SamplefrompreviouslycollectedexperiencesandupdatetheNN;\n9 Updatethesystemstateimplementingtheobtainedtaskallocationsolution,S t+1 ;\n10 whileastoppingcriterionisnotmet;\nAlgorithm 3 defines the NeurADP training algorithm for the AGV task allocation problem.",
      "size": 1036,
      "sentences": 3
    },
    {
      "id": 57,
      "content": "9 Updatethesystemstateimplementingtheobtainedtaskallocationsolution,S t+1 ;\n10 whileastoppingcriterionisnotmet;\nAlgorithm 3 defines the NeurADP training algorithm for the AGV task allocation problem. The algorithm takes as input the initial state of the system S , as well as an initialized neural\n0\nnetwork function. It begins by initializing the states of the workers, as well as the initial set of\nincoming orders, for the initial state S . The algorithm then iterates over each time step of the\n0\nplanninghorizon. EachtimestepinvolvesfirstthesamplingofanewsetofordersW ,followedby\nt\nanenumerationofthefeasibleorderbatchingsforworkers. Thestatespaceinformationandfeasi-\nble actions are stored as experience, and neural network is utilized to obtain the decision-making\n18\n=== 페이지 19 ===\nmodel objective coefficients. The task allocation model is then utilized to obtain the optimal so-\nlution.",
      "size": 896,
      "sentences": 7
    },
    {
      "id": 58,
      "content": "s experience, and neural network is utilized to obtain the decision-making\n18\n=== 페이지 19 ===\nmodel objective coefficients. The task allocation model is then utilized to obtain the optimal so-\nlution. Experiences may then be sampled to update the neural network weights, and the network\nsystem is updated by implementing the task allocation solution. The algorithm commences by\noutputtingtheneuralnetworkwiththeupdatedweightsaftersimulation. 5. ExperimentalSetup\nWeimplementourmethodsusingPython3.6.13andrunthenumericalexperimentsonCom-\npute Canada Cedar servers [7]. The linear programming (LP) models are solved using IBM\nILOG CPLEX Optimization Studio, version 12.10.0. In what follows, we provide a detailed\noverview of the experimental settings, which are important for evaluating the effectiveness of our\nNeurADP policy.",
      "size": 825,
      "sentences": 8
    },
    {
      "id": 59,
      "content": "G CPLEX Optimization Studio, version 12.10.0. In what follows, we provide a detailed\noverview of the experimental settings, which are important for evaluating the effectiveness of our\nNeurADP policy. This includes an in-depth description of the warehouse environment and the\ndatageneration,followedbyanexplanationofthemyopicbenchmarkpoliciesthatareusedinour\ncomparativeanalysis. 5.1. DatasetDescription\nOur dataset is based on a grid-patterned warehouse which features 9 shelve corridors, each\nwith 20 pick-up locations, amounting to a total of 180 pick-up locations. The warehouse layout\nincludes a single drop-off zone located in the bottom-left corner, along with two charging stations\nsituated in the bottom-right and top-left corners. The warehouse workers and AGVs navigate\nthrough aisles spaced between these shelves. In our base-case scenario, the time taken to travel\nfrom one movement node to another, including to and from the charging and drop-off points,\nis uniformly set at 30 seconds.",
      "size": 999,
      "sentences": 8
    },
    {
      "id": 60,
      "content": "d between these shelves. In our base-case scenario, the time taken to travel\nfrom one movement node to another, including to and from the charging and drop-off points,\nis uniformly set at 30 seconds. A visual representation of a representative warehouse layout is\nprovidedinFigure2. We use synthetic order arrival data in our numerical experiments. Specifically, we assume\nthat orders arrive to the system in a stochastic manner, adhering to a left-skewed beta distribution\ncharacterizedbyparametersα = 5andβ = 2. Thisdistribution,illustratingtheaveragequantityof\nordersreceivedateachdecisionepoch,isdepictedinFigure3,accompaniedbyabandrepresenting\na standard deviation of one order. Consequently, during each decision epoch, the mean number of\narrivingordersisutilizedasthecentralvalueforanormaldistributionwithastandarddeviationof\n19\n=== 페이지 20 ===\nFigure2: Arepresentativewarehouselayout. one.",
      "size": 896,
      "sentences": 8
    },
    {
      "id": 61,
      "content": "during each decision epoch, the mean number of\narrivingordersisutilizedasthecentralvalueforanormaldistributionwithastandarddeviationof\n19\n=== 페이지 20 ===\nFigure2: Arepresentativewarehouselayout. one. The resulting value, rounded to the nearest integer, represents the count of orders arriving at\nthatspecifictimestepforagivensimulationiteration. Additionally,thelikelihoodofanorderbeing\nrequestedfromanyofthe180pick-uplocationsataparticulartimeisdeterminedbysamplingfrom\na Poisson distribution with a mean of 1. These probabilities are subsequently normalized to sum\ntoone,transformingthemintoaproportionaldistribution. Thisnormalizeddistributioneffectively\nmirrorsthecomparativelikelihoodoforderarrivalsateachlocationforeverytimeslot,ensuringa\nbalancedandrealisticrepresentationoforderfrequenciesacrossthenetwork. 5.2. BenchmarkPolicies\nMyopicstrategiestypicallyprioritizeimmediateoutcomes,neglectingthepotentialfutureim-\nplicationsofchoices.",
      "size": 942,
      "sentences": 8
    },
    {
      "id": 62,
      "content": "balancedandrealisticrepresentationoforderfrequenciesacrossthenetwork. 5.2. BenchmarkPolicies\nMyopicstrategiestypicallyprioritizeimmediateoutcomes,neglectingthepotentialfutureim-\nplicationsofchoices. Suchmethodsareadvantageousincomplex,rapidlychangingenvironments\nwheredevelopingacomprehensive,optimalstrategyisnotpractical. Whilemyopicpoliciescanbe\nuseful for quick decision-making, they might not be ideal for achieving the best long-term results. As a result, they are frequently employed as basic reference points or benchmarks in most cases. Previousstudieshavepredominantlyemployedsimplisticrule-basedmethodologiesforallocating\nincoming orders among different types of workers. This often involves categorizing orders and\nthendesignatingthesecategoriestospecificworkertypes[43,46,47]. 20\n=== 페이지 21 ===\n20.0\n17.5\n15.0\n12.5\n10.0\n7.5\n5.0\n2.5\n0.0\n0 200 400 600 800 1000 1200 1400\nTime of Day (in Minutes)\nsredrO\ngnimocnI\nfo\nrebmuN\n.gvA\nFigure3: Orderdistributionwith1-orderstandarddeviationband.",
      "size": 997,
      "sentences": 9
    },
    {
      "id": 63,
      "content": "이지 21 ===\n20.0\n17.5\n15.0\n12.5\n10.0\n7.5\n5.0\n2.5\n0.0\n0 200 400 600 800 1000 1200 1400\nTime of Day (in Minutes)\nsredrO\ngnimocnI\nfo\nrebmuN\n.gvA\nFigure3: Orderdistributionwith1-orderstandarddeviationband. We consider two distinct sets of myopic policies in our experimental study:\nMyopic-ILP and Myopic-Heuristic. Each policy is designed with the primary goal of\nmaximizing the number of orders served in the immediate time step. The Myopic-ILP pol-\nicy employs a linear programming approach which adheres to constraints (5)-(9), ignor-\ning the expected future rewards and only maximizing immediate rewards. Conversely, the\nMyopic-Heuristic approach involves a two-step decision-making process. The first step\ndetermines whether orders should be first allocated to human workers or AGVs. The second step\ninvolves deciding the optimal time for AGVs to recharge their batteries.",
      "size": 871,
      "sentences": 7
    },
    {
      "id": 64,
      "content": "n-making process. The first step\ndetermines whether orders should be first allocated to human workers or AGVs. The second step\ninvolves deciding the optimal time for AGVs to recharge their batteries. Within this framework,\nMyopic-Heuristic policies are further extended: Myopic-HF, which prioritizes assigning\norders to humans before AGVs, and Myopic-RF, which does the opposite, giving preference to\nAGVsfororderfulfillment. Additionally,thesepoliciesincludeabatterymanagementcomponent,\nexemplified by a policy like Myopic-HF-20, which dictates that AGVs not currently assigned to\norders should proceed to recharge if their battery levels fall below 20%. By incorporating both\nMyopic-ILP and Myopic-Heuristic approaches in task allocation, we establish a compre-\nhensivebaselineinourcomparativeanalysiswithourNeurADPpolicy,whichallowsustoprovide\nanin-depthanalysisoftheperformanceofbothmethods.",
      "size": 895,
      "sentences": 6
    },
    {
      "id": 65,
      "content": "pic-Heuristic approaches in task allocation, we establish a compre-\nhensivebaselineinourcomparativeanalysiswithourNeurADPpolicy,whichallowsustoprovide\nanin-depthanalysisoftheperformanceofbothmethods. Italsoaidsinunderstandinghowdiffer-\nent strategies for order/task allocation can impact the overall performance of a hybrid workforce\ninwarehouseoperations. 21\n[표 데이터 감지됨]\n\n=== 페이지 22 ===\nWe note that the recharging strategies adopted in the two sets of myopic policies are in-\nspired by the charging schemes outlined in existing literature (e.g., see [29]). Specifically, the\nMyopic-ILP policies employ an “opportunity” charging approach, allowing AGVs to charge\nduringperiodsofinactivity. Incontrast,theMyopic-Heuristicpoliciesadoptan“automatic”\ncharging strategy, where AGVs are directed to charge only when their battery levels drop below\na predefined threshold.",
      "size": 866,
      "sentences": 5
    },
    {
      "id": 66,
      "content": "ingperiodsofinactivity. Incontrast,theMyopic-Heuristicpoliciesadoptan“automatic”\ncharging strategy, where AGVs are directed to charge only when their battery levels drop below\na predefined threshold. Although AGVs in industrial settings typically operate under the latter\nscheme[10],ourexplorationofbothstrategiesaimstoestablishathoroughbaselineagainstwhich\nthe efficacy of our NeurADP policies can be assessed. Hence, this approach allows for a more\ncomprehensive understanding of how different charging strategies impact AGV performance in a\nwarehouseenvironment. 6. Results\nWe evaluate the results from our numerical experiments with respect to five primary inputs:\nthe number of workers, the allowed delay time, the worker capacity, the speed at which each type\nof worker performs their tasks, and the availability of orders to both human and AGV workers.",
      "size": 859,
      "sentences": 6
    },
    {
      "id": 67,
      "content": "inputs:\nthe number of workers, the allowed delay time, the worker capacity, the speed at which each type\nof worker performs their tasks, and the availability of orders to both human and AGV workers. The number of workers is obtained by accounting for all the workers operating within a 24-hour\nperiod,whilethedelaytimerepresentsthemaximumdurationoftimeaworkerhasfromanorder’s\nentry into the system to their drop-off at the drop-off area. This duration is used to determine the\norder deadline. The worker capacity specifies the maximum number of orders a worker can carry\nsimultaneously, while the speed of workers represents the speed at which they are able to perform\ntheirtasks. Finally,theavailabilityofordersspecifiesthepercentageofincomingorderswhichare\nabletobehandledbybothhumansandrobots.",
      "size": 796,
      "sentences": 5
    },
    {
      "id": 68,
      "content": "speed of workers represents the speed at which they are able to perform\ntheirtasks. Finally,theavailabilityofordersspecifiesthepercentageofincomingorderswhichare\nabletobehandledbybothhumansandrobots. DuetothelimitationsofAGVsbeingabletohandle\nitemsofcertainshapesandsizes,wefinditimportanttoconsiderscenarioswhereonlyhumansare\nable to handle certain orders, adding complexity to the batching and matching of orders together\nand to workers. In our baseline configuration, we include 5 human workers and 5 AGV workers,\nset a maximum allowable delay time of 15 minutes, and a maximum worker capacity of 2 orders\nforbothhumansandAGVs. Furthermore,wesetthetraveltimeofallworkersbetweenedgestobe\n30secondsandconsiderallorderstobehandleablebybothtypesofworkers. Finally,weconsider\nabatterydeteriorationrateof0.5%perminuteforAGVs,aswellasachargingreplenishmentrate\n22\n=== 페이지 23 ===\nof 5% per minute.",
      "size": 892,
      "sentences": 6
    },
    {
      "id": 69,
      "content": "econdsandconsiderallorderstobehandleablebybothtypesofworkers. Finally,weconsider\nabatterydeteriorationrateof0.5%perminuteforAGVs,aswellasachargingreplenishmentrate\n22\n=== 페이지 23 ===\nof 5% per minute. We begin by examining the baseline configuration to identify the most suitable\nbenchmarkpoliciesfromtheMyopic-ILPandMyopic-Heuristicpolicyclasses,whichare\nlater used in the comparative analysis with the NeurADP policy. We then provide the numerical\nresultsforalternativeconfigurations. 6.1. BaselineConfiguration\nOur primary benchmark policies exhibit several variations in the matching process between\nordersandworkers. IntheMyopic-ILPpolicy,weutilizeanILPtomakedecisionsonassigning\nbatches of incoming orders with workers, as well as making charging decisions for AGVs. How-\never,intheMyopic-Heuristicpolicy,weutilizeaheuristic-basedmechanismfordecidingon\nwhich worker to assign orders to first, and then deciding on when to assign unassigned AGVs to\nrecharge their batteries.",
      "size": 978,
      "sentences": 8
    },
    {
      "id": 70,
      "content": "er,intheMyopic-Heuristicpolicy,weutilizeaheuristic-basedmechanismfordecidingon\nwhich worker to assign orders to first, and then deciding on when to assign unassigned AGVs to\nrecharge their batteries. We consider six variations of the Myopic-Heuristic policies. Once\nagain,“HF”representsthematchingoforderswithhumansfirst,while“RF”representsthematch-\ning of orders with AGVs first. Additionally, we consider the battery threshold at which AGVs,\nwhich are not currently assigned to orders, are directed to the charging areas to recharge their bat-\nteries. We consider the cases where humans are assigned to the orders first, and where robots are\nassigned to recharge their batteries at thresholds of 20%, 40%, and 60%, as well as the scenarios\nwhererobotsarefirstassignedorders,andagainwherethethresholdsare20%,40%,and60%.",
      "size": 820,
      "sentences": 5
    },
    {
      "id": 71,
      "content": ", and where robots are\nassigned to recharge their batteries at thresholds of 20%, 40%, and 60%, as well as the scenarios\nwhererobotsarefirstassignedorders,andagainwherethethresholdsare20%,40%,and60%. Table 3 provides the outcomes for the considered policy variants for the baseline config-\nuration, which are obtained as the average statistics when the policies are evaluated on 50 test\ndays. The table includes the “Orders Seen” value, which indicates the average number of daily\norders seen, as well as the number of orders fulfilled by each policy, denoted as “Orders Filled”,\nwith a standard deviation provided for each policy. Furthermore, the percentage increase of the\nNeurADP policy compared to the other benchmark policies is included in the right-most col-\numn, labeled “% Incr. NeurADP”.",
      "size": 798,
      "sentences": 5
    },
    {
      "id": 72,
      "content": "iation provided for each policy. Furthermore, the percentage increase of the\nNeurADP policy compared to the other benchmark policies is included in the right-most col-\numn, labeled “% Incr. NeurADP”. This metric is calculated by subtracting the average number\nof orders fulfilled by the benchmark policies from the average number of orders fulfilled by the\nNeurADPpolicy,thendividingtheoutcomebythe“OrdersSeen”value,multipliedby100. We observe that the NeurADP policy noticeably outperforms all benchmark policy variants\nin both the Myopic-ILP and Myopic-Heuristic scenarios. This superior performance is\n23\n=== 페이지 24 ===\nTable3: Performanceofdifferentpoliciesforthebaselineconfiguration(avg. numberofordersfulfilledover50-day\ntestwindowisprovidedasmean±stdev).",
      "size": 762,
      "sentences": 7
    },
    {
      "id": 73,
      "content": "c scenarios. This superior performance is\n23\n=== 페이지 24 ===\nTable3: Performanceofdifferentpoliciesforthebaselineconfiguration(avg. numberofordersfulfilledover50-day\ntestwindowisprovidedasmean±stdev). Policy OrdersSeen OrdersFilled %Incr.NeurADP\nNeurADP 2,618.25 2,051.46±15.16 -\nMyopic-ILP - 1,966.66±14.82 +3.24\nMyopic-HF-20 - 1,946.02±15.73 +4.03\nMyopic-HF-40 - 1,944.92±16.06 +4.07\nMyopic-HF-60 - 1,942.28±15.16 +4.17\nMyopic-RF-20 - 1,918.80±13.42 +5.07\nMyopic-RF-40 - 1,919.08±13.77 +5.05\nMyopic-RF-60 - 1,918.06±15.72 +5.09\nlargely due to its more nuanced approach in effectively pairing order batches with workers and\nstrategically deciding when to assign AGVs for battery recharging, taking into account the down-\nstreameffectsofitsactions. Additionally,theMyopic-ILPpolicydemonstratesnotablesuperior-\nity over Myopic-Heuristic-based policies.",
      "size": 850,
      "sentences": 5
    },
    {
      "id": 74,
      "content": "to assign AGVs for battery recharging, taking into account the down-\nstreameffectsofitsactions. Additionally,theMyopic-ILPpolicydemonstratesnotablesuperior-\nity over Myopic-Heuristic-based policies. Its use of ILP for simultaneous decision-making\nin order matching and charging seems more adept for intricate strategies compared to the sim-\nplistic assumptions underlying heuristic-based myopic strategies, which do not vary according to\nscenarios in order matching and charging decisions. Moreover, we find that strategies that give\nprecedencetohumansoverAGVsfororderassignmentsleadtomorefavorableresults. Thiseffec-\ntiveness primarily stems from the reduced frequency of task assignments to AGVs in human-first\npolicies. In scenarios where orders are assigned to the AGVs first, they tend to engage more of-\nten in delivery tasks, leading to shorter and less effective charging periods.",
      "size": 888,
      "sentences": 6
    },
    {
      "id": 75,
      "content": "to AGVs in human-first\npolicies. In scenarios where orders are assigned to the AGVs first, they tend to engage more of-\nten in delivery tasks, leading to shorter and less effective charging periods. This is evidenced by\nthe comparison in average AGV battery life: 37.97% in the Human-First (HF-20) scenario versus\n30.83%intheRobot-First(RF-20)scenario. Moreover,theaveragecountofAGVschargingatany\npointisnotablylowerintheHFscenario(1.76)comparedtotheRFscenario(1.96). Thissuggests\nthat AGVs in the latter scenario undergo more frequent charging cycles, which are truncated due\nto commitments to incoming order delivery tasks. Furthermore, we note that among the various\nbenchmarkpolicyvariations,Myopic-ILPandMyopic-HF-20consistentlyyieldthebestperfor-\nmance. As a result, we utilize Myopic-ILP and Myopic-HF-20 as our benchmark policies for\ntheremainderofourexperiments. 24\n=== 페이지 25 ===\n6.2.",
      "size": 894,
      "sentences": 8
    },
    {
      "id": 76,
      "content": ",Myopic-ILPandMyopic-HF-20consistentlyyieldthebestperfor-\nmance. As a result, we utilize Myopic-ILP and Myopic-HF-20 as our benchmark policies for\ntheremainderofourexperiments. 24\n=== 페이지 25 ===\n6.2. ImpactofNumberofWorkers\nWe examine the impact of varying the composition of human and AGV workers on the order\npicking process to better assess the operational effectiveness of our proposed approach. Specif-\nically, we explore three scenarios: all ten workers being humans, a split of five humans and five\nAGVs, and all ten workers being AGVs. The results, detailed in Table 4, demonstrate that the\nNeurADP policy consistently outperforms all baseline policies across different worker configura-\ntions. Table4: Impactofnumberofworkersonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev).",
      "size": 826,
      "sentences": 8
    },
    {
      "id": 77,
      "content": "outperforms all baseline policies across different worker configura-\ntions. Table4: Impactofnumberofworkersonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev). Numberof Orders NeurADPFilled Myopic-ILP Myopic-HF-20 %Incr.Over %Incr.Over\nWorkers Seen Filled Filled Myopic-ILP Myopic-HF-20\n10Humans, 2,618.88 2,066.24±16.38 2,019.24±15.25 2,027.26±14.42 +1.79 +1.49\n0AGVs\n5Humans, - 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\n5AGVs\n0Humans, - 2,007.36±15.02 1,880.76±16.40 1,826.42±15.44 +4.83 +6.91\n10AGVs\nFigure 4 presents the number of orders fulfilled in the scenario with an equal split of human\nand AGV workers. We observe that NeurADP maintains superiority over the benchmark policies\nirrespective of the worker type mix. Notably, there is a trend of decreasing order fulfillment effi-\nciencyastheproportionofhumanworkersdiminishes.",
      "size": 890,
      "sentences": 6
    },
    {
      "id": 78,
      "content": "P maintains superiority over the benchmark policies\nirrespective of the worker type mix. Notably, there is a trend of decreasing order fulfillment effi-\nciencyastheproportionofhumanworkersdiminishes. Thisdeclinecanbeattributedtotheinher-\nentlimitationsofAGVs,suchastheneedforbatterycharging,whichisnotaconstraintforhuman\nworkers. Consequently, humans are generally more efficient in handling orders under the given\nsettings. Moreover,thereisanoticeablereductionintheperformancegapbetweenNeurADPand\nbaseline policies as the number of human workers increases. This narrowing of the gap could be\nlinked to the simplification of decision-making processes when AGVs are less involved. In en-\nvironments dominated by human workers, decision-making becomes less complex, reducing the\ndisparity with simpler myopic policies that may not consider long-term consequences or rely on\nbasic heuristics.",
      "size": 889,
      "sentences": 7
    },
    {
      "id": 79,
      "content": "onments dominated by human workers, decision-making becomes less complex, reducing the\ndisparity with simpler myopic policies that may not consider long-term consequences or rely on\nbasic heuristics. In contrast, scenarios including AGVs demand more nuanced decision-making,\nespeciallyregardingchargingstrategies,therebyhighlightingtheadvanceddecision-makingcapa-\nbilitiesofNeurADPmoreprominently. 25\n=== 페이지 26 ===\n17.5\n15.0\n12.5\n10.0\n7.5\n5.0\n2.5\n0.0\n0 200 400 600 800 1000 1200 1400\nTime of Day (in Minutes)\ndevreS\nsredrO\nfo\nrebmuN\n.gvA\nOrders Seen\nNeurADP\nILP Myopic\nMyopic-HF-20\nFigure4: Ordersfulfilledbyeachpolicyinthebaselinescenario. 6.3. ImpactofWorkerSpeed\nWe next assess the impact of worker speed on order fulfillment and charging efficiency. Rec-\nognizing that AGVs operate at different speeds in various environments, we investigate how these\nvariations in worker efficiency influence the performance of different policies.",
      "size": 937,
      "sentences": 6
    },
    {
      "id": 80,
      "content": "ging efficiency. Rec-\nognizing that AGVs operate at different speeds in various environments, we investigate how these\nvariations in worker efficiency influence the performance of different policies. Specifically, we\nexploretheeffectsofdifferingspeedsfortraversingthewarehouse,includingscenarioswherehu-\nmans complete an edge in 30 seconds and AGVs in one minute (humans faster than AGVs), both\nhumans and AGVs taking 30 seconds (equal speed), and humans taking one minute while AGVs\ntake 30 seconds (AGVs faster than humans). The results from this experiment are summarized in\nTable5. Table5: Impactofworkertraveltimeonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev).",
      "size": 710,
      "sentences": 6
    },
    {
      "id": 81,
      "content": "r than humans). The results from this experiment are summarized in\nTable5. Table5: Impactofworkertraveltimeonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev). WorkerSpeed Orders NeurADPFilled Myopic-ILP Myopic-HF-20 %Incr.Over %Incr.Over\nSeen Filled Filled Myopic-ILP Myopic-HF-20\n30Sec.Human, 2,618.88 1,711.06±19.02 1,651.3±14.34 1,510.86±16.38 +2.28 +7.64\n1Min.AGV\n30Sec.Human, - 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\n30Sec.AGV\n1Min.Human, - 1,617.18±25.15 1,552.20±32.49 1,566.28±35.11 +2.48 +1.94\n30Sec.AGV\nAcrossthesescenarios,NeurADPconsistentlyoutperformsbothMyopic-ILPandMyopic-\n26\n[표 데이터 감지됨]\n\n=== 페이지 27 ===\nHF-20 policies. This indicates that its neural network-based decision-making adeptly handles the\ncomplexdynamicsofthewarehouse,encompassingvariationsinworkerspeed,orderbatching,and\ncharging schedules. Moreover, NeurADP not only serves more orders but also achieves quicker\ndeliveries.",
      "size": 963,
      "sentences": 7
    },
    {
      "id": 82,
      "content": "handles the\ncomplexdynamicsofthewarehouse,encompassingvariationsinworkerspeed,orderbatching,and\ncharging schedules. Moreover, NeurADP not only serves more orders but also achieves quicker\ndeliveries. Specifically, as depicted in Figure 5, in the three scenarios, NeurADP delivers orders\nin an average of 9.19, 8.43, and 9.31 minutes, compared to Myopic-ILP at 10.84, 9.51, and\n10.48 minutes, and Myopic-HF-20 at 9.36, 9.57, and 10.66 minutes, respectively. We also ob-\nserve that the policies generally perform better when humans are more efficient than AGVs. This\nmay be attributed to the fact that slower AGVs take longer to reach charging stations, reducing\ntheir availability for order assignments. In contrast, slower humans do not encounter this spe-\ncific issue, leading to a lesser impact on order service rates.",
      "size": 820,
      "sentences": 6
    },
    {
      "id": 83,
      "content": "er to reach charging stations, reducing\ntheir availability for order assignments. In contrast, slower humans do not encounter this spe-\ncific issue, leading to a lesser impact on order service rates. Particularly notable is the marked\ndecrease in performance of the Myopic-HF-20 policy when AGVs are slower, possibly due to\nits threshold-based battery management leading to frequent and inefficient charging trips. Con-\nversely, NeurADP seems adept at managing the increased complexity and diversity in worker\nspeeds,therebymakingbetterdecisions. 10\n8\n6\n4\n2\n0\n1H,0.5R 0.5H,0.5R 0.5H,1R\nyrevileD\nlitnU\nsetuniM\n.gvA\nNeurADP\nMyopic-ILP\nMyopic-HF-20\nFigure 5: Average delivery times of orders for each policy. (“0.5H,1R” refers 30 second travel time for humans, 1\nminuteAGVS,“0.5H,0.5R”30secondsforeach,and“1H,0.5R”as1minutetraveltimeforhumans,30secondsfor\nAGVs). 27\n[표 데이터 감지됨]\n\n=== 페이지 28 ===\n6.4.",
      "size": 895,
      "sentences": 7
    },
    {
      "id": 84,
      "content": "h policy. (“0.5H,1R” refers 30 second travel time for humans, 1\nminuteAGVS,“0.5H,0.5R”30secondsforeach,and“1H,0.5R”as1minutetraveltimeforhumans,30secondsfor\nAGVs). 27\n[표 데이터 감지됨]\n\n=== 페이지 28 ===\n6.4. ImpactofDelayTime\nWealsoexplorehowvaryingtheacceptabledelaytimefororderdeliveryaffectsthethrough-\nput of orders served. For this purpose, we analyze three scenarios: a 10-minute deadline for order\ndrop-off post-entry into the system, an extended deadline of 15 minutes, and a further extension\nto 20 minutes. We present the results for these experiments in Table 6. In all these scenarios,\nNeurADP consistently outperforms the benchmark policies regarding allowed delay time. A sig-\nnificant increase in the number of orders served is observed when the delay time is extended from\n10 to 15 minutes. This suggests that the initial 10-minute window was overly restrictive, prevent-\ning the effective batching and assignment of orders to workers due to time constraints.",
      "size": 967,
      "sentences": 9
    },
    {
      "id": 85,
      "content": "xtended from\n10 to 15 minutes. This suggests that the initial 10-minute window was overly restrictive, prevent-\ning the effective batching and assignment of orders to workers due to time constraints. However,\nextending the deadline further from 15 to 20 minutes does not yield any notable improvements\nin order throughput for any of the policies. This plateau in performance improvement may be\nattributed to other limiting factors on workers, such as capacity constraints, which imply that the\nadditional delay allowance does not translate into the capability to handle more orders or to fulfill\nordersthatwerepreviouslyunmanageable. Table6:Impactofdelaytimeonorderfulfillment(avg.numberofordersfulfilledover50-daytestwindowisprovided\nasmean±stdev).",
      "size": 749,
      "sentences": 5
    },
    {
      "id": 86,
      "content": "apability to handle more orders or to fulfill\nordersthatwerepreviouslyunmanageable. Table6:Impactofdelaytimeonorderfulfillment(avg.numberofordersfulfilledover50-daytestwindowisprovided\nasmean±stdev). DelayTime Orders NeurADPFilled Myopic-ILP Myopic-HF-20 %Incr.Over %Incr.Over\nSeen Filled Filled Myopic-ILP Myopic-HF-20\n10Minutes 2,618.88 1,846.62±21.60 1,722.38±26.23 1,695.52±22.20 +4.74 +5.77\n15Minutes - 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\n20Minutes - 2,053.70±14.17 1,935.16±16.15 1,934.34±15.58 +4.53 +4.56\n6.5. ImpactofWorkerCapacity\nThecarryingcapacityoftheworkersduringpickupscanalsohaveasignificantimpactonthe\neffectiveness of the task allocation policies. In this experiment, we adjust the capacities of human\nand AGV workers in the following configurations: AGVs with a capacity of 2, humans with a ca-\npacityof3,bothAGVsandhumanswithacapacityof2,andfinallyAGVswithacapacityof3and\nhumans with 2. The results from this experiment are summarized in Table 7.",
      "size": 988,
      "sentences": 6
    },
    {
      "id": 87,
      "content": ": AGVs with a capacity of 2, humans with a ca-\npacityof3,bothAGVsandhumanswithacapacityof2,andfinallyAGVswithacapacityof3and\nhumans with 2. The results from this experiment are summarized in Table 7. Initially, we observe\nthat the NeurADP policy surpasses benchmark policies across all capacity variations. Further,\nincreasing the carrying capacity of either AGVs or humans boosts the number of orders fulfilled\n28\n=== 페이지 29 ===\nbyallpolicies,indicatingthatcurrentorderservicingisconstrainedbythecarryingcapacityofthe\nworkers. Moreover, increasing the capacity of human workers appears to be more advantageous\nfororderservicingthandoingthesameforAGVs. ThisdiscrepancyarisesbecauseAGVsarelim-\nitedbytheneedtoperiodicallyrechargetheirbatteries,whichcanrestricttheirabilitytoefficiently\nutilize additional capacity. Notably,theNeurADPpolicy showsa morepronounced improvement\nwhenworkercapacitiesareincreased. Thisimprovementcanbeattributedtothepolicy’senhanced\nability to make more strategic decisions.",
      "size": 1000,
      "sentences": 8
    },
    {
      "id": 88,
      "content": "al capacity. Notably,theNeurADPpolicy showsa morepronounced improvement\nwhenworkercapacitiesareincreased. Thisimprovementcanbeattributedtothepolicy’senhanced\nability to make more strategic decisions. With fewer constraints on matching order batches with\nworkers,NeurADPhasgreaterflexibilitytooptimizedecisions,whereas,inscenarioswithstricter\ncapacitylimitations,thescopeforsignificantdecision-makingimprovementsismorelimited. Table7: Impactofworkercapacityonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev). Worker Orders NeurADPFilled Myopic-ILP Myopic-HF-20 %Incr.Over %Incr.Over\nCapacity Seen Filled Filled Myopic-ILP Myopic-HF-20\nAGV:2, 2,618.88 2,284.18±14.10 2,140.88±14.58 2,125.1±15.13 +5.47 +6.07\nHuman:3\nAGV:2, - 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\nHuman:2\nAGV:3, - 2,262.90±12.90 2,115.02±15.74 2,121.9±13.71 +5.65 +5.38\nHuman:2\n6.6.",
      "size": 906,
      "sentences": 7
    },
    {
      "id": 89,
      "content": ",140.88±14.58 2,125.1±15.13 +5.47 +6.07\nHuman:3\nAGV:2, - 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\nHuman:2\nAGV:3, - 2,262.90±12.90 2,115.02±15.74 2,121.9±13.71 +5.65 +5.38\nHuman:2\n6.6. ImpactofOrderAvailability\nLastly,weexaminehowtheavailabilityofordersfordifferentworkertypesaffectstheirabil-\nity to fulfill orders. Considering the limited capacity of certain AGVs to handle specific items\nor orders, we evaluate scenarios where AGVs can only manage a certain percentage of incoming\norders. Specifically, we assess cases where 0%, 20%, and 40% of orders can exclusively be han-\ndled by humans, with results detailed in Table 8. This limitation challenges AGVs in processing\norder batches, as they can only be assigned orders within their handling capacity. Consequently,\nwe observe a decrease in the number of orders served across all policies as the proportion of\nhuman-exclusive orders increases.",
      "size": 914,
      "sentences": 6
    },
    {
      "id": 90,
      "content": "n only be assigned orders within their handling capacity. Consequently,\nwe observe a decrease in the number of orders served across all policies as the proportion of\nhuman-exclusive orders increases. However, the NeurADP policy, thanks to its more complex\ndecision-making capabilities, consistently outperforms the baseline policies, especially in opti-\nmally utilizing AGVs under these constraints. This is particularly evident in the 40% scenario,\n29\n=== 페이지 30 ===\nwhere the humans operating under the NeurADP policy serve a comparable number of orders to\nthoseinbenchmarkpolicies,buttheAGVsintheNeurADPsystemmanageasignificantlyhigher\nnumber of orders. This leads to an overall better performance relative to the benchmark policies. For instance, in the NeurADP policy under the 40% scenario, AGVs serve an average of 866.98\norders, markedly more than the 798.3 and 624.94 orders served under the Myopic-ILP and\nMyopic-HF-20 policies, respectively.",
      "size": 952,
      "sentences": 6
    },
    {
      "id": 91,
      "content": "the NeurADP policy under the 40% scenario, AGVs serve an average of 866.98\norders, markedly more than the 798.3 and 624.94 orders served under the Myopic-ILP and\nMyopic-HF-20 policies, respectively. This demonstrates NeurADP’s proficiency in leveraging\nAGVseffectively,evenwhenfacedwithorderavailabilityrestrictions. Table8: Impactoforderavailabilityonorderfulfillment(avg. numberofordersfulfilledover50-daytestwindowis\nprovidedasmean±stdev). Order Orders NeurADPFilled Myopic-ILP Myopic-HF-20 %Incr.Over %Incr.Over\nAvailability Seen Filled Filled Myopic-ILP Myopic-HF-20\n0% 2,618.88 2,051.46±15.16 1,966.66±14.82 1,946.02±15.73 +3.24 +4.03\n20% - 2,038.86±15.39 1,960.06±15.84 1,899.70±14.85 +3.01 +5.31\n40% - 2,019.36±14.05 1,899.98±17.41 1,872.00±14.34 +4.56 +5.63\n7. Conclusion\nIn this study, we investigate the AGV integration within picker-to-parts warehouse systems,\nand we model a dynamic warehouse environment where human workers and AGVs work in tan-\ndem.",
      "size": 964,
      "sentences": 6
    },
    {
      "id": 92,
      "content": "3\n7. Conclusion\nIn this study, we investigate the AGV integration within picker-to-parts warehouse systems,\nand we model a dynamic warehouse environment where human workers and AGVs work in tan-\ndem. For theconsidered problemsetting, we develop aNeurADP-based solutionapproach, which\nenables non-myopic decision-making in order allocation and battery management for AGVs. The\ndetailed numerical study underscores the NeurADP approach’s efficacy, yielding a significant im-\nprovement over traditional myopic and heuristic-based methods. Specifically, the NeurADP poli-\ncies exhibit superior performance in fulfilling a higher number of orders and enhancing the ef-\nficiency of executing order picking tasks, which is particularly evident under varying problem\nparameters such as worker speed, delay time, and order availability.",
      "size": 827,
      "sentences": 5
    },
    {
      "id": 93,
      "content": "ber of orders and enhancing the ef-\nficiency of executing order picking tasks, which is particularly evident under varying problem\nparameters such as worker speed, delay time, and order availability. Furthermore, our analysis\nprovides valuable managerial insights into operating a hybrid warehouse and the importance of\nintelligentdecision-makinginamixedworkforceenvironment. There exist several study limitations that can be remedied in future research. First, our ex-\nperiments are conducted with a synthetic dataset that is generated based on real-life warehouse\nconfigurations and order arrival patterns. However, extending our numerical study to alternative\n30\n=== 페이지 31 ===\nwarehouse configurations and order arrival patterns can help further validate our proposed meth-\nods. Moreover, the complexity of human and AGV interaction is modeled under simplifying as-\nsumptions that may not capture the full range of behaviors in a real-world setting.",
      "size": 953,
      "sentences": 6
    },
    {
      "id": 94,
      "content": "date our proposed meth-\nods. Moreover, the complexity of human and AGV interaction is modeled under simplifying as-\nsumptions that may not capture the full range of behaviors in a real-world setting. Exploring the\npsychologicalandbehavioralaspectsofhuman-AGVinteractionmayprovidedeeperinsightsinto\noptimizing the collaborative workspace for both efficiency and worker satisfaction. In terms of\nmodelingandmethodologicalextensions,thelearningcapacityoftheNeurADPcanbepotentially\nenhanced for the AGV task allocation problem by considering more complex NN designs and\notheralgorithmicenhancementssuchasextendingindividualworker-basedvaluefunctionapprox-\nimation to the worker sets. Another valuable future research direction in this regard is to extend\nour proposed approach to solve the integrated AGV management problem that also involves lo-\ncalization, motion planning and path planning steps.",
      "size": 895,
      "sentences": 5
    },
    {
      "id": 95,
      "content": "future research direction in this regard is to extend\nour proposed approach to solve the integrated AGV management problem that also involves lo-\ncalization, motion planning and path planning steps. Ultimately, as the landscape of warehouse\nautomation continues to evolve, the pursuit of innovative solutions such as NeurADP will remain\npivotalindrivingtheindustryforward. Disclosurestatement\nNopotentialconflictofinterestwasreportedbytheauthors. References\n[1] AGV Network, 2023. More than 100 Automated Guided Vehicle Manufacturers. https:\n//tinyurl.com/bdh5zrnd. [2] Atay, N., Bayazit, B., 2006. Mixed-integer linear programming solution to multi-robot task\nallocationproblem. [3] Azadeh, K., Roy, D., De Koster, M., 2020. Dynamic human-robot collaborative picking\nstrategies. AvailableatSSRN3585396. [4] Beasley,K.,2023. Warehouseautomationandemployeeretention: Friendsorfoes? https:\n//tinyurl.com/bddjaubx. [5] Benevides, C., 2020.",
      "size": 936,
      "sentences": 15
    },
    {
      "id": 96,
      "content": "an-robot collaborative picking\nstrategies. AvailableatSSRN3585396. [4] Beasley,K.,2023. Warehouseautomationandemployeeretention: Friendsorfoes? https:\n//tinyurl.com/bddjaubx. [5] Benevides, C., 2020. Advantages & disadvantages of automated guided vehicles (AGVs)\nhttps://tinyurl.com/dbdbcp6c. [6] Coltin,B.,Veloso,M.,2010. Mobilerobottaskallocationinhybridwirelesssensornetworks,\nin: 2010 IEEE/RSJ International Conference on Intelligent Robots and Systems, IEEE. pp. 2932–2937. 31\n=== 페이지 32 ===\n[7] ComputeCanada,2023. ComputeCanada. https://www.computecanada.ca/. [8] De Koster, R., Le-Duc, T., Roodbergen, K.J., 2007. Design and control of warehouse order\npicking: Aliteraturereview. Europeanjournalofoperationalresearch182,481–501. [9] De Ryck, M., Versteyhe, M., Debrouwere, F., 2020a. Automated guided vehicle systems,\nstate-of-the-art control algorithms and techniques. Journal of Manufacturing Systems 54,\n152–173. [10] De Ryck, M., Versteyhe, M., Shariatmadar, K., 2020b.",
      "size": 981,
      "sentences": 21
    },
    {
      "id": 97,
      "content": "., 2020a. Automated guided vehicle systems,\nstate-of-the-art control algorithms and techniques. Journal of Manufacturing Systems 54,\n152–173. [10] De Ryck, M., Versteyhe, M., Shariatmadar, K., 2020b. Resource management in decentral-\nized industrial automated guided vehicle systems. Journal of Manufacturing Systems 54,\n204–214. [11] Dematic, . Automated guided vehicles - AGV systems. https://tinyurl.com/\n225ck9ue. [12] Elias, H., 2020. Why AGV robots are taking over our warehouse floors https://\ntinyurl.com/4z42v8rt. [13] Giordani,S.,Lujak,M.,Martinelli,F.,2010. Adistributedalgorithmforthemulti-robottask\nallocationproblem,in: TrendsinAppliedIntelligentSystems: 23rdInternationalConference\non Industrial Engineering and Other Applications of Applied Intelligent Systems, IEA/AIE\n2010,Cordoba,Spain,June1-4,2010,Proceedings,PartI23,Springer.pp.721–730. [14] Group, M.H.I., 2023. Managing today’s ‘just in case’ supply chain with automated guided\nvehicleshttps://tinyurl.com/ms8rak8t.",
      "size": 989,
      "sentences": 15
    },
    {
      "id": 98,
      "content": ",Cordoba,Spain,June1-4,2010,Proceedings,PartI23,Springer.pp.721–730. [14] Group, M.H.I., 2023. Managing today’s ‘just in case’ supply chain with automated guided\nvehicleshttps://tinyurl.com/ms8rak8t. [15] Handling, L.M., . Automated guided vehicles (AGVs) automatic movement. https://\ntinyurl.com/23vbvbdd. [16] Kabir, Q.S., Suzuki, Y., 2018. Increasing manufacturing flexibility through battery\nmanagement of automated guided vehicles. Computers & Industrial Engineering 117,\n225–236. URL: https://www.sciencedirect.com/science/article/pii/\nS0360835218300330, doi:https://doi.org/10.1016/j.cie.2018.01. 026. [17] Kabir,Q.S.,Suzuki,Y.,2019. Comparativeanalysisofdifferentroutingheuristicsforthebat-\nterymanagementofautomatedguidedvehicles. InternationalJournalofProductionResearch\n57,624–641. [18] Kachwala, Z., 2023. Amazon rolls out robotic system at houston warehouse to speed up\ndeliverieshttps://tinyurl.com/ytyes5hk. [19] Kauke, D., Sailer, F., Fottner, J., 2022.",
      "size": 969,
      "sentences": 17
    },
    {
      "id": 99,
      "content": "onResearch\n57,624–641. [18] Kachwala, Z., 2023. Amazon rolls out robotic system at houston warehouse to speed up\ndeliverieshttps://tinyurl.com/ytyes5hk. [19] Kauke, D., Sailer, F., Fottner, J., 2022. Mobile picking robots: A first study of the effects\nofhuman-robotinteractionsinconventionalorderpickingsystems,in: 5thEAIInternational\nConferenceonManagementofManufacturingSystems,Springer.pp.319–332. 32\n=== 페이지 33 ===\n[20] Kawakami,T.,Takata,S.,2012. Batterylifecyclemanagementforautomaticguidedvehicle\nsystems, in: Design for Innovative Value Towards a Sustainable Society: Proceedings of\nEcoDesign 2011: 7th International Symposium on Environmentally Conscious Design and\nInverseManufacturing,Springer.pp.403–408. [21] Kmiecik, W., Wojcikowski, M., Koszalka, L., Kasprzak, A., 2010.",
      "size": 785,
      "sentences": 8
    },
    {
      "id": 100,
      "content": "s of\nEcoDesign 2011: 7th International Symposium on Environmentally Conscious Design and\nInverseManufacturing,Springer.pp.403–408. [21] Kmiecik, W., Wojcikowski, M., Koszalka, L., Kasprzak, A., 2010. Task allocation in mesh\nconnected processors with local search meta-heuristic algorithms, in: Intelligent Informa-\ntion and Database Systems: Second International Conference, ACIIDS, Hue City, Vietnam,\nMarch24-26,2010.Proceedings,PartII2,Springer.pp.215–224. [22] Kuhn, H., Sternbeck, M.G., 2013. Integrative retail logistics: An exploratory study. Opera-\ntionsManagementResearch6,2–18. [23] Le-Anh, T., De Koster, M., 2006. A review of design and control of\nautomated guided vehicle systems. European Journal of Operational Research\n171, 1–23. URL: https://www.sciencedirect.com/science/article/\npii/S0377221705001840, doi:https://doi.org/10.1016/j.ejor.2005. 01.036. [24] Li, X., Liu, Z., Tan, F., 2017.",
      "size": 905,
      "sentences": 12
    },
    {
      "id": 101,
      "content": "nal of Operational Research\n171, 1–23. URL: https://www.sciencedirect.com/science/article/\npii/S0377221705001840, doi:https://doi.org/10.1016/j.ejor.2005. 01.036. [24] Li, X., Liu, Z., Tan, F., 2017. Multi-robot task allocation based on cloud ant colony al-\ngorithm, in: Neural Information Processing: 24th International Conference, ICONIP 2017,\nGuangzhou,China,November14–18,2017,Proceedings,PartIV24,Springer.pp.3–10. [25] Liu,C.,Kroll,A.,2012. Acentralizedmulti-robottaskallocationforindustrialplantinspec-\ntion by using a* and genetic algorithms, in: Artificial Intelligence and Soft Computing: 11th\nInternationalConference,ICAISC2012,Zakopane,Poland,April29-May3,2012,Proceed-\nings,PartII11,Springer.pp.466–474. [26] Lo¨ffler, M., Boysen, N., Schneider, M., 2023. Human-robot cooperation: Coordinating au-\ntonomousmobilerobotsandhumanorderpickers. TransportationScience. [27] Logistik KnowHow, 2023. Picking method pick-by-robot. https://tinyurl.com/\n25jzvp9r. Accessed: 2023-11-06.",
      "size": 987,
      "sentences": 14
    },
    {
      "id": 102,
      "content": "tion: Coordinating au-\ntonomousmobilerobotsandhumanorderpickers. TransportationScience. [27] Logistik KnowHow, 2023. Picking method pick-by-robot. https://tinyurl.com/\n25jzvp9r. Accessed: 2023-11-06. [28] MasterMover, 2022. AGVs – The future of warehouse efficiency. https://tinyurl. com/urmm37fj. [29] McHaney,R.,1995. Modellingbatteryconstraintsindiscreteeventautomatedguidedvehicle\nsimulations. Internationaljournalofproductionresearch33,3023–3040. [30] Mosca, E., 2021. Automatic guided vehicles: The future of manufacturing and warehousing\nhttps://tinyurl.com/346dx7vu. [31] NextSmartShip, 2023. AGV robots for automation in warehousing https://tinyurl. com/42rvdzwx. 33\n=== 페이지 34 ===\n[32] Parimi, K., 2017. A guide to automated guided vehicles https://tinyurl.com/\neh3mcyhx. [33] Pugliese, G., Chou, X., Loske, D., Klumpp, M., Montemanni, R., 2022. Amr-assisted order\npicking: modelsforpicker-to-partssystemsinatwo-blockswarehouse. Algorithms15,413.",
      "size": 956,
      "sentences": 23
    },
    {
      "id": 103,
      "content": "//tinyurl.com/\neh3mcyhx. [33] Pugliese, G., Chou, X., Loske, D., Klumpp, M., Montemanni, R., 2022. Amr-assisted order\npicking: modelsforpicker-to-partssystemsinatwo-blockswarehouse. Algorithms15,413. [34] Ralevic,P.,Dobrodolac,M.,Mladenovic,S.,Cicevic,S.,Cubranic-Dobrodolac,M.,2012. A\ndynamicprogrammingapproachalgorithmfortheallocationoflimitedresources. Metalurgia\nInternational17,91. [35] Sarkar, C., Paul, H.S., Pal, A., 2018. A scalable multi-robot task allocation algorithm, in:\n2018 IEEE International Conference on Robotics and Automation (ICRA), IEEE. pp. 5022–\n5027. [36] Sgarbossa, F., Romsdal, A., Johannson, F.H., Krogen, T., 2020. Robot picker solution in\norderpickingsystems: anergo-zoningapproach. IFAC-PapersOnLine53,10597–10602. [37] Shah,S.,Lowalekar,M.,Varakantham,P.,2020. Neuralapproximatedynamicprogramming\nfor on-demand ride-pooling, in: Proceedings of the AAAI Conference on Artificial Intelli-\ngence,pp.507–515. [38] Srinivas, S., Yu, S., 2022.",
      "size": 971,
      "sentences": 17
    },
    {
      "id": 104,
      "content": ".,Varakantham,P.,2020. Neuralapproximatedynamicprogramming\nfor on-demand ride-pooling, in: Proceedings of the AAAI Conference on Artificial Intelli-\ngence,pp.507–515. [38] Srinivas, S., Yu, S., 2022. Collaborative order picking with multiple pickers and robots:\nIntegrated approach for order batching, sequencing and picker-robot routing. International\nJournalofProductionEconomics254,108634. [39] Strom, E., 2018. The benefits of utilizing AGVs in warehouse operation https://\ntinyurl.com/35zskvu3. [40] Tompkins, J.A., White, J.A., Bozer, Y.A., Tanchoco, J.M.A., 2010. Facilities planning. John\nWiley&Sons. [41] Vijayakumar,V.,Sgarbossa,F.,2021. Aliteraturereviewonthelevelofautomationinpicker-\nto-partsorderpickingsystem: researchopportunities. IFAC-PapersOnLine54,438–443. [42] Vis, I.F., 2006. Survey of research in the design and control of automated guided vehicle\nsystems. European Journal of Operational Research 170, 677–709.",
      "size": 935,
      "sentences": 16
    },
    {
      "id": 105,
      "content": "ortunities. IFAC-PapersOnLine54,438–443. [42] Vis, I.F., 2006. Survey of research in the design and control of automated guided vehicle\nsystems. European Journal of Operational Research 170, 677–709. URL: https:\n//www.sciencedirect.com/science/article/pii/S0377221704006459,\ndoi:https://doi.org/10.1016/j.ejor.2004.09.020. [43] Winkelhaus, S., Zhang, M., Grosse, E.H., Glock, C.H., 2022. Hybrid order picking: A\nsimulation model of a joint manual and autonomous order picking system. Computers &\nIndustrialEngineering167,107981. [44] Wise,M.,Ferguson,M.,King,D.,Diehr,E.,Dymesich,D.,2016.Fetchandfreight: Standard\nplatformsforservicerobotapplications,in: Workshoponautonomousmobileservicerobots,\npp.1–6. 34\n=== 페이지 35 ===\n[45] Xu, X., Ren, C., 2020. Research on dynamic storage location assignment of picker-to-parts\npickingsystemsundertraversingroutingmethod. Complexity2020,1–12. [46] Zhang, M., Grosse, E.H., Glock, C.H., 2023.",
      "size": 930,
      "sentences": 14
    },
    {
      "id": 106,
      "content": "X., Ren, C., 2020. Research on dynamic storage location assignment of picker-to-parts\npickingsystemsundertraversingroutingmethod. Complexity2020,1–12. [46] Zhang, M., Grosse, E.H., Glock, C.H., 2023. Ergonomic and economic evaluation of a\ncollaborative hybrid order picking system. International Journal of Production Economics\n258,108774. [47] Zhang, M., Winkelhaus, S., Grosse, E.H., 2021. Evaluation of human workload in a hybrid\norderpickingsystem. IFAC-PapersOnLine54,458–463. 35",
      "size": 484,
      "sentences": 10
    }
  ]
}