{
  "source": "ArXiv",
  "filename": "016_Introducing_Combi-Stations_in_Robotic_Mobile_Fulfi.pdf",
  "total_chars": 31217,
  "total_chunks": 43,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\nIntroducing Combi-Stations in Robotic Mobile\nFulfilment Systems: A Queueing-Theory-Based\nEfficiency Analysis\nLin Xie1[0000−0002−3168−4922] and Sonja Otten1[0000−0002−3124−832X]\nUniversity of Twente, Drienerlolaan 5, 7522 NB Enschede, The Netherlands\n{lin.xie,s.otten}@utwente.nl\nAbstract. In the era of digital commerce, the surge in online shop-\nping and the expectation for rapid delivery have placed unprecedented\ndemands on warehouse operations. The traditional method of order ful-\nfilment, where human order pickers traverse large storage areas to pick\nitems,hasbecomeabottleneck,consumingvaluabletimeandresources. Robotic Mobile Fulfilment Systems (RMFS) offer a solution by using\nrobotstotransportstorageracksdirectlytohuman-operatedpickingsta-\ntions, eliminating the need for pickers to travel.",
      "size": 817,
      "sentences": 4
    },
    {
      "id": 2,
      "content": "imeandresources. Robotic Mobile Fulfilment Systems (RMFS) offer a solution by using\nrobotstotransportstorageracksdirectlytohuman-operatedpickingsta-\ntions, eliminating the need for pickers to travel. This paper introduces\n‘combi-stations’—a novel type of station that enables both item picking\nandreplenishment,asopposedtotraditionalseparatestations.Weanal-\nyse the efficiency of combi-stations using queueing theory and demon-\nstrate their potential to streamline warehouse operations. Our results\nsuggest that combi-stations can reduce the number of robots required\nfor stability and significantly reduce order turnover time, indicating a\npromising direction for future warehouse automation. Keywords: Combi-Station · Queueing theory · Robotic mobile fulfil-\nment systems · Warehouse layout. 1 Introduction\nAccording to a recent report by Statista (2024)1, global retail e-commerce sales\nreached $5.8 trillion in 2023 and are expected to exceed $8 trillion by 2027.",
      "size": 967,
      "sentences": 6
    },
    {
      "id": 3,
      "content": "stems · Warehouse layout. 1 Introduction\nAccording to a recent report by Statista (2024)1, global retail e-commerce sales\nreached $5.8 trillion in 2023 and are expected to exceed $8 trillion by 2027. In\ntoday’s fast-paced economy, timely order fulfilment is critical. To accommodate\nthis rapid growth, warehouses must operate more efficiently by turning pallets\ninto ready-to-ship packages. The primary and most time-consuming task in a\nwarehouse is to pick items from their storage locations to fulfil customer orders\n(called order picking). This process can account for around 50-65% of operating\ncosts.Improvingtheefficiencyofthisprocessisthereforeparamount(see[5]).In\na traditional manual order picking system, also known as a picker-to-parts sys-\ntem, pickers spend about 70% of their working time on unproductive tasks such\nas searching and travelling (see [11]).",
      "size": 869,
      "sentences": 6
    },
    {
      "id": 4,
      "content": "n\na traditional manual order picking system, also known as a picker-to-parts sys-\ntem, pickers spend about 70% of their working time on unproductive tasks such\nas searching and travelling (see [11]). To minimise the travelling time of human\npickers, many solutions have been proposed in the literature and in practice,\n1 https://www.statista.com/statistics/379046/worldwide-retail-e-commerce-sales/\n4202\nraM\n91\n]OR.sc[\n1v89721.3042:viXra\n=== 페이지 2 ===\n2 Xie and Otten\nsuch as zoning [6], mixed-shevles storage [12], splitting orders during picking\n[14], using co-robots to do the travelling [13] and various automated systems\n(see [3] for an overview). Refilling\nReplenishment\nsta�on 1\nPicking sta�on\n1\nPicking\nStorage Storage\nReplenishment\nsta�on 2\nPicking Picking sta�on\n2\n(a) The picking and replenishment processes of two-station types. Picking\nStorage\nCombi-sta�on\n2\nStorage Refilling\nStorage\nCombi-sta�on\nRefilling 1\nPicking\n(b) The picking and replenishment processes of combi-stations.",
      "size": 993,
      "sentences": 4
    },
    {
      "id": 5,
      "content": "replenishment processes of two-station types. Picking\nStorage\nCombi-sta�on\n2\nStorage Refilling\nStorage\nCombi-sta�on\nRefilling 1\nPicking\n(b) The picking and replenishment processes of combi-stations. Fig.1: The picking and replenishment processes of two RMFS systems. In this paper, we consider one such automated system, the Robotic Mobile\nFulfilment System (RMFS), which was developed by Kiva Systems LLC, now\nAmazon Robotics LLC. In such a system (a small example is depicted in Fig-\nure 1a), robots are sent to retrieve pods (also called racks or shelves) from the\nstorage area (shown in the grey area of Figure 1a) and bring them to human\noperators at picking stations (located on the right side of Figure 1a), where the\nitems are picked according to customer orders. After picking, the robots return\nthe pods to the storage area or to replenishment stations (located on the left\nside of Figure 1a) for replenishment before returning to the storage area.",
      "size": 958,
      "sentences": 6
    },
    {
      "id": 6,
      "content": "omer orders. After picking, the robots return\nthe pods to the storage area or to replenishment stations (located on the left\nside of Figure 1a) for replenishment before returning to the storage area. Some-\ntimes packing is also done at the picking stations. More often the picked items\naretransported(e.g.byconveyorsormobilerobots)topackingstationsforfinal\n=== 페이지 3 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 3\npacking.However,packingstationsarenotconsideredinthispaper.InFigure1b,\nthere is a combi-station to the right and left of the storage area. Each combi-\nstation is designed with dual functionality, featuring distinct sections for both\npickingandreplenishmenttasks.Thislayoutallowsforimmediatereplenishment\nfollowing the picking process within the same station, streamlining operations\nby eliminating the need to traverse to a different location within the storage\narea.",
      "size": 904,
      "sentences": 5
    },
    {
      "id": 7,
      "content": "youtallowsforimmediatereplenishment\nfollowing the picking process within the same station, streamlining operations\nby eliminating the need to traverse to a different location within the storage\narea. Immediate replenishment is optional and does not need to be performed\nafter every picking activity. In both cases in Figure 1, a robot has to wait if the\nhuman operator at its destination is busy (i.e. a queue is formed). For a fair\ncomparison, we assume that in both cases in Figure 1 we have two picking and\ntwo replenishment human operators. There are some publications related to the layout design in the RMFS, such\nas the dimension of the storage area [9], the shape of the forward area [1], the\nnumber of pods, the ratio of stations, the placement of stations [8, 9] and the\nnumberofrobots[7,10,15].Themostcommontypesofstationsarepickingsta-\ntions, where human pickers pick items from pods, and replenishment stations,\nwhere items are stored on pods.",
      "size": 956,
      "sentences": 6
    },
    {
      "id": 8,
      "content": "stations [8, 9] and the\nnumberofrobots[7,10,15].Themostcommontypesofstationsarepickingsta-\ntions, where human pickers pick items from pods, and replenishment stations,\nwhere items are stored on pods. They are usually separated so that the replen-\nishmentstationsareclosetotheinbound(pallet)door,whilethepickingstations\nare closer to the outbound (parcel) door. However, automation can make their\nplacement more flexible. For example, mobile robots (MIR robots, fetch robots,\nAmazon Proteus, etc.) are used to transport parcels or pallets within the ware-\nhouse. Inthispaper,wepresentanewtypeofstation,calledacombi-station,which\nallowsbothpickingandreplenishment.Furthermore,toevaluatetheefficiencyof\nusingcombi-stations,wemodeltheRMFSasasemi-openqueueingnetworkwith\nbackordering (SOQN-BO) and apply the approximation methods proposed in\n[10]toevaluateitsefficiency.Morespecifically,wecomputetheaverageturnover\ntime, i.e.",
      "size": 920,
      "sentences": 6
    },
    {
      "id": 9,
      "content": "emodeltheRMFSasasemi-openqueueingnetworkwith\nbackordering (SOQN-BO) and apply the approximation methods proposed in\n[10]toevaluateitsefficiency.Morespecifically,wecomputetheaverageturnover\ntime, i.e. the time from the arrival of an order at the system to the completion\nof picking. In the following, we model the RMFS with two-station types and the RMFS\nwith combi-stations as SOQN-BO in Section 2 and include the approximation\nmethods from [10] to calculate the turnover time. In Section 3, we present some\ncomputational results related to our investigation. Finally, our paper concludes\nwith a short summary in Section 4. 2 Modelling as an SOQN-BO\nIn Subsection 2.1, we first give a brief description of an SOQN-BO as outlined\nin [10]. Then we model the example depicted in Figure 1a (an RMFS with\ntwo-station types) as an SOQN-BO in Subsection 2.2. Based on this model, we\nalso model the example shown in Figure 1b (an RMFS with combi-stations) in\nSubsection 2.3.",
      "size": 966,
      "sentences": 8
    },
    {
      "id": 10,
      "content": "icted in Figure 1a (an RMFS with\ntwo-station types) as an SOQN-BO in Subsection 2.2. Based on this model, we\nalso model the example shown in Figure 1b (an RMFS with combi-stations) in\nSubsection 2.3. Finally, we briefly introduce the approximation methods from\n[10] that we employ for calculating the turnover time in Subsection 2.4. === 페이지 4 ===\n4 Xie and Otten\n2.1 Description of an SOQN-BO\nA semi-open queueing network has characteristics of both an open queueing\nnetwork and a closed queueing network. Figure 2 shows an SOQN-BO as de-\nscribed in [10, Section 2.1]. It consists of a queueing network (“inner network”),\na resource pool, and an external queue. resource network\nresource\npool\ninner network with J nodes\ncustomer external queue\narrival\nSYNC\nFig.2: An SOQN with backordering and external queue [10, Fig. 2]. Inthissystem,customersarrivefollowingaPoissonprocesswitharateλ >\nBO\n0. For service each customer requires exactly one resource from the resource\npool.",
      "size": 974,
      "sentences": 10
    },
    {
      "id": 11,
      "content": "th backordering and external queue [10, Fig. 2]. Inthissystem,customersarrivefollowingaPoissonprocesswitharateλ >\nBO\n0. For service each customer requires exactly one resource from the resource\npool. If a resource is available when a customer arrives, the resource enters the\ninner network to complete the customer’s order. However, if a resource is not\navailablewhenacustomerarrives,thenewcustomerwaitsintheexternalqueue\non a first-come, first-served (FCFS) basis until a resource becomes available\n(backordering). When the resource leaves the inner network, it returns to the resource pool\n(referred to as node 0) and waits for the next customer to arrive. Whenever\nthe external queue is not empty and a resource item is returned to the resource\npool,itisimmediatelysynchronisedwiththecustomeratthefrontofthequeue.",
      "size": 816,
      "sentences": 8
    },
    {
      "id": 12,
      "content": "nd waits for the next customer to arrive. Whenever\nthe external queue is not empty and a resource item is returned to the resource\npool,itisimmediatelysynchronisedwiththecustomeratthefrontofthequeue. Therefore,themovementofresourceswithinthissystemformsaclosednetwork,\naptlynamedtheresourcenetwork.Themaximumnumberofresourcesavailable\nin the pool is denoted by N.\nThe inner network comprises J ≥ 1 numbered service stations (nodes), de-\nnoted by J :={1,...,J}. Each station j consists of a single server with infinite\nwaiting room under FCFS regime or processor sharing regime. Customers in\nthenetworkareindistinguishable.Theservicetimesfollowanexponentiallydis-\ntributed random variable with mean 1. If there are n >0 customers present at\nj\nnode j, the service at node j is provided with intensity ν (n ) > 0. All service\nj j\nand inter-arrival times constitute an independent family of random variables.",
      "size": 904,
      "sentences": 7
    },
    {
      "id": 13,
      "content": "here are n >0 customers present at\nj\nnode j, the service at node j is provided with intensity ν (n ) > 0. All service\nj j\nand inter-arrival times constitute an independent family of random variables. Movements of resources in the inner network follow a Markovian routing\nmechanism:Aftersynchronisationwithacustomer,aresourcevisitsnodej with\n[표 데이터 감지됨]\n\n=== 페이지 5 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 5\nprobability r(0,j)≥0. When leaving node i, a resource selects with probability\nr(i,j)≥0 to visit node j next. It then immediately enters node j. If the server\nat node j is idle, the resource starts its service. Otherwise, it joins the tail\nof the queue at node j. This resource may also leave the inner network with\nprobability r(i,0) ≥ 0. It holds\n(cid:80)J\nr(i,j) = 1 with r(0,0) := 0 for all i ∈\nj=0\nJ := {0,1,...,J}. The resource’s routing decision, given the departure node\n0\ni, is independent of the network’s history.",
      "size": 958,
      "sentences": 10
    },
    {
      "id": 14,
      "content": "ty r(i,0) ≥ 0. It holds\n(cid:80)J\nr(i,j) = 1 with r(0,0) := 0 for all i ∈\nj=0\nJ := {0,1,...,J}. The resource’s routing decision, given the departure node\n0\ni, is independent of the network’s history. We assume that the routing matrix\n(cid:0) (cid:1)\nR:= r(i,j):i,j ∈J is irreducible. 0\nTo obtain a Markovian process description, we introduce the following nota-\ntion.WedenotebyX (t)thenumberofcustomersintheexternalqueueattime\nex\nt≥0,byY (t)thenumberofresourcesintheresourcepoolattimet≥0andby\n0\nY (t), j ∈J, the number of resources present at node j in the inner network at\nj\ntime t≥0, either waiting or in service. We call this Y (t) queue length at node\nj\n(cid:0) (cid:1)\nj ∈ J at time t ≥ 0. Then Y(t) := Y (t):j ∈J is the queue length vector\n0 j 0\nof the resource network at time t≥0. We define the joint queue length process\nofthesemi-opennetworkwithbackorderingbyZ :=((X (t),Y(t)):t≥0).",
      "size": 892,
      "sentences": 8
    },
    {
      "id": 15,
      "content": ". Then Y(t) := Y (t):j ∈J is the queue length vector\n0 j 0\nof the resource network at time t≥0. We define the joint queue length process\nofthesemi-opennetworkwithbackorderingbyZ :=((X (t),Y(t)):t≥0). BO ex\nDue to the assumptions of independence and memorylessness, Z is an irre-\nBO\nducible Markov process with state space\n(cid:8) (cid:88) (cid:9)\nE := (0,n ,n ,...,n ):n ∈{0,...,N} ∀j ∈J , n =N\n0 1 J j 0 j\nj∈J0\n∪ (cid:8) (n ,0,n ,...,n ):n ∈N, n ∈{0,...,N} ∀j ∈J, (cid:88) n =N (cid:9) . ex 1 J ex j j\nj∈J\n2.2 Modelling the RMFS with two-station types\nTo model the RMFS with two-station types as an SOQN-BO we use the same\ndefinition of robot tasks as in [10, Section 5.2].",
      "size": 674,
      "sentences": 5
    },
    {
      "id": 16,
      "content": "=N (cid:9) . ex 1 J ex j j\nj∈J\n2.2 Modelling the RMFS with two-station types\nTo model the RMFS with two-station types as an SOQN-BO we use the same\ndefinition of robot tasks as in [10, Section 5.2]. A robot’s task is not exactly the\nsameasacustomer’sorder,becausetheitemsintheordermaybespreadacross\nseveralpods.Someorderscansharethesamepod.Thecustomerordersaresplit\ninto items as introduced by [14], so the robot’s tasks are a stream of “bring a\npodtoapickingstation”.ThetaskstreamismodelledasaPoissonstreamwith\nrate λ = λ ·σ , where the order arrival rate λ and the average\nBO CO pod/order CO\npod/order ratio σ are given. pod/order\nSince RMFS is open with respect to tasks and closed with respect to robots,\nwhicharetheresources,wecanmodeltheexampleshowninFigure1aasSOQN-\nBO in the following way. AsshowninFigure3,eachtaskrequiresexactlyoneidlerobotfromtherobot\npool (resource pool) to enter the inner network, which is referred to as node 0.",
      "size": 943,
      "sentences": 5
    },
    {
      "id": 17,
      "content": "xampleshowninFigure1aasSOQN-\nBO in the following way. AsshowninFigure3,eachtaskrequiresexactlyoneidlerobotfromtherobot\npool (resource pool) to enter the inner network, which is referred to as node 0. If no idle robot is available, the new task must wait in an external queue until\na robot becomes available (”backordering”). The maximum number of robots in\nthe resource pool is N. The inner network in the example consists of 13 nodes,\ndenoted by\nJ :={sp,pp ,pp ,p ,p ,p s,p s,p r ,p r ,r ,r ,r s,r s}. 1 2 1 2 1 2 1 1 2 2 1 2 1 2\n=== 페이지 6 ===\n6 Xie and Otten\ntask resource network\npod\nrobot\ninnernetwork move to\nstorage\np1s\nmove to pod leaves\npicker 1 picking station 1\npp1 p1 pod leaves\nidle\nrobots 0 repl. station 1\ntask leaves p1r1 r1 r1s\ntask arrival external queue mo p v o e d to rep m l. o s v ta e t t io o n 1 m st o o v r e a g t e o\nSYNC sp\nmove to move to\nrepl. station 2 repl.",
      "size": 891,
      "sentences": 7
    },
    {
      "id": 18,
      "content": "le\nrobots 0 repl. station 1\ntask leaves p1r1 r1 r1s\ntask arrival external queue mo p v o e d to rep m l. o s v ta e t t io o n 1 m st o o v r e a g t e o\nSYNC sp\nmove to move to\nrepl. station 2 repl. station 2 storage\np2r2 r2 r2s\nmove to\npicker 2 picking station 2\npp2 p2 pod leaves\nmove to\nstorage\ntask leaves p2s\npod leaves\nFig.3: RMFS with two-station types modelled as an SOQN-BO. The meaning and notations of nodes are given in Table 1 on page 14. The robot\nwith the assigned task moves through the network. Fromtheperspectiveofarobot,thefollowingprocessestakeplaceasitmoves\nthrough the network:\n– The idle robot awaits assignment to a task (bring a particular pod). – The robot moves with the assigned task to a pod. – With this pod the robot moves with probability q ∈ (0,1) to picking\npp\n1\nstation 1 and with probability q ∈(0,1) to station 2, q +q =1. pp pp pp\n2 1 2\n– At the picking stations, the robot queues with the pod.",
      "size": 933,
      "sentences": 10
    },
    {
      "id": 19,
      "content": "pod the robot moves with probability q ∈ (0,1) to picking\npp\n1\nstation 1 and with probability q ∈(0,1) to station 2, q +q =1. pp pp pp\n2 1 2\n– At the picking stations, the robot queues with the pod. – Afterpickingatpickingstation1resp.pickingstation2,therobotfacestwo\npossibilities:\nOption A:\n- The robot carries the pod directly back to the storage area with proba-\nbility q ∈(0,1) resp. q ∈(0,1) and\np s p s\n1 2\n- waits for the next task. Option B:\n- The robot moves to the replenishment station with probability q ∈\np\n1\nr1\n(0,1) resp. q ∈(0,1), whereby q +q =1 resp. q +q =1,\np\n2\nr2 p\n1\ns p\n1\nr1 p\n2\ns p\n2\nr2\n- queues at the replenishment station, and\n- carries the pod back to the storage area and\n- waits for the next task.",
      "size": 728,
      "sentences": 7
    },
    {
      "id": 20,
      "content": "1) resp. q ∈(0,1), whereby q +q =1 resp. q +q =1,\np\n2\nr2 p\n1\ns p\n1\nr1 p\n2\ns p\n2\nr2\n- queues at the replenishment station, and\n- carries the pod back to the storage area and\n- waits for the next task. Eachoftheseprocessesismodelledasaqueue.Themovementsoftherobots\nare modelled by processor-sharing nodes with exponential service times with\nintensities ν (n ):=µ ·ϕ (n ), j ∈J \\{p ,p ,r ,r }, presented in Table 1.\nj j j j j 1 2 1 2\n[표 데이터 감지됨]\n\n=== 페이지 7 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 7\nThe two picking stations and two replenishment stations, which are referred\ntoasnodesp andp resp.nodesr andr ,consistofasingleserverwithwaiting\n1 2 1 2\nroom under the FCFS regime. The picking times and the replenishment times\nare exponentially distributed with rates ν and ν resp. ν and ν .",
      "size": 814,
      "sentences": 6
    },
    {
      "id": 21,
      "content": "resp.nodesr andr ,consistofasingleserverwithwaiting\n1 2 1 2\nroom under the FCFS regime. The picking times and the replenishment times\nare exponentially distributed with rates ν and ν resp. ν and ν . p\n1\np\n2\nr1 r2\nThe robots travel among the nodes following an irreducible routing matrix\n(cid:0) (cid:1)\nR:= r(i,j):i,j ∈J , whereby J :={0}∪J, which is given by\n0 0\n \n0sp pp pp p p p s p s p r p r r r r sr s\n1 2 1 2 1 2 1 1 2 2 1 2 1 2\n 0 1 \n \n sp q pp q pp \n 1 2 \npp 1 \n 1 \npp 1 \n 2 \n  p 1 q p 1 s q p 1 r1  \n  p 2 q p 2 s q p 2 r2  \nR= p s 1 .  1 \n p s 1 \n 2 \n  p 1 r 1 1  \n  p 2 r 2 1  \n r 1 1 \n \n r 2 1 \n \n r 1 s 1 \nr s 1\n2\nWe define the joint stochastic process Z of this system by\n(cid:16)(cid:16)\nZ := X (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),\nex 0 sp pp pp p p p s p s\n1 2 1 2 1 2\n(cid:17) (cid:17)\nY (t),Y (t),Y (t),Y (t),Y (t),Y (t) :t≥0 .",
      "size": 913,
      "sentences": 5
    },
    {
      "id": 22,
      "content": "ess Z of this system by\n(cid:16)(cid:16)\nZ := X (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),\nex 0 sp pp pp p p p s p s\n1 2 1 2 1 2\n(cid:17) (cid:17)\nY (t),Y (t),Y (t),Y (t),Y (t),Y (t) :t≥0 . p\n1\nr1 p\n2\nr2 r1 r2 r1s r2s\nDue to the usual independence and memoryless assumptions, Z is an irre-\nducible Markov process with state space\n(cid:8)(cid:0) (cid:1)\nE := 0,k ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n :\nidlerobots sp pp\n1\npp\n2\np\n1\np\n2\np\n1\ns p\n2\ns p\n1\nr1 p\n2\nr2 r1 r2 r1s r2s\n(cid:88) (cid:9)\nn ∈{0,...,N} ∀j ∈J , n =N\nj 0 j\nj∈J0\n(cid:8)(cid:0) (cid:1)\n∪ n ,0,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n :\nex sp pp\n1\npp\n2\np\n1\np\n2\np\n1\ns p\n2\ns p\n1\nr1 p\n2\nr2 r1 r2 r1s r2s\nn ∈N, n ∈{0,...,N} ∀j ∈J, (cid:88) n =N (cid:9) . ex j j\nj∈J\n2.3 Modelling the RMFS with combi-stations\nWe adapt the model in Figure 3 to the case with two combi-stations. The main\ndifferenceisthattherearenonodesrepresentingmovementtothereplenishment\nstations p r and p r .",
      "size": 946,
      "sentences": 4
    },
    {
      "id": 23,
      "content": "the RMFS with combi-stations\nWe adapt the model in Figure 3 to the case with two combi-stations. The main\ndifferenceisthattherearenonodesrepresentingmovementtothereplenishment\nstations p r and p r . It can also be interpreted that the average travel time\n1 1 2 2\nof p r and p r is equal to zero. However, since this is not allowed, the model\n1 1 2 2\n=== 페이지 8 ===\n8 Xie and Otten\nwith combi-stations cannot be considered as a special case of the model with\ntwo-station types. Nevertheless, it can be considered as a limit case when the\naverage travel time approaches zero. AsshowninFigure4,weretainthepickingandreplenishmentstationnodes,\nbut for the sake of clarity these are the picking and replenishment parts within\ncombi-stations 1 and 2.\ntask resource network\npod\nrobot\ninnernetwork move to\nstorage\np1s\nmove to pod leaves\npicker 1 picking station 1\npp1 p1 combi-station 1 pod leaves\nidle\nrobots 0 repl.",
      "size": 907,
      "sentences": 6
    },
    {
      "id": 24,
      "content": "rts within\ncombi-stations 1 and 2.\ntask resource network\npod\nrobot\ninnernetwork move to\nstorage\np1s\nmove to pod leaves\npicker 1 picking station 1\npp1 p1 combi-station 1 pod leaves\nidle\nrobots 0 repl. station 1\ntask leaves r1 r1s\ntask arrival external queue mo p v o e d to m st o o v r e a g t e o\nSYNC sp\nmove to\nrepl. station 2 storage\ncombi-station 2 r2 r2s\nmove to\npicker 2 picking station 2\npp2 p2 pod leaves\nmove to\nstorage\ntask leaves p2s\npod leaves\nFig.4: RMFS with combi-stations modelled as an SOQN-BO. The definition of the nodes is the same as described in Table 1. The inner\nnetwork in the example has two nodes less than the model with two types of\nstations, namely 11 nodes, denoted by\nJ :={sp,pp ,pp ,p ,p ,p s,p s,r ,r ,r s,r s}.",
      "size": 746,
      "sentences": 5
    },
    {
      "id": 25,
      "content": "same as described in Table 1. The inner\nnetwork in the example has two nodes less than the model with two types of\nstations, namely 11 nodes, denoted by\nJ :={sp,pp ,pp ,p ,p ,p s,p s,r ,r ,r s,r s}. 1 2 1 2 1 2 1 2 1 2\nWe update the routing matrix R and the joint stochastic process Z corre-\nspondingly without p r and p r (nodes representing movement to the replen-\n1 1 2 2\n[표 데이터 감지됨]\n\n=== 페이지 9 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 9\nishment stations), namely\n \n0sp pp pp p p p s p s r r r sr s\n1 2 1 2 1 2 1 2 1 2\n 0 1 \n \n sp q pp q pp \n 1 2 \npp 1 \n 1 \npp 1 \n 2 \n  p 1 q p 1 s q p 1 r1  \nR=  p 2 q p 2 s q p 2 r2  \np s 1 \n 1 \np s 1 \n 2 \n r 1 1 \n \n r 2 1 \n \n r 1 s 1 \nr s 1\n2\nand\n(cid:16)(cid:16)\nZ := X (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),Y (t),\nex 0 sp pp pp p p p s p s\n1 2 1 2 1 2\n(cid:17) (cid:17)\nY (t),Y (t),Y (t),Y (t) :t≥0\nr1 r2 r1s r2s\nwith state space\n(cid:8)(cid:0) (cid:1)\nE := 0,k ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n :\nidlerobots sp pp\n1\npp\n2\np\n1\np\n2\np\n1\ns p\n2\ns r1 r2 r1s r2s\n(cid:88) (cid:9)\nn ∈{0,...,N} ∀j ∈J , n =N\nj 0 j\nj∈J0\n(cid:8)(cid:0) (cid:1)\n∪ n ,0,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n :\nex sp pp\n1\npp\n2\np\n1\np\n2\np\n1\ns p\n2\ns r1 r2 r1s r2s\nn ∈N, n ∈{0,...,N} ∀j ∈J, (cid:88) n =N (cid:9) .",
      "size": 1293,
      "sentences": 3
    },
    {
      "id": 26,
      "content": "∈{0,...,N} ∀j ∈J , n =N\nj 0 j\nj∈J0\n(cid:8)(cid:0) (cid:1)\n∪ n ,0,n ,n ,n ,n ,n ,n ,n ,n ,n ,n ,n :\nex sp pp\n1\npp\n2\np\n1\np\n2\np\n1\ns p\n2\ns r1 r2 r1s r2s\nn ∈N, n ∈{0,...,N} ∀j ∈J, (cid:88) n =N (cid:9) . ex j j\nj∈J\n2.4 Calculation of the order turnover time\nThe turnover time of a task is measured from the time the task is received to\nthetimethepickingiscompleted.Therefore,theturnovertimecanbesplitinto\ntwo main parts:\n1. the waiting time in the external queue and\n2. the processing time in the inner network. Note that an order can contain several items stored in different pods. In\nother words, all the items in an order may need to be completed by several\nrobot tasks.",
      "size": 668,
      "sentences": 4
    },
    {
      "id": 27,
      "content": "processing time in the inner network. Note that an order can contain several items stored in different pods. In\nother words, all the items in an order may need to be completed by several\nrobot tasks. When calculating the turnover time, we ignore the waiting time of\nanorderbetweenthefirstpickeditemanditscompletion.Therearetworeasons\nfor this: first, the waiting time depends on the efficiency of other algorithms,\nsuch as the order of the pods (see [2]); second, we assume that the shorter the\nwaiting time of each item in an order, the shorter the waiting time of the order. === 페이지 10 ===\n10 Xie and Otten\nBecause of the large state space, it is impractical to solve the RMFSs ex-\nactly using matrix-analytic methods. Even for 10 robots and 11 inner nodes,\nwe need a special matrix with\n(cid:0)J+N−1(cid:1)2\n= 34,134,779,536 entries. Therefore,\nN\nwe use the approximation method for SOQN developed by [10] to estimate the\nmain performance metrics.",
      "size": 950,
      "sentences": 7
    },
    {
      "id": 28,
      "content": "r nodes,\nwe need a special matrix with\n(cid:0)J+N−1(cid:1)2\n= 34,134,779,536 entries. Therefore,\nN\nwe use the approximation method for SOQN developed by [10] to estimate the\nmain performance metrics. An overview of this solution approach is visualised\nin Figure 5. To compute the processing time in the inner network, in (i) in Figure 5 the\nsystem is modified such that new arrivals are lost if the resource pool is empty. Since closed-form expressions for the steady-state distribution in product form\nare available for this modification, this approximation can be used to calculate\nthe processing time of the tasks by using mean-value analysis (MVA). To compute the waiting time in the external queue, in (ii) in Figure 5 the\ncomplexity of the modified SOQN is reduced by using Norton’s theorem, and\nthen in (iii) in Figure 5 the external queue is reinvented.",
      "size": 861,
      "sentences": 6
    },
    {
      "id": 29,
      "content": "e the waiting time in the external queue, in (ii) in Figure 5 the\ncomplexity of the modified SOQN is reduced by using Norton’s theorem, and\nthen in (iii) in Figure 5 the external queue is reinvented. Due to its closed-form\nexpressions for the steady-state distribution, the average waiting time in the\nexternal queue can be computed using Little’s law. The details of the approximations and the proofs can be found in [10]. The\nquality of the approximations has been confirmed by the simulation results. Approx. Approx. resource network resource network\nresource resource\npool pool\n(i)\ninner network with J nodes inner network with J nodes\ncustomerexternal queue customer\narrival arrival\nSYNC SYNC\nlost\ncustomer\n(ii)\nresource network resource network\nresource resource\npool pool\n(iii)\nApprox. customerexternal queue\ninner network with 1 node\ncustomer\ninner network with 1 node\narrival arrival\nSYNC SYNC\nlost\ncustomer\nFig.5: Overview of the solution approach developed in [10].",
      "size": 976,
      "sentences": 8
    },
    {
      "id": 30,
      "content": "l\n(iii)\nApprox. customerexternal queue\ninner network with 1 node\ncustomer\ninner network with 1 node\narrival arrival\nSYNC SYNC\nlost\ncustomer\nFig.5: Overview of the solution approach developed in [10]. We use the same\ncolour for parts that we change in a single approximation step. (This figure is a\nslight modification of [10, Fig. 1, p. 605]. [표 데이터 감지됨]\n\n=== 페이지 11 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 11\n3 Experiment and results\nIn this section, the parameters used in our experiment are first listed in Subsec-\ntion 3.1 and the computational results of our experiment are shown in Subsec-\ntion 3.2. 3.1 Parameter settings\nIn our experiments we take parameters from [10, Section 5.4]. The maximal\nnumber of pods is Nmax = 550, arrival rate of tasks is 468 tasks = 0.13 tasks,\nh s\narrival rates are given in [order/hour].",
      "size": 854,
      "sentences": 8
    },
    {
      "id": 31,
      "content": "s\nIn our experiments we take parameters from [10, Section 5.4]. The maximal\nnumber of pods is Nmax = 550, arrival rate of tasks is 468 tasks = 0.13 tasks,\nh s\narrival rates are given in [order/hour]. Because every order generates one task,\nweuse[task/hour]directly.Averagetraveltimeatnodesp:µ−1 =18.4s,atnode\nsp\npp :µ−1 =34.5s,atnodepp :µ−1 =34.5s,atnodep s:µ−1 =34.5s,atnode\n1 pp 2 pp 1 p s\n1 2 1\np s: µ−1 = 34.5s, at node p r : µ−1 = 34.5s, at node p r : µ−1 = 34.5s,\n2 p\n2\ns 2 2 p\n2\nr2 1 1 p\n1\nr1\nat node rs: µ−1 = 34.5s. Average picking time of picking stations 1 and 2:\nrs\nν−1 = ν−1 = 10s, average replenishment time of replenishment stations 1 and\np p\n1 2\n2 (node r ,r ): ν−1 = ν−1 = 30s. The probability of visiting picking stations 1\n1 2 r1 r2\nand 2: q = q = 0.5 and the probability of visiting replenishment stations\npp pp\n1 2\n1 and 2: q = q = 0.2. We assume that moving robots do not interfere. p\n1\nr1 p\n2\nr2\nHence, our processor-sharing queues are infinite server queues, i.e.",
      "size": 987,
      "sentences": 7
    },
    {
      "id": 32,
      "content": "ty of visiting replenishment stations\npp pp\n1 2\n1 and 2: q = q = 0.2. We assume that moving robots do not interfere. p\n1\nr1 p\n2\nr2\nHence, our processor-sharing queues are infinite server queues, i.e. ϕ (n ) = n\nj j j\nfor all j ∈J \\{p ,p ,r ,r }. 1 2 1 2\n3.2 Results\nSame as in [10], we implemented our algorithm in R and used the queueing\npackage, see [4]. Our implementation runs on a PC with an Intel Core i7-7700K\nCPU@4.20GHzand32GBRAMrunningMicrosoftWindows10in64-bitmode. We have plotted important system parameters in Figures 6 and 7 respectively. Forbetterreadability,wehaveplotteddataforalimitednumberofrobots(until\nstabilising of curves). Figure 6 on page 12 shows maximal arrival rates λ for a given number of\nBO\nN robots to keep the system stable, i.e. the system can ensure that tasks are\nprocessed in a timely manner without causing overload or excessive queueing.",
      "size": 877,
      "sentences": 10
    },
    {
      "id": 33,
      "content": "mal arrival rates λ for a given number of\nBO\nN robots to keep the system stable, i.e. the system can ensure that tasks are\nprocessed in a timely manner without causing overload or excessive queueing. When using two-station types (each type has two stations), the minimum num-\nber of robots for the system to be stable is 17, while the number is reduced to\n16 when using two combi-stations. In particular, with more than 40 robots, it is\nnotpossibletosignificantlyincreasethearrivalratewithadditionalrobots.Itis\nworth noting that the RMFS example shown in [10, Section 5] is slightly differ-\nent, as they consider only one replenishment station (whereas we consider two). However, it is interesting to note that with the addition of one replenishment\nstation, we need one less robot. Figure 7 on page 13 shows the average turnover times, i.e. from the arrival\nof an order (= task) at the system to its completion at a picking station.",
      "size": 933,
      "sentences": 7
    },
    {
      "id": 34,
      "content": "e replenishment\nstation, we need one less robot. Figure 7 on page 13 shows the average turnover times, i.e. from the arrival\nof an order (= task) at the system to its completion at a picking station. Note\nthat the time the robot spends travelling to and from the picking station is\nnot counted. For this reason, the time spent in the internal network is identical\n=== 페이지 12 ===\n12 Xie and Otten\nFig.6:Maximalarrivalratesλ forgivennumbersofrobotstokeepthesystem\nBO\nstable. for both systems. However, the effect of the saving in travel time from picking\nto replenishment can be seen in the extreme reduction in waiting time in the\nexternal network, as the robots are available in the resource pool more quickly. If we invest in 17 robots for the example given, both systems are stable, but\nthe turnover time of the two-station types system is extremely high. It is worth\nnoting that with the same number of robots, the turnover time of the combi-\nstations system decreases dramatically (by about 64%).",
      "size": 1000,
      "sentences": 9
    },
    {
      "id": 35,
      "content": "time of the two-station types system is extremely high. It is worth\nnoting that with the same number of robots, the turnover time of the combi-\nstations system decreases dramatically (by about 64%). If the number of robots\nis increased, e.g. to 18, the average order turnover time can still be reduced by\nabout 30% in the combi-station system. 4 Conclusion and recommendation\nInaroboticmobilefulfilmentsystem,themovementthroughthewarehousearea\nis performed by mobile robots to relieve the traveling loads of human workers. The human workers can only work at workstations, either picking or replenish-\nment stations (depending on the tasks). Due to this high level of automation\nin warehouses, we have seen several practical examples where the placement of\ndifferent types of stations can be more flexible. The traditional way is to place\nthe replenishment stations close to the inbound (pallet) gate, while the picking\nstations are closer to the outbound (parcel) gate.",
      "size": 969,
      "sentences": 8
    },
    {
      "id": 36,
      "content": "s of stations can be more flexible. The traditional way is to place\nthe replenishment stations close to the inbound (pallet) gate, while the picking\nstations are closer to the outbound (parcel) gate. In this paper we introduce a\nnew type of workstation, the combi-station. In such a station, both picking and\nreplenishment tasks can be performed by two different human workers. We can\nthink of a combi-station as capitalising on the dual functionality of picking and\nreplenishment within a single workstation. In order to analyse the performance of using this new type of workstations,\nwe model the two-station types system and the combi-station system (both sys-\ntems have two picking stations/parts and two replenishment stations/parts) as\n=== 페이지 13 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 13\nFig.7:AverageturnovertimeTO (λ ,N)ofatask(inseconds)forthegiven\ntask LC\nnumbers of robots.",
      "size": 914,
      "sentences": 6
    },
    {
      "id": 37,
      "content": "ishment stations/parts) as\n=== 페이지 13 ===\nIntroducing Combi-Stations in Robotic Mobile Fulfilment Systems 13\nFig.7:AverageturnovertimeTO (λ ,N)ofatask(inseconds)forthegiven\ntask LC\nnumbers of robots. Note that the system of two-station types is not stable with\n16 robots, so there is no calculation for it. semi-open queueing networks with backordering. Furthermore, we apply the ap-\nproximation methods proposed by [10] to calculate the order turnover time,\nnamely the waiting time in the external queue and the processing time in the\ninner network. Based on the experiment of the example shown in Figure 1 on page 2, we\ncan conclude that by replacing workstations with combi-stations, the number\nof robots needed to reach the stable state is reduced by one. Furthermore, if\nwe keep the same minimum number of robots of the two-station type system\n(namely 17 robots), the average order turnover time can be reduced by about\n64% in the combi-station system.",
      "size": 957,
      "sentences": 6
    },
    {
      "id": 38,
      "content": ". Furthermore, if\nwe keep the same minimum number of robots of the two-station type system\n(namely 17 robots), the average order turnover time can be reduced by about\n64% in the combi-station system. The recommendation for those warehousing companies designing new (auto-\nmated)warehousesorowningaroboticmobilefulfilmentsystemistochangethe\ntraditionalwayofplacingpickingandreplenishmentstationsseparately,namely\nintegrating combi-stations to capitalise on the dual functionality of picking and\nreplenishment within a single workstation. Such a change in layout can actu-\nally speed up order processing time within warehouses. This is exactly what\ncustomers expect to get their parcels faster. To investigate the long-term benefits and potential scalability of combi-\nstations in larger RMFS setups, further studies are recommended. === 페이지 14 ===\n14 Xie and Otten\nTable 1: Overview of the nodes in the networks of RMFS.",
      "size": 919,
      "sentences": 7
    },
    {
      "id": 39,
      "content": "m benefits and potential scalability of combi-\nstations in larger RMFS setups, further studies are recommended. === 페이지 14 ===\n14 Xie and Otten\nTable 1: Overview of the nodes in the networks of RMFS. Service Random Description\nNode State\nintensity variable (number of robots at time t)\nsp µ ·ϕ (n ) Y (t) n moving in the storage area to a pod\nsp sp sp sp sp\nmoving a pod from the storage area\npp µ ·ϕ (n ) Y (t) n\n1 pp1 pp1 pp1 pp1 pp1 to picking station 1\nmoving a pod from the storage area\npp µ ·ϕ (n ) Y (t) n\n2 pp2 pp2 pp2 pp2 pp2 to picking station 2\np ν Y (t) n in the queue of picking station 1\n1 p1 p1 p1\np ν Y (t) n in the queue of picking station 2\n2 p2 p2 p2\nmoving a pod from\np s µ ·ϕ (n ) Y (t) n picking station 1 to the storage area\n1 p1s r1s p1s p1s p1s\nand entering node 0\nmoving a pod from\np s µ ·ϕ (n ) Y (t) n picking station 2 to the storage area\n2 p2s r2s p2s p2s p2s\nand entering node 0\nmoving a pod\np r µ ·ϕ (n ) Y (t) n from picking station 1\n1 1 p1r1 p1r1 p1r p1r1 p1r1\nto the replenishment station 1\nmoving a pod\np r µ ·ϕ (n ) Y (t) n from picking station 2\n2 2 p2r2 p2r2 p2r2 p2r2 p2r2\nto the replenishment station 2\nin the queue\nr ν Y (t) n\n1 r1 r1 r1 of the replenishment station 1\nin the queue\nr ν Y (t) n\n2 r2 r2 r2 of the replenishment station 2\nmoving a pod\nfrom the replenishment station 1\nr s µ ·ϕ (n ) Y (t) n\n1 r1s r1s r1s r1s r1s to the storage area\nand entering node 0\nmoving a pod\nfrom the replenishment station 2\nr s µ ·ϕ (n ) Y (t) n\n2 r2s r2s r2s r2s r2s to the storage area\nand entering node 0\n=== 페이지 15 ===\nBibliography\n[1] Aldarondo, F. J. and Bozer, Y.",
      "size": 1601,
      "sentences": 3
    },
    {
      "id": 40,
      "content": "node 0\nmoving a pod\nfrom the replenishment station 2\nr s µ ·ϕ (n ) Y (t) n\n2 r2s r2s r2s r2s r2s to the storage area\nand entering node 0\n=== 페이지 15 ===\nBibliography\n[1] Aldarondo, F. J. and Bozer, Y. A. (2022). Expected distances and alterna-\ntive design configurations for automated guided vehicle-based order picking\nsystems. International Journal of Production Research, 60(4):1298–1315. [2] Boysen, N., Briskorn, D., and Emde, S. (2017). Parts-to-picker based order\nprocessing in a rack-moving mobile robots environment. European Journal of\nOperational Research, 262(2):550–562. [3] Boysen, N., De Koster, R., and Weidinger, F. (2019). Warehousing in\nthe e-commerce era: A survey. European Journal of Operational Research,\n277(2):396–411. [4] Canadilla, P. (2022). Analysis of queueing networks and models. Version\n0.2.12. [5] De Koster, R., Le-Duc, T., and Roodbergen, K. J. (2007). Design and con-\ntrol of warehouse order picking: A literature review.",
      "size": 957,
      "sentences": 17
    },
    {
      "id": 41,
      "content": "P. (2022). Analysis of queueing networks and models. Version\n0.2.12. [5] De Koster, R., Le-Duc, T., and Roodbergen, K. J. (2007). Design and con-\ntrol of warehouse order picking: A literature review. European Journal of\nOperational Research, 182(2):481–501. [6] De Koster, R. B., Le-Duc, T., and Zaerpour, N. (2012). Determining the\nnumberofzonesinapick-and-sortorderpickingsystem.InternationalJournal\nof Production Research, 50(3):757–771. [7] Gong, Y., Jin, M., and Yuan, Z. (2021). Robotic mobile fulfilment systems\nconsidering customer classes. International Journal of Production Research,\n59(16):5032–5049. [8] Lamballais, T., Roy, D., and De Koster, M. (2017). Estimating performance\nin a robotic mobile fulfillment system. European Journal of Operational Re-\nsearch, 256(3):976–990. [9] Lamballais Tessensohn, T., Roy, D., and De Koster, R. B. (2020). Inventory\nallocationinroboticmobilefulfillmentsystems. IISEtransactions,52(1):1–17.",
      "size": 943,
      "sentences": 20
    },
    {
      "id": 42,
      "content": "nal of Operational Re-\nsearch, 256(3):976–990. [9] Lamballais Tessensohn, T., Roy, D., and De Koster, R. B. (2020). Inventory\nallocationinroboticmobilefulfillmentsystems. IISEtransactions,52(1):1–17. [10] Otten,S.,Krenzler,R.,Xie,L.,Daduna,H.,andKruse,K.(2022). Analysis\nof semi-open queueing networks using lost customers approximation with an\napplicationtoroboticmobilefulfilmentsystems. ORspectrum,44(2):603–648. [11] Tompkins, J. A. (2010). Facilities planning. John Wiley & Sons, Hoboken,\nNJ and Chichester, 4th ed. edition. [12] Weidinger, F., Boysen, N., and Briskorn, D. (2018). Storage assignment\nwith rack-moving mobile robots in kiva warehouses. Transportation Science,\n52(6):1479–1495. [13] Xie, L., Li, H., and Luttmann, L. (2023). Formulating and solving inte-\ngratedorderbatchingandroutinginmulti-depotAGV-assistedmixed-shelves\nwarehouses. European Journal of Operational Research, 307(2):713–730. [14] Xie,L.,Thieme,N.,Krenzler,R.,andLi,H.(2021).",
      "size": 962,
      "sentences": 22
    },
    {
      "id": 43,
      "content": "lving inte-\ngratedorderbatchingandroutinginmulti-depotAGV-assistedmixed-shelves\nwarehouses. European Journal of Operational Research, 307(2):713–730. [14] Xie,L.,Thieme,N.,Krenzler,R.,andLi,H.(2021). Introducingsplitorders\nin integrated order picking problems in robotic mobile fulfillment systems. European Journal of Operational Research, 288(1):80–97. [15] Zou, B., Xu, X., De Koster, R., et al. (2018). Evaluating battery charging\nand swapping strategies in a robotic mobile fulfillment system. European\nJournal of Operational Research, 267(2):733–753.",
      "size": 556,
      "sentences": 9
    }
  ]
}