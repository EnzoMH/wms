{
  "source": "ArXiv",
  "filename": "004_Warehouse_Layout_Method_Based_on_Ant_Colony_and_Ba.pdf",
  "total_chars": 17036,
  "total_chunks": 25,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\nThis is the non-final version of the paper. The final version is published in the 14th IAPR International Conference on Quality in Research (QIR) on 18-22 May\n2015 (http://qir.eng.ui.ac.id/front/). All citation should be directed to the final version. Warehouse Layout Method Based on Ant Colony and\nBacktracking Algorithm\nArdy Wibowo Haryanto, Adhi Kusnadi, Yustinus Eko Soelistio\nInformatics Engineering Program\nFaculty of Information and Communication Technology, Multimedia Nusantara University\nBoulevard Raya 26, Gading Serpong, Banten\nwww.awh.tb1@gmail.com, adhikusnadi@yahoo.com, yustinus.eko@umn.ac.id\nAbstract—Warehouse is one of the important aspects of a II. THEORIES AND PREVIOUS STUDIES\ncompany. Therefore, it is necessary to improve Warehouse\nManagement System (WMS) to have a simple function that can A. Ant Colony Algorithm\ndetermine the layout of the storage goods.",
      "size": 896,
      "sentences": 6
    },
    {
      "id": 2,
      "content": "PREVIOUS STUDIES\ncompany. Therefore, it is necessary to improve Warehouse\nManagement System (WMS) to have a simple function that can A. Ant Colony Algorithm\ndetermine the layout of the storage goods. In this paper we propose ACA can be used as an alternative method to solve the\nan improved warehouse layout method based on ant colony optimization problem of space (Hambali: 2011). ACA is a\nalgorithm and backtracking algorithm. The method works on two\nparameter searching method that mimics the behavior of ant\nsteps. First, it generates a solutions parameter tree from\ncolony to looking for food.ACA works in two steps. In the\nbacktracking algorithm. Then second, it deducts the solutions\nfirst step, the search begins with the gradually searching each\nparameter by using a combination of ant colony algorithm and\nstate until a solution is found. The selection is based on the\nbacktracking algorithm.",
      "size": 902,
      "sentences": 9
    },
    {
      "id": 3,
      "content": "the search begins with the gradually searching each\nparameter by using a combination of ant colony algorithm and\nstate until a solution is found. The selection is based on the\nbacktracking algorithm. This method was tested by measuring the\ngreatest probability value of the pheromone trail and heuristic\ntime needed to build the tree and to fill up the space using two\ninformation contained in each state that calculated using the\nscenarios. The method needs 0.294 to 33.15 seconds to construct\nformula:\nthe tree and 3.23 seconds (best case) to61.41 minutes (worst case)\nto fill up the warehouse. This method is proved to be an attractive\nalternative solution for warehouse layout system. Keywords—warehouse layout; block stacking method; ant\ncolony algorithm; backtracking algorithm. where is the probability of choosing a state, is\nintensity of the pheromone trail for inter-state, is visibility\nI.",
      "size": 900,
      "sentences": 7
    },
    {
      "id": 4,
      "content": "ehouse layout; block stacking method; ant\ncolony algorithm; backtracking algorithm. where is the probability of choosing a state, is\nintensity of the pheromone trail for inter-state, is visibility\nI. PRELIMINARY\nof a solution that would selected by ant, α is parameter that\nWarehouse layout configuration problem is still an active\ncontrols the intensity of pheromone trail where α ≥ 0, β is\narea of research. One study conducted by Ahmad Hambali\nparameter that control the visibility where β ≥ 0. Pheromone\n(2011), proposes a warehouse layout method based on block\ntrail corresponds to the quality of the solutions that have been\nstacking and ant colony algorithm (ACA).The method works\nproduced by the ant from its prior movement, while heuristic\nby choosing the best combination that have been produced by\ninformation corresponds to the data input of a problem.",
      "size": 864,
      "sentences": 5
    },
    {
      "id": 5,
      "content": "(ACA).The method works\nproduced by the ant from its prior movement, while heuristic\nby choosing the best combination that have been produced by\ninformation corresponds to the data input of a problem. This\na group of ants that have chosen the route in stages based on\nsearching is gradually carried out by all ants in the colony (an\nthe value of the function of pheromones and heuristic\nant colony). information best. It can explore all the possibilities that exist\nand adjust for changes in real time. Unfortunately its The second step, the method select the best solution from\napplication limited by no categorization of goods and the a set of probable solutions that generated in the previous step. number and size of the goods has been known.",
      "size": 745,
      "sentences": 6
    },
    {
      "id": 6,
      "content": "d select the best solution from\napplication limited by no categorization of goods and the a set of probable solutions that generated in the previous step. number and size of the goods has been known. Another study The searching will be processed by all colony (the process is\nconducted by Liliana, Gregorius Satia Budhi, and Arief Abadi measured by the number of cycles).The best solution obtained\n(2010), propose a warehouse layout method based on from an ant colony will be compared with the best solution\nbacktracking algorithm (BA). The method work by checking obtained from another ant colony (other cycles). After each\neach of the possible solution to get the best solution based on cycle, the method recalculate the new pheromone trail in each\nthe similarity of category and availability. It can find the best state using the formula:\nsolution however it complex and needs a considerably long\nprocessing time.",
      "size": 916,
      "sentences": 6
    },
    {
      "id": 7,
      "content": "e the new pheromone trail in each\nthe similarity of category and availability. It can find the best state using the formula:\nsolution however it complex and needs a considerably long\nprocessing time. where is intensity of the pheromone trail for inter-state\nIt is the aim of this paper to suggest another warehouse\nandρ is constant evaporation of pheromone trail, 0 > ρ > 1.\nlayout method that based on ACA and BA that can work that\nis (1) fast, (2) works with multiple goods’ categories, (3) B. Backtracking Algorithm\nprovide the flexibility for the number and size of the goods. BA can be used as an alternative solution to solve goods\nThe outline of this paper is as follows. In section II we\nlayout problem in a parameter space (Liliana: 2010). convey the studies that have been conducted. Then in section\nArrangement begins with determining the location of the\nIII, we describe the proposed method. same goods as the new incoming goods to be placed.",
      "size": 954,
      "sentences": 8
    },
    {
      "id": 8,
      "content": "the studies that have been conducted. Then in section\nArrangement begins with determining the location of the\nIII, we describe the proposed method. same goods as the new incoming goods to be placed. If there\n=== 페이지 2 ===\nThis is the non-final version of the paper. The final version is published in the 14th IAPR International Conference on Quality in Research (QIR) on 18-22 May\n2015 (http://qir.eng.ui.ac.id/front/). All citation should be directed to the final version. are goods that have not been placed at this early stage, the trail deposited ( ).The default parameter for each node\nnext stage will be called in recursion manner. Backtracking is are , and with a value of zero, and . The visualisation\napplied when the solution has to be tracked back to its of the construction step can be seen in figure 3.\nprevious steps. BA has the advantages of its ability to obtain\nthe best results from a set of combinations by exhaustively\nsearching in all possible solution space.",
      "size": 980,
      "sentences": 10
    },
    {
      "id": 9,
      "content": "tion step can be seen in figure 3.\nprevious steps. BA has the advantages of its ability to obtain\nthe best results from a set of combinations by exhaustively\nsearching in all possible solution space. However, this\nalgorithm is not efficient because the search process could\ntake a long time when the search space is large. III. PROPOSED METHOD\nThe propose warehouse layout method consists of two\nsteps. First, the method constructs a solution tree using BA. Then second, it searches for the best solution using ACA and\nBA. A. TreeConstructionStep\nThe tree consists of five levels. The first level is the\ncategory of goods in warehouse layout (e.g. food, glassware,\nelectronic. The second level is the storage space which is\nmeasured in terms of blocks. The block is a three Fig. 2. Tree construction flowchart\ndimensional storage space (in Euclidean sense) that has\nB. Solution Searching Step\nlength x (third level), height y (fourth level), and width z\n(fifth level).",
      "size": 968,
      "sentences": 15
    },
    {
      "id": 10,
      "content": "hree Fig. 2. Tree construction flowchart\ndimensional storage space (in Euclidean sense) that has\nB. Solution Searching Step\nlength x (third level), height y (fourth level), and width z\n(fifth level). The size of all levels can predefine. It is To search the best fit solution from the tree, this method\ncommon that a binary tree structure is used as a solutions tree, employ ACA and BA in cascading manners.ACA was first\nhowever the binary structure will pose complexity problem used in the search process and BA as backup when ACA\nwhen the solutions form an unbalance tree. Therefore we cannot find a fit solution. Each ant will perform a search from\npropose to use a tree’s structure that each node has exactly the first to fifth level by tracking the amount of pheromone\nfive child nodes. trail and probability exists on the each node. If ACA can not\nfind a fit solution, then BA will be employed with leaf nodes\n(the solution does not fit the previously obtained) as a starting\npoint.",
      "size": 988,
      "sentences": 10
    },
    {
      "id": 11,
      "content": "s. trail and probability exists on the each node. If ACA can not\nfind a fit solution, then BA will be employed with leaf nodes\n(the solution does not fit the previously obtained) as a starting\npoint. ACA is used in this method provide the flexibility for the\nnumber of goods (the number of goods to be laid out\nunknown) and has only use one cycle. All node, except the root, are initialized by using the\nprobability of a number of possibilities existas follows:\nCategory Node\nBlock Node\nDescription,\n* = block volume that has the same category. Block Length (x) Node\nBlock Height (y) Node\nFig. 1. Five levels of tree Block Width (z) Node\nEach node in the tree stores the (1) name of the node, (2)\nnode binary status (0 = empty, 1 = full), (3) intensity of\nAn incoming goods is regarded as an ant.",
      "size": 796,
      "sentences": 7
    },
    {
      "id": 12,
      "content": "Five levels of tree Block Width (z) Node\nEach node in the tree stores the (1) name of the node, (2)\nnode binary status (0 = empty, 1 = full), (3) intensity of\nAn incoming goods is regarded as an ant. An ant will\npheromone trail for inter-state( ),(4) visibility of a solution\nmove from node i (the parent node) to node j (child nodes)\nthat would selected by ant ( , and (5)amount of pheromone\n=== 페이지 3 ===\nThis is the non-final version of the paper. The final version is published in the 14th IAPR International Conference on Quality in Research (QIR) on 18-22 May\n2015 (http://qir.eng.ui.ac.id/front/). All citation should be directed to the final version. based on the greatest probability value calculation results If found enough free space to put a goods, then the\nbased on the pheromone trail and heuristic information intensity of the pheromone trail for inter-state( ) and the\ncontained in each state.",
      "size": 910,
      "sentences": 5
    },
    {
      "id": 13,
      "content": "results If found enough free space to put a goods, then the\nbased on the pheromone trail and heuristic information intensity of the pheromone trail for inter-state( ) and the\ncontained in each state. amount of pheromone trail deposited ( ) for every edge\nthat is passed from the root node to a leaf node until to find a\nPrior to the movement from current node to one of its\nleaf node to be updated. In addition, update value with a\nchild nodes, do validation against the fifth child node whether\nvalue of one and visibility of a solution that would be chosen\nthe fifth child nodes and child nodes of the child nodes, and\nso on, have an empty space or not. If not, then value of the by ( with a value of zero for all leaf nodes that describe the\nnode and value of nodefrom current node changed to zero smallest unit of storage volume has been filled goods. and go up to the parent node of the current node.",
      "size": 905,
      "sentences": 5
    },
    {
      "id": 14,
      "content": "o for all leaf nodes that describe the\nnode and value of nodefrom current node changed to zero smallest unit of storage volume has been filled goods. and go up to the parent node of the current node. By\nchanging the value of nodefrom current node, then the\nprobability of election of the nodes become smaller. For the movement of ants from root node to category\nnode, do addition against value of the category node if the\ngoods that entered has the same category with the category\nnodes. If the goods category are not in accordance with all\nthe category node at first level, then the ants move to the\nparent node (added nodes) of the node category at second\nlevel, and so on. For the movement of ants from category node to block\nnode, do reduction against value of the block node to be\nzero if the goods that entered has the size (length, width,\nheight) or volume larger than the size or volume of the block\nnodes.",
      "size": 914,
      "sentences": 6
    },
    {
      "id": 15,
      "content": "node to block\nnode, do reduction against value of the block node to be\nzero if the goods that entered has the size (length, width,\nheight) or volume larger than the size or volume of the block\nnodes. If the size or volume of the goods do not conform to\nany size or volume block node at first level, then\nautomatically the ant moves to the parent node (added nodes) Fig. 4. Ant colony algorithm flowchart(global pheromone trail update)\nfrom block node at second level, and so on. If there is no\nC. Backtracking Algorithm Flowchart\nspace at all block nodes that has the same category, then in\nthe end the ants move towards the category node that have If ACA can not find a fit solution, then this method use\ndifferent categories from the category of goods that entered. BA as alternative with leaf nodes (thesolution does not fit the\nIf that happens, then the search process is stopped (space not previously obtained) as a starting point. Backtracking is done\nfound).",
      "size": 965,
      "sentences": 7
    },
    {
      "id": 16,
      "content": ". BA as alternative with leaf nodes (thesolution does not fit the\nIf that happens, then the search process is stopped (space not previously obtained) as a starting point. Backtracking is done\nfound). until obtain space to put the pieces of the goods or all nodes\nthat are in the same category have visited (there is not enough\nIf the divisor is zero (due all child node is zero), then\nfree space to put a goods). recalculate the divisor value by giving value for all child\nnodes with a default value of established, namely 0.1. Fig. 5. Backtracking algorithm flowchart\nIV. TEST AND COMPARISON\nThe method is tested using two scenarios. The first\nFig. 3. Ant colony algorithm flowchart scenario test the method using homogeneous goods size as\ninput set. The second scenario test the method using\nheterogeneous goods size as input set. === 페이지 4 ===\nThis is the non-final version of the paper.",
      "size": 890,
      "sentences": 14
    },
    {
      "id": 17,
      "content": "o test the method using homogeneous goods size as\ninput set. The second scenario test the method using\nheterogeneous goods size as input set. === 페이지 4 ===\nThis is the non-final version of the paper. The final version is published in the 14th IAPR International Conference on Quality in Research (QIR) on 18-22 May\n2015 (http://qir.eng.ui.ac.id/front/). All citation should be directed to the final version. In the first scenario, the number of category is determine\nwith . Each category has the number of block Graphs of The Average Processing Time and\nwhich determined with . The size of each block is Standard Deviation (The Size of Goods is\ndetermine with .The size of goods is Random)\ndetermine with .The method run until\n4000000\ngoods can no longer be accommodated. To finish the first\n3500000\nscenario, the method needs2.294 secondsto54.19 minutes\n3000000\nwith 100% space occupation.",
      "size": 890,
      "sentences": 9
    },
    {
      "id": 18,
      "content": "etermine with .The method run until\n4000000\ngoods can no longer be accommodated. To finish the first\n3500000\nscenario, the method needs2.294 secondsto54.19 minutes\n3000000\nwith 100% space occupation. 2500000\n2000000\nGraphs of The Average Processing Time and 1500000\nStandard Deviation (The Size of Goods is 1000000\nSame) 500000\n0\n3500000\n3000000 1 2 3 4 5 6 7 8 9 101112131415161718\n2500000\n2000000 Mean (s) STDEV\n1500000\n1000000 Fig. 7. Graphs of The Average Processing Time and Standard Deviation\n(The Size of Goods is Random)\n500000\n0\nFrom Fig. 7., it can be seen that the increase in the size of\n1 2 3 4 5 6 7 8 9 101112131415161718 the space causes a greater time process for process in the\narrangement of goods that have the random size. The\nMean (s) STDEV arrangement of goods with the same size and the arrangement\nof the goods with random sizes have a similiar time process\nFig. 6.",
      "size": 890,
      "sentences": 8
    },
    {
      "id": 19,
      "content": "the\narrangement of goods that have the random size. The\nMean (s) STDEV arrangement of goods with the same size and the arrangement\nof the goods with random sizes have a similiar time process\nFig. 6. Graphs of The Average Processing Time and Standard Deviation which indicates that this method can be used to arrange the\n(The Size of Goods is Same)\ngoods that have the same size and different sizes. The x-axis with index 1 to 18 describe the increase in the\nV. DISCUSSION\nsize of the space. The y-axis describe time process. An\nincrease in the size of the space is influenced by increasing The method has been tested and shows a promising result. the number of categories, the number of blocks, and the size The test from both scenarios show thatthe methodhas good\nof blocks. From Fig.",
      "size": 785,
      "sentences": 9
    },
    {
      "id": 20,
      "content": "ing The method has been tested and shows a promising result. the number of categories, the number of blocks, and the size The test from both scenarios show thatthe methodhas good\nof blocks. From Fig. 6., it can be seen that the increase in the level of speed and occupation, works with multiple goods’\nsize of the space causes a greater time process for process in categories, and provide the flexibility for the number and size\nthe arrangement of goods that have the same size of the goods. In the second scenario, the number of category is However, the performance of this method is still limited\ndetermine with . Each category has the number of due tothe size of the tree that greatly influence the\nperformance of search. Its usability is also still limited only\nblock which determined with . The size of each\nfor block and goods with square shape. block is determine with .The size of\ngoods is = random between 1 until 1/3 , = random\nVI.",
      "size": 941,
      "sentences": 9
    },
    {
      "id": 21,
      "content": "also still limited only\nblock which determined with . The size of each\nfor block and goods with square shape. block is determine with .The size of\ngoods is = random between 1 until 1/3 , = random\nVI. CONCLUSION\nbetween1 until 1/3 , = random between1 until 1/3 .In\nA new alternative warehouse layout approach based on\nthis scenario, the method needs 3.225 seconds to 61.41\nACA, BA, and block stacking method successfully applied in\nminutes to be completed. The occupation from this scenario\nthe goods layout application. This method combines the use\nis 97.19% to 100%. of BA and ACA, which in previous studies ACA used to\norganize a number of goods that have been known and BA\nused to manage the goods where it is possible to have\ndifferent categories (however it is complex and needs a\nconsiderably long processing time). It is fast, works with\nmultiple goods’ categories, and provides the flexibility for the\nnumber and size of the goods.",
      "size": 939,
      "sentences": 8
    },
    {
      "id": 22,
      "content": "categories (however it is complex and needs a\nconsiderably long processing time). It is fast, works with\nmultiple goods’ categories, and provides the flexibility for the\nnumber and size of the goods. For future development, exploring a new tree structure or\na data structure can be can be done to increase the processing\nspeed. The application can be modified to handle the block\nand goods in addition to the form of cubes and blocks. [표 데이터 감지됨]\n\n=== 페이지 5 ===\nThis is the non-final version of the paper. The final version is published in the 14th IAPR International Conference on Quality in Research (QIR) on 18-22 May\n2015 (http://qir.eng.ui.ac.id/front/). All citation should be directed to the final version. REFERENCES\n[1] A. Akbar Septiandri., “Implementasi Algoritma BFS\ndan DFS dalam Penyelesaian Toke Flip Puzzle,”\nMakalah IF3051 Strategi Algoritma, sem.1, 2012.",
      "size": 872,
      "sentences": 8
    },
    {
      "id": 23,
      "content": "should be directed to the final version. REFERENCES\n[1] A. Akbar Septiandri., “Implementasi Algoritma BFS\ndan DFS dalam Penyelesaian Toke Flip Puzzle,”\nMakalah IF3051 Strategi Algoritma, sem.1, 2012. [2] A. Fernandez, E. Handoyo, S.T., M.T., M. Somantri,\nS.T., M.T., “Pembangunan Aplikasi Penyusunan Jadwal\nKuliah Menggunakan Algoritma Semut”, Jurusan Teknik\nElektro, Fakultas Teknik, Universitas Diponegoro, 2009\n[3] A. Hambali, I. Prasetyaningrum, Y. Yuliana,“Sistem\nAlokasi Penyimpanan Barang pada Gudang,” EEPIS\nFinal Project, 2011. [4] A. Leksono, S. Sarwadi“Algoritma Ant Colony\nOptimization (ACO) untuk menyelesaikan Traveling\nSalesman Problem (TSP),”Universitas Diponegoro,\nSemarang, 2009.",
      "size": 697,
      "sentences": 4
    },
    {
      "id": 24,
      "content": "da Gudang,” EEPIS\nFinal Project, 2011. [4] A. Leksono, S. Sarwadi“Algoritma Ant Colony\nOptimization (ACO) untuk menyelesaikan Traveling\nSalesman Problem (TSP),”Universitas Diponegoro,\nSemarang, 2009. [5] I. Muthakiroh, F. Saptono, N. Hasanah, R. Wiryadinata,\n“Pemanfaatan Metode Heuristik Dalam Pencarian Jalur\nTerpendek Dengan Algoritma Semut dan Algoritma\nGenetik,” Seminar Nasional Aplikasi Teknologi\nInformasi (SNATI), 2007\n[6] Liliana, G. Satia Budhi, A. Abadi, “Sistem Inventori dan\nPengaturan Tata Letak Barang serta Visualisasinya,”\nJurusan Teknik Informatika, Fakultas Teknologi\nIndustri, Universitas Kristen Petra, Surabaya, 2010. [7] M. Dorigo, T.Stu¨tzle, Ant Colony Optimization. A\nBradford book.Massachusetts London: The MIT Press\nCambridge, 2004\n[8] S. Russel, P. Norvig, Artificial Intelligent A Modern\nApproach, Prentice Hall, 2009. [9] Teneng, J. Purwadi, E. Kurniawan, “Penerapan\nAlgoritma Backtracking pada Permainan Math\nMaze,”Jurnal Informatika, vol.6, no.1, April 2010.",
      "size": 992,
      "sentences": 6
    },
    {
      "id": 25,
      "content": "cial Intelligent A Modern\nApproach, Prentice Hall, 2009. [9] Teneng, J. Purwadi, E. Kurniawan, “Penerapan\nAlgoritma Backtracking pada Permainan Math\nMaze,”Jurnal Informatika, vol.6, no.1, April 2010. [10] U. Boryczka, Ant Clustering Algorithm. Poland:\nInstitute of Computer Science University of Silesia,\n2008.",
      "size": 310,
      "sentences": 4
    }
  ]
}