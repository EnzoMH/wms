{
  "source": "ArXiv",
  "filename": "038_SD-FFR__Software_Defined_Fast_Failure_Recovery_Mec.pdf",
  "total_chars": 44247,
  "total_chunks": 63,
  "chunks": [
    {
      "id": 1,
      "content": "=== 페이지 1 ===\n1\nSD-FFR: Software Defined Fast Failure Recovery\nMechanism in the Automatic Warehouse\nTing-Cian Bai and Chin-Ya Huang\nAbstract—Due to the rapid development of IoT technology, transmit message when fault occurs. When a link encounters\nautomatic guided vehicles (AGVs) interact with an industrial congestionorfailure,themessageexchangemayexperienceof\ncontrol system (ICS) through the wireless network to support\nlossordelaywhichinturnwouldintroduceincorrectdecision\nthefreightdistributionintheautomatedwarehouse.However,the\nmaking and significantly degrade the warehouse operation. message exchange among AGVs and the ICS would experience\nlarge packet loss or long transmission delay, in the presence of Specifically,toensuretheAGVsactuallyperformtherequired\nwireless network link failure and link congestion. Therefore, the tasks in the automatic warehouse, the interruption or long\nperformanceofwarehouseautomationwouldbedegraded.Inthis delay in message exchange is not allowed [5].",
      "size": 996,
      "sentences": 4
    },
    {
      "id": 2,
      "content": "ure and link congestion. Therefore, the tasks in the automatic warehouse, the interruption or long\nperformanceofwarehouseautomationwouldbedegraded.Inthis delay in message exchange is not allowed [5]. paper, we propose the Software Defined Fast Failure Recovery\nTo reliably and flexibly route traffic flows between the\n(SD-FFR)mechanism,aimingtoimprovenetworkreliabilityand\nAGVsandtheICS,inthispaper,weconsiderdual-bandWiFi\navoid link congestion caused by load unbalance. With SD-FFR,\nwhen link failure occurs, the SDN controller actively detects the accesspoints(APs)toformanetworkconsistingofwiredand\nlink failure within milliseconds, and then reroutes the affected wirelessconnectivitytoroutepackets.Specifically,APscreate\ntraffic flows accordingly. The proposed SD-FFR mechanism also awirelessmeshnetwork(WMN)[6]bywirelesslyconnecting\ntakes load balance into consideration in selecting routing paths\nwith each other.",
      "size": 919,
      "sentences": 5
    },
    {
      "id": 3,
      "content": "eate\ntraffic flows accordingly. The proposed SD-FFR mechanism also awirelessmeshnetwork(WMN)[6]bywirelesslyconnecting\ntakes load balance into consideration in selecting routing paths\nwith each other. Further, the software defined network (SDN)\nwhenanewtrafficflowjoinsorlinkfailureoccursinthenetwork. [7]isappliedinthenetworktodynamicallyroutetrafficflows\nThe evaluation results show that network performance can be\ntime efficiently improved. accordingtothenetworkstatus.SDNisanetworkarchitecture\ndecoupling the network control plane and the data plane of a\nIndex Terms—SDN, Fast Failure Recovery, Load Balance,\nswitch, and then a centralized SDN controller is introduced to\nWireless Mesh Network. control the packet forwarding in the whole network. In this\nway, the network management can be done globally. Consid-\nI.",
      "size": 818,
      "sentences": 8
    },
    {
      "id": 4,
      "content": "and then a centralized SDN controller is introduced to\nWireless Mesh Network. control the packet forwarding in the whole network. In this\nway, the network management can be done globally. Consid-\nI. INTRODUCTION\nering the integration of SDN and WMN, authors in [8] adopt\nTo support large number of mobile devices working in the the OpenWrt framework on the development board aiming to\nautomatic warehouse, WiFi is considered to provide network build the real network environment of SDN integration with\nservices [1] because of its low cost comparing to 4G/5G. In WMN architecture and determines the feasibility of SDN and\nthis way, the automatic guided vehicles (AGVs) in the auto- WMNoperationintherealnetworkenvironment.In[9],[10],\nmatic warehouse can easily communicate with the industrial authors integrate WMN and SDN so that modularized and\ncontrolsystem(ICS)toexchangemaintenancemessages,even flexible routing strategies can be provided through SDN. In\nwhen they are on the move.",
      "size": 986,
      "sentences": 7
    },
    {
      "id": 5,
      "content": "trial authors integrate WMN and SDN so that modularized and\ncontrolsystem(ICS)toexchangemaintenancemessages,even flexible routing strategies can be provided through SDN. In\nwhen they are on the move. For example, a wireless net- this way, the network performance can be enhanced because\nwork architecture, Industrial Automation-Factory Automation the strategies are designed to take advantages and eliminate\n(WIA-FA),isdesignedandimplementedinfactoryautomation the limitations of WMN by SDN. Wireless Mesh Software\n[1].Furthermore,someresearchesalsoplandifferentlytoreact Defined Networks (wmSDN) combines the SDN and WMN\nto different AGV usage scenarios in the industrial networks aims to balance traffic loads on each wireless link which in\nsuch as [2]. A flexible and reliable network is designed in the turn enhances the user performance [11].",
      "size": 847,
      "sentences": 5
    },
    {
      "id": 6,
      "content": "narios in the industrial networks aims to balance traffic loads on each wireless link which in\nsuch as [2]. A flexible and reliable network is designed in the turn enhances the user performance [11]. warehouse shuttle system by IEEE 802.15.4 to support dense In SDN, two types of failure recovery strategies, active\ngoodsplacementin[2].Authorsin[3]combinetheadvantages and passive strategy, are considered. On the other hand, the\nof two network architecture, wireless mesh network and the passive strategy reactively adjusts routing decisions when link\nenterprise network, to improve the performance of AGVs failure occurs, while the active strategy pre-deploys backup\nin transmitting unicast and multicast traffic. Specifically, the resourcesinthenetwork.Forexample,thesharedringmethod\nmesh capability is applied when applicable.",
      "size": 830,
      "sentences": 5
    },
    {
      "id": 7,
      "content": "he active strategy pre-deploys backup\nin transmitting unicast and multicast traffic. Specifically, the resourcesinthenetwork.Forexample,thesharedringmethod\nmesh capability is applied when applicable. Additionally, is proposed in [12] to reuse backup resources, aiming to\nexistingwirelesscommunicationtechnologiesareinvestigated cost effectively pre-deploying backup resources in TCAM. in satisfying the various latency and reliability requirements Although both recovery delay and the TCAM usage could\nof data transmission to assist the use cases of AGV and the be improved, the congestion may occurs in the post-recovery\nunmanned vehicle in industrial 4.0 [4]. Under this condition, network.Aparticularmethodoftheactiverecoverystrategyis\nthe messages are exchanged through wireless links in the net- also developed in [13] by using RESTful API to per-forward\nwork.However,alinkmaybecongestediftoomanymessages the redundant rules periodically.",
      "size": 943,
      "sentences": 5
    },
    {
      "id": 8,
      "content": "essages are exchanged through wireless links in the net- also developed in [13] by using RESTful API to per-forward\nwork.However,alinkmaybecongestediftoomanymessages the redundant rules periodically. Thus, the network services\nareforwardedthroughit.Ontheotherhand,alinkmayfailto can be actively recovered, when the fault occurs. However,\nthe backup rules are pushed periodically, therefore the failure\nT.-C.BaiandC.-Y.HuangarewiththeDepartmentofElectronicandCom-\nmay not be recovered immediately if the latest rules are not\nputer Engineering, National Taiwan University of Science and Technology,\nTaiwan. (e-mail:{M10802214,chinya}@gapps.ntust.edu.tw) pushed. On the other hand, in [14], a reactive failure recovery\n0202\nnuJ\n3\n]IN.sc[\n1v04020.6002:viXra\n=== 페이지 2 ===\n2\nmodule in multi-radio multi-channel software-defined WMNs\nis design and implemented to improve failure recovery time. However, authors do not consider the computation delay and\ncommunication delay in finding rerouting paths.",
      "size": 994,
      "sentences": 6
    },
    {
      "id": 9,
      "content": "ti-channel software-defined WMNs\nis design and implemented to improve failure recovery time. However, authors do not consider the computation delay and\ncommunication delay in finding rerouting paths. Authors in\n[15] utilize dual-band connectivity of an AP to enhance the\nfailure recovery efficiency. However, the performance may be\nlimited,becausetheAPtakescareofthelinkfailuredetection\nand recovery in addition to packet forwarding. Further, load\nbalance is not considered in the post-recovery network. To provide a flexible failure recovery scheme, this paper\nadopts the passive strategy for the failure recovery. However,\nthe computational complexity in calculating a rerouting path\nand the overhead in message exchange between the SDN\ncontrollerandswitcheswouldlimittherecoveryperformance. In[16],authorsdevelopthelocalfastreroutealgorithm(LFR)\nscheme for traffic aggregation when it occurs link failure.",
      "size": 908,
      "sentences": 8
    },
    {
      "id": 10,
      "content": "sage exchange between the SDN\ncontrollerandswitcheswouldlimittherecoveryperformance. In[16],authorsdevelopthelocalfastreroutealgorithm(LFR)\nscheme for traffic aggregation when it occurs link failure. If link failure is detected in the LFR, all flow aggregate\nto a single flow and deploy rerouting paths by the SDN\ncontroller in order to minimize the utilization of flow entries. But, authors do not consider the load balance which might Fig. 1: Illustration of SDN assisted wireless network in the\nintroduce congestion in post-recovery condition. A Priority- automatic warehouse. based flow control (PFC) is proposed in [17] by designing a\nvariety of flow priorities to reduce the flow processing delay\nbetween the SDN controller and switches. However, LFR is APsaredeployedinthenetworktoprovidethewirelessserver\nnot mainly designed to support reliability.",
      "size": 856,
      "sentences": 8
    },
    {
      "id": 11,
      "content": "riorities to reduce the flow processing delay\nbetween the SDN controller and switches. However, LFR is APsaredeployedinthenetworktoprovidethewirelessserver\nnot mainly designed to support reliability. totheAGVsviathe2.4GHzfrequencyband.AllAPsconnect\nIn this paper, we propose a Software Defined Fast Failure to the gateway through the Ethernet, and two APs in the\nRecovery (SD-FFR) mechanism to adaptively route traffic network connects with each other via the 5 GHz wireless link\nflows in the network. With SD-FFR, the SDN controller to form a wireless mesh network. In this way, each AGV can\nutilizestheavailablelinkbandwidthtomakeroutingdecisions communicatewiththeICSviathegatewayalongthe2.4GHz\nwhen network condition changes. Four modules, “network wireless link and the Ethernet.",
      "size": 784,
      "sentences": 6
    },
    {
      "id": 12,
      "content": "AGV can\nutilizestheavailablelinkbandwidthtomakeroutingdecisions communicatewiththeICSviathegatewayalongthe2.4GHz\nwhen network condition changes. Four modules, “network wireless link and the Ethernet. Each AGV can also communi-\nresource monitoring module”,“link weight management mod- cate with others for collaboration along the 2.4 GHz wireless\nule”,“routingdecisionmodule”and“failurerecoverymodule” link and the 5 GHz wireless mesh connectivity. Moreover,\nare introduced and integrated carefully in SD-FFR. When a following the OpenFlow protocol [18], each AP connects to\nnew flow joins the network, the SDN controller updates the the SDN controller through the Ethernet, coordinates with the\nlink weights according to the available link bandwidth, before SDNcontrollertosupportpackettransmissioninthenetwork.",
      "size": 811,
      "sentences": 5
    },
    {
      "id": 13,
      "content": "ntroller updates the the SDN controller through the Ethernet, coordinates with the\nlink weights according to the available link bandwidth, before SDNcontrollertosupportpackettransmissioninthenetwork. makingroutingdecisionsaimingtoavoidlinkcongestion.The\nHowever, since AGVs may not uniformly distributed in\nSDN controller also updates the link weights after link failure\nthe network, the link congestion may occur when the traffic\nrecovered. Moreover, to time efficiently recover link failure,\nload on a link is too heavy. In this way, the end-to-end data\nthe SDN controller maintains two type of flow entries, high-\ntransmission between the AGVs and the control system may\npriority flow entries and low-priority flow entries implying a\nexperience long delay or packet loss. On the other hand, the\nbackuproutingpathofeachtrafficflowisselectedintheSDN\nconnection of a link may fail and then packets forwarding\ncontroller beforehand.",
      "size": 931,
      "sentences": 5
    },
    {
      "id": 14,
      "content": "ng a\nexperience long delay or packet loss. On the other hand, the\nbackuproutingpathofeachtrafficflowisselectedintheSDN\nconnection of a link may fail and then packets forwarding\ncontroller beforehand. When a link fails, the SDN controller\nthrough the link cannot be delivered to the corresponding\nimmediately provides rerouting information to the network,\ndestinationssuccessfully.Morespecifically,wefocusonover-\nbasedonthelinkfailureinformationandthehigh-priorityflow\ncoming the following two problems in degrading the network\nentries.Hence,theproposedSD-FFRnotonlytimeefficiently\nperformance in this paper:\nrecovers link failure but also better balances traffic loads in\nthe network. The remainder of this paper is organized as follows. Sec-\ntion II presents system architecture. Section III describes the Problem 1: Link Failure\nmethod proposed in this paper.",
      "size": 861,
      "sentences": 6
    },
    {
      "id": 15,
      "content": "loads in\nthe network. The remainder of this paper is organized as follows. Sec-\ntion II presents system architecture. Section III describes the Problem 1: Link Failure\nmethod proposed in this paper. Section IV and V shows\nthe implementation in commercial APs and the experimental When the Ethernet link failure occurs between the ICS\nresults, respectively. We conclude this paper in Section VI. and an AP, the ICS and the corresponding AGVs cannot\nexchange messages with each other which cause incorrect\noperations of the AGVs. The performance in collaboration\nII. SYSTEMARCHITECTURE\namong AGVs may degrade when the link failure occurs at a\nA. System Description\n5GHzwirelesslinkconnectingtwoAPswhichinturncauses\nFig. 1 illustrates the SDN assisted wireless network in the thelossofdeliveringthesynchronizationmessagesamongthe\nautomaticwarehouse.SeveralSDNenableddual-bandwireless collaborated AGVs.",
      "size": 899,
      "sentences": 11
    },
    {
      "id": 16,
      "content": "inturncauses\nFig. 1 illustrates the SDN assisted wireless network in the thelossofdeliveringthesynchronizationmessagesamongthe\nautomaticwarehouse.SeveralSDNenableddual-bandwireless collaborated AGVs. === 페이지 3 ===\n3\nProblem 2: Link Congestion\nTypically, routing paths are chosen according to the min-\nimum number of hops. However, each AGV moves dynami-\ncallyinthewarehousesothatteachAPmayservesignificantly\ndifferent amount of AGVs for packet transmission. Under this\ncircumstance, the traffic congestion may occur at some links\nwhentheloadonthatlinkisheavy.Moreover,inthepresence\nof link failure, some flows are rerouted in order to sustain\nthe message exchange between the ICS and some AGVs or\nexchange among the collaborated AGVs. As a consequence,\nsomeAPswoulddegreadetheperformanceinforwardingboth\nthe current traffic flows and the rerouted flows simultaneously\ndue to the limited link bandwidth.",
      "size": 902,
      "sentences": 6
    },
    {
      "id": 17,
      "content": "ge among the collaborated AGVs. As a consequence,\nsomeAPswoulddegreadetheperformanceinforwardingboth\nthe current traffic flows and the rerouted flows simultaneously\ndue to the limited link bandwidth. In this way, the goal of this paper is to utilize SDN to\ndesign a scheme to reliably and efficiently route packets in\nFig. 2: Network model. the network. To focus on addressing the above mentioned\nproblems,weinfurthermodelthenetworkasshowninFig.2\nand introduce several parameters to ease of this description of\nswitchH (t),theprocessingtimeofthecontrollerH (t),and\nthe rest of the paper. s c\nthe communication delay between the controller and switch\nRTT (t). Moreover, when link failure occurs at L(u,v),\ns,c\nB. Network Model we set link capacity as zero, Ct,b = 0. Then, the total\nLsc(u,v)\nWe consider a network model presented in Fig.",
      "size": 836,
      "sentences": 10
    },
    {
      "id": 18,
      "content": "r and switch\nRTT (t). Moreover, when link failure occurs at L(u,v),\ns,c\nB. Network Model we set link capacity as zero, Ct,b = 0. Then, the total\nLsc(u,v)\nWe consider a network model presented in Fig. 2 which is number of traffic flows and the traffic loads on L(u,v) are\ntreatedasanundirectedgraphG(V,E).InthegraphG(V,E), also zero, since no flows could forwarded on L(u,v). We\nwe denote n as the node, any APs or the gateway (GW), V have |TLt,b | = 0 and TRt,b = 0. Consequently,\nLsc(u,v) Lsc(u,v)\nas the set of nodes, and E as the set of links. Two types of the problem can be formulated as\nlinks,Ethernetand5GHzwirelessconnectionareavailablein\nmin(Load(t)+RD(t))\nthe topology. The GW and each AP connects with each other\nthrough the Ethernet link. Each AP connects with each other s.t. through the 5 GHz wireless link, and the 5 GHz connectivity\nmax|TLt,b(u,v)|\nforms a wireless mesh network.",
      "size": 895,
      "sentences": 11
    },
    {
      "id": 19,
      "content": "AP connects with each other\nthrough the Ethernet link. Each AP connects with each other s.t. through the 5 GHz wireless link, and the 5 GHz connectivity\nmax|TLt,b(u,v)|\nforms a wireless mesh network. Furthermore, we denote the Load(t)= L ,L(u,v)∈E\nlink to be L(u,v) ∈ E, and u, v ∈ V denote any of the avg( (cid:80) L(u,v)∈E |TLt L ,b (u,v) |)\nadjacent nodes in the topology. The link bandwidth at time t\nRD(t)=H (t)+H (t)+RTT (t)\nisdenotedtobeCt,b ,wherebissettobe1and0,ifthelink s c s,c\nL(u,v)\niscreatedbywirelessandwiredmedium,respectively.Hence, Ct,b ≥Rt,b ≥TRt,b ,∀L(u,v)∈E, b∈{0,1}\nL(u,v) L(u,v) L(u,v)\nCt,1(u,v) isthe capacityof5 GHzwirelesslink betweentwo\nA L Ps and Ct,0(u,v) is the wired link between an AP and the The objective function min(Load(t) + RD(t)) aims at\nL minimizing the maximal traffic loads on a link and the failure\nGW. Moreover, the traffic flow sending from a source node\nrecovery delay.",
      "size": 915,
      "sentences": 6
    },
    {
      "id": 20,
      "content": "and the The objective function min(Load(t) + RD(t)) aims at\nL minimizing the maximal traffic loads on a link and the failure\nGW. Moreover, the traffic flow sending from a source node\nrecovery delay. Thus, traffic flows would be time efficiently\ns to a destination node d via this network is denoted as f . s,d\nrerouted without introducing additional link congestion, when\nSince more than one traffic flows may share L(u,v) to the\na traffic flow joins the network or a link failure occurs at time\ncorrespondingdestinations,thetotalamountofthetrafficloads\non L(u,v) is denoted as TRt,b , where b is set to be 1 t.\nL(u,v) Additionally, TABLE I summarizes the definition of all the\nand 0 for wireless and wired link, respectively. We in further\ndenote the residual bandwidth on L(u,v) to be Rt,b , and network parameters using in this paper. L(u,v)\nRt,b = Ct,b −TRt,b , where b is set to be 1 and\nL(u,v) L(u,v) L(u,v) III.",
      "size": 918,
      "sentences": 6
    },
    {
      "id": 21,
      "content": "tively. We in further\ndenote the residual bandwidth on L(u,v) to be Rt,b , and network parameters using in this paper. L(u,v)\nRt,b = Ct,b −TRt,b , where b is set to be 1 and\nL(u,v) L(u,v) L(u,v) III. SOFTWAREDEFINEDFASTFAILURE\n0, if the link is created by wireless and wired connection,\nRECOVERY(SD-FFR)MECHANISM\nrespectively. Moreover, the total number of traffic flows on\nL(u,v) is denoted as |TLt,b |,b ∈ {0,1}. Specifically, Inthispaper,weutilizeSDNandthenproposetheSoftware\nL(u,v)\nTLt,b is denoted to be the set flows routed through each Defined Fast Failure Recovery (SD-FFR) mechanism to time\nL(u,v) efficiently react to the change of network status by condi-\nlink on the network. tionally reroute traffic flows. With SD-FFR, the performance\ndegradation resulted from link failure and link congestion in\nC. Problem Formulation\nthe SDN assisted wireless network can be solved.",
      "size": 882,
      "sentences": 8
    },
    {
      "id": 22,
      "content": "ork. tionally reroute traffic flows. With SD-FFR, the performance\ndegradation resulted from link failure and link congestion in\nC. Problem Formulation\nthe SDN assisted wireless network can be solved. In this way,\nTo deal with the dynamical change of traffic loads as well the reliability and load balance can be properly sustained in\nas the link failure in the network, we design a cost function, the network. We denote Load(t) to be the maximum load of a link in the Fig. 3 shows the architecture of integrating the proposed\nnetworkandRD(t)tobefailurerecoverydelay.Therecovery SD-FFR mechanism into existing SDN architecture. Specif-\ndelaydependsonthesummationoftheprocessingtimeofthe ically, the proposed SD-FFR mechanism is implemented in\n=== 페이지 4 ===\n4\nTABLE I: Parameter\nA. Network Resource Monitoring Module\nNotation Description To effectively utilize the available link bandwidth in the\nnetwork, the “network resource monitoring module” collects\nG(V,E) Thegraphofthenetworktopology.",
      "size": 990,
      "sentences": 8
    },
    {
      "id": 23,
      "content": "ource Monitoring Module\nNotation Description To effectively utilize the available link bandwidth in the\nnetwork, the “network resource monitoring module” collects\nG(V,E) Thegraphofthenetworktopology. L(u,v) Thelinkbetweennodeuandnodev. the information of the available link bandwidth in data plane,\nTR L t, ( b u,v) TrafficloadspassthroughL(u,v)atttimeinstant. when a traffic flow f s,d joins the network. Then, the collected\nn denotetheOpenFlowdevice. informationispassedtothe“linkweightmanagementmodule”\nLsc(u,v) Thelinkwithstatechangebetweennodeuandv. for further processing. b bisaBinaryvalue,b=1denotethewirelessmesh\nAlg. 1 describes the operation of the “network resource\nlinkandifb=0denotetheEthernetlink. C L t, ( b u,v) d C e 1 no d t e e n t o h t e e E th t e he W rl i i r n e k les c s ap M ac e i s t h y l a i t nk tt c i a m p e ac i i n ty sta a n n t d . C0 m th o e n c it u o r r r i e n n g t m re o si d d u u l a e l ”.",
      "size": 942,
      "sentences": 11
    },
    {
      "id": 24,
      "content": "e e n t o h t e e E th t e he W rl i i r n e k les c s ap M ac e i s t h y l a i t nk tt c i a m p e ac i i n ty sta a n n t d . C0 m th o e n c it u o r r r i e n n g t m re o si d d u u l a e l ”. li T n h k e b m an a d in w p id u t r h p , o d se en o o f ti A ng lg. as 1 R is t t , o b upd , a b t y e\nR L t, ( b u,v) ResiduallinkcapacityofL(u,v)atttimeinstant. collectingthetrafficloadsoneachlink,denotingasT L( R u, t v ,b ) ,\nW TheweightofL(u,v). L(u,v)\nL(u,v) of the network, when a new flow joins the network. In this\nW TheweightofstatechangeL(u,v). Q b Lsc(u,v) Q1 denote the adjustable value for Wireless Mesh way, the updated R L t,b (u,v) can be used in “routing decision\nlink, and Q0 denote the adjustable value for Ether module” for routing decision making. In Alg. 1, when a new\nlink. flow joins the network. f\ns,d\nTrafficdemandfromnodestonoded. P fs,d Pathoftrafficdemandf s,d. TLt L , ( b u,v) The set of f s,d pass through the link L(u,v) at t Alg.",
      "size": 970,
      "sentences": 14
    },
    {
      "id": 25,
      "content": "ing. In Alg. 1, when a new\nlink. flow joins the network. f\ns,d\nTrafficdemandfromnodestonoded. P fs,d Pathoftrafficdemandf s,d. TLt L , ( b u,v) The set of f s,d pass through the link L(u,v) at t Alg. 1: Network Resource Monitoring Module\ntimeinstant. ALt L , s b c(u,v) T lin h k e L se s t c( o u f , f v s ) ,d at a t ffe ti c m te e d in b s y ta f n a t u . lt pass through the 1 2 : : S If D f N s,d co jo n i t n ro s ll t e h r e m ne o t n w it o o r r k s t T h R en L t,b (u,v) , ∀ L(u,v)∈E. FR fs,d High-priorityforwardingrule. 3: Forall ∀ L(u,v)∈E do\nFR P fs H ,d Low-priorityforwardingrule. 4: Rt,b :=Ct,b −TRt,b\nPL L(u,v) L(u,v) L(u,v)\nend\nend\n5: Back to line 1\nthe SDN controller. Following the OpenFlow protocol, the\nnetwork status can be delivered through the Southbound API\nfrom the APs to the controller. The routing decisions are also\nB. Link Weight Management Module\ndelivered from the controller to the APs via the Southbound\nAPI.",
      "size": 952,
      "sentences": 16
    },
    {
      "id": 26,
      "content": "e delivered through the Southbound API\nfrom the APs to the controller. The routing decisions are also\nB. Link Weight Management Module\ndelivered from the controller to the APs via the Southbound\nAPI. In this way, packets can be adaptively routed in the To balance traffic loads in the network, the link weight\nnetwork according to the network conditions. As illustrated in managementmodulemaintainstheweightofeachlink.Specif-\nFig. 3, four modules consist of the SD-FFR mechanism, and ically, we introduce two parameters, W and W(cid:48) ,\nL(u,v) L(u,v)\nthey are “network resource monitoring module”, “link weight which are denoted to be the weights in the normal net-\nmanagementmodule”,“routingdecisionmodule”and“failure work state and the post-recovery network state, respectively. recovery module”.",
      "size": 800,
      "sentences": 7
    },
    {
      "id": 27,
      "content": "link weight which are denoted to be the weights in the normal net-\nmanagementmodule”,“routingdecisionmodule”and“failure work state and the post-recovery network state, respectively. recovery module”. The normal network state implies no link failure occurs\nwhile the post-recovery network state implies the flows for-\nwardedthroughfailedlinkshavebeenrecovered.Furthermore,\nW is updated according to the link capacity usage, and\nL(u,v)\nW(cid:48) is adjusted based on traffic demands on each link. L(u,v)\n• Link weight in normal network state:\nα(CL t, ( b u,v)−RL t, ( b u,v))\nW L(u,v) :=Q b ×e CL t, ( b u,v) , b∈{0,1} (1)\nThelinkweightinthenormalnetworkstateiscalculated\naccording to (1). The link weight is applied for making\nrouting decisions to balance traffic flows and prevent\ntraffic congestion in the network. Hence, the available\nCt,b −Rt,b\nbandwidth on each link, L(u,v) L(u,v).",
      "size": 886,
      "sentences": 6
    },
    {
      "id": 28,
      "content": "The link weight is applied for making\nrouting decisions to balance traffic flows and prevent\ntraffic congestion in the network. Hence, the available\nCt,b −Rt,b\nbandwidth on each link, L(u,v) L(u,v). Further, two\nCt,b\nL(u,v)\nparameters Q and α are set to increase the probability\nb\nin selecting the wired link for data transmission aiming\nto utilize the large link bandwidth of the Ethernet which\nis usually larger than the 5 GHz wireless link. The Q is\nb\nin further set as 0<2Q <1 and Q +Q =1. 0 0 1\n• Link weight in post-recovery network state:\nFig. 3: The architecture of SD-FFR mechanism. W (cid:48) :=e|TLt L , ( b u,v) | (2)\nL(u,v)\n=== 페이지 5 ===\n5\nThe link weight in the post-recovery is calculated ac- Alg. 3: Routing Decision Module\ncording to (2).",
      "size": 755,
      "sentences": 8
    },
    {
      "id": 29,
      "content": "e architecture of SD-FFR mechanism. W (cid:48) :=e|TLt L , ( b u,v) | (2)\nL(u,v)\n=== 페이지 5 ===\n5\nThe link weight in the post-recovery is calculated ac- Alg. 3: Routing Decision Module\ncording to (2). The link weight is applied for making 1: Input: Traffic demand f s,d\nrouting decisions to in further balance traffic loads, after 2: Output: Routing decision\nthelinkfailurerecovery.Totimeefficientlyadjustthelink 3: If f s,d joins the network then\nweighttoassistthefastfailoverandtheloadbalance,only 4: Forall L(u,v)∈E do\ntotalnumberoftrafficdemandsoneachlink,|TLt L ,b (u,v) |, 5: Run Alg. 2\nis considered for the link weight calculation, instead of end\nconsidering the traffic loads on each link as (1). In this 6: Find the shortest path P fs,d on G(V,E).",
      "size": 756,
      "sentences": 6
    },
    {
      "id": 30,
      "content": "k,|TLt L ,b (u,v) |, 5: Run Alg. 2\nis considered for the link weight calculation, instead of end\nconsidering the traffic loads on each link as (1). In this 6: Find the shortest path P fs,d on G(V,E). w w co a e n y ig t , r h o n t l o c m t a e o n s n s b l a y e g r e t e h s d e b u t e c i t e m w d e e , e t s h n p e e A n t P i d m s in e a g n s d p in e t n h c d e a i l n c c g o u n l i a t n r ti o n e l x g le c r h th a c e n an g li i n n b k g e 7 8 : : I T n L st t L a ,b l ( l u, r v u ) le := F T R L P fs t L L , , d b (u t ,v o ) n ∪ , f ∀ s, n d , ∈ ∀ P L f ( s u ,d ,v)∈P fs,d\navoided. 9: Return P fs,d\n10: Else if f s,d leaves the network then\nule T ” he is de d t e a s i c l r o ib p e e d rat i i n on A o l f g. th 2 e . “ W lin h k en we t i h g e ht n m et a w n o a r g k em st e a n r t ts m , o th d e - 11: TLt L ,b (u,v) :=TLt L ,b (u,v) \\f s,d ,∀ L(u,v)∈E\nend\nlink weight, W , is initialized as Q .",
      "size": 940,
      "sentences": 6
    },
    {
      "id": 31,
      "content": "f g. th 2 e . “ W lin h k en we t i h g e ht n m et a w n o a r g k em st e a n r t ts m , o th d e - 11: TLt L ,b (u,v) :=TLt L ,b (u,v) \\f s,d ,∀ L(u,v)∈E\nend\nlink weight, W , is initialized as Q . As long as a new\nL(u,v) b\nflow joins the network, W is updated according to the\nL(u,v)\nlink bandwidth utilization. On the other hand, the link wight 1. TLt,b :WedenoteTLt,b asthesetoftrafficflows\nafter link failure recovery, W(cid:48) , is calculated based on the L(u,v) L(u,v)\nL(u,v) on the L(u,v) in the network. The set is updated as long\nnumber of flows on L(u,v). as a traffic flow joins or leaves the network. Also, it is\nupdated when the path of a traffic flow changes. Alg. 2: Link Weight Management Module 2. ALt,b : We denote ALt,b as the set of traf-\n1: If Network initialization then fic L fl s o c w (u s ,v o ) n the failure link L L sc(u ( , u v) ,v) in the network.",
      "size": 881,
      "sentences": 11
    },
    {
      "id": 32,
      "content": "2: Link Weight Management Module 2. ALt,b : We denote ALt,b as the set of traf-\n1: If Network initialization then fic L fl s o c w (u s ,v o ) n the failure link L L sc(u ( , u v) ,v) in the network. sc\n2: W L(u,v) :=Q b ALt,b records the traffic flows that need to be\n3: Else if Normal network state then rero L u s t c e ( d u, d v u ) etotheoccurrenceofthelinkfailure.Specifi-\nα(Ct,b −Rt,b )\n4: W L(u,v) :=Q b ×exp( L(u C ,v t, ) b L(u,v) ) cally, when the controller receives a packet with a LINK\nL(u,v) REMOVED message, it records the traffic demand af-\n5: Else if Post-recovery network state then\n6: W(cid:48) :=exp(|TLt,b |) fected by the failure link L sc (u,v). The set is also\nL(u,v) L(u,v) updated when the controller receives a packet with a\nend\nLINK ADD message. Alg. 4 describes the operation of the“ failure recovery\nmodule”.",
      "size": 840,
      "sentences": 6
    },
    {
      "id": 33,
      "content": "the failure link L sc (u,v). The set is also\nL(u,v) L(u,v) updated when the controller receives a packet with a\nend\nLINK ADD message. Alg. 4 describes the operation of the“ failure recovery\nmodule”. When the controller receives a LINK REMOVED\nC. Routing Decision Module\nmessage, it gets the information of the traffic flows affected\nWhenthetrafficdemandsjointhenetwork,thelinkweights by L (u,v) in the TLt,b . Then, the weight of L (u,v)\nare firstly updated, and then the “routing decision module” sc L(u,v) sc\nis set to be infinity. Before calculating a backup path for\nadjusts the routing path based on the Dijkstra algorithm [19] each traffic flow affected by a failed link, the weights W(cid:48) for\nas well as installs the forwarding rule to the corresponding\nlinks other than the failed link based on (2) so that a lightly\nAPs to create the routing path for the new joining flow f . s,d loaded backup path can be picked for rerouting. Further, the\nAlg.",
      "size": 958,
      "sentences": 9
    },
    {
      "id": 34,
      "content": "nding\nlinks other than the failed link based on (2) so that a lightly\nAPs to create the routing path for the new joining flow f . s,d loaded backup path can be picked for rerouting. Further, the\nAlg. 3 describes the process of “routing decision module”. SDN controller installs the high priority flow entries FR\nfs,d\nWhen f s,d joins the network, considering the updated link on the nodes of the backup path aiming to replace the l P o H w\nweights through the Alg. 2, the routing path P fs,d in forward- priority flow entries FR fs,d. Then, two corresponding sets\ning data of f s,d is calculated through the Dijkstra algorithm. TLt,b andALt,b P ar L eupdatedinfurther.Moreover,the\nThen,theSDNcontrolleraddsthelow-priorityforwardingrule L(u,v) Lsc(u,v)\nFR\nfs,d\nto the corresponding nodes on path P . Moreover,\nSDN controller directly installs the high priority flow entries,\nPL fs,d denoted as FR fs,d.",
      "size": 901,
      "sentences": 9
    },
    {
      "id": 35,
      "content": "addsthelow-priorityforwardingrule L(u,v) Lsc(u,v)\nFR\nfs,d\nto the corresponding nodes on path P . Moreover,\nSDN controller directly installs the high priority flow entries,\nPL fs,d denoted as FR fs,d. In this way, the latency of transmitting\nthisalgorithmmaintainsthesetflowsroutedthrougheachlink PH\non the network which is denoted as TLt,b . Specifically, the Delete flow operation message can be reduced. The delay\nL(u,v) in installing new flow entries can also be reduced because\nTLt,b is managed to assist the operation of “failure recov-\nL(u,v) the SDN controller does not need to transmit the Modify\nery module”. flow operation message and the communication in obtaining\nflowentriesinformationfromthenodesinthenetworkcanbe\nD. Failure Recovery Module avoided.",
      "size": 763,
      "sentences": 6
    },
    {
      "id": 36,
      "content": "ler does not need to transmit the Modify\nery module”. flow operation message and the communication in obtaining\nflowentriesinformationfromthenodesinthenetworkcanbe\nD. Failure Recovery Module avoided. The “failure recovery module” takes care of adjusting the When the controller receives the packet with LINK ADD\nlink weights based on (2) to find backup path and executing message, it checks ALt,b to find the traffic flows routed\nLsc(u,v)\nfast rerouting to time efficiently recover the data transmission through their backup paths and then update the residual\nof the affected flows, when link failure occurs. Additionally, bandwidthofthosefollowsbyAlg.1.Asaresult,thoseflows\nthe“failurerecoverymodule”carefullysetsthepriorityofflow can be rerouted by executing Alg. 3. Furthermore, both the\nentries and the timing installing or removing forwarding rules TLt,b and ALt,b are updated, and the FR fs,d of the\nL(u,v) Lsc(u,v) PH\nto improve the recovery efficiency.",
      "size": 960,
      "sentences": 6
    },
    {
      "id": 37,
      "content": "Alg. 3. Furthermore, both the\nentries and the timing installing or removing forwarding rules TLt,b and ALt,b are updated, and the FR fs,d of the\nL(u,v) Lsc(u,v) PH\nto improve the recovery efficiency. Specifically, two sets are correspondingnodesaredetected.Notethatthepriorityofthe\nmaintained in this module. new flow entries FR\nfs,d\nis lower than the priority of backup\nPL\n=== 페이지 6 ===\n6\nflow entries FR\nfs,d. Therefore, f is firstly matched by the mechanism initializes the link weights by Alg. 2. In addition,\nPH s,d\nbackup flow entries, FR fs,d, before the FR fs,d is deleted. the Alg. 2 is executed to manage the link weights in the\nAfter the installation of th\nP\ne\nH\nlow priority flow e\nP\nn\nH\ntries, FR\nfs,d, network. Following the Alg. 2, information of residual link\nPL bandwidth is updated by Alg. 1. Simultaneously, the routing\non the corresponding node in the network, the unnecessary\nbackupflowentries,FR\nfs,d,aredeleted.Throughthisprocess, decisions can be made through Alg.",
      "size": 988,
      "sentences": 14
    },
    {
      "id": 38,
      "content": "is updated by Alg. 1. Simultaneously, the routing\non the corresponding node in the network, the unnecessary\nbackupflowentries,FR\nfs,d,aredeleted.Throughthisprocess, decisions can be made through Alg. 3, when a traffic flow\nPH joins the network. When the failure occurs, SD-FFR performs\nthe forwarding path can be switched without the delay of\nAlg. 4 for failure recovery processing. transmitting delete flow instruction from the SDN controller\nto the corresponding nodes in the network. More specifically,\nthe process of LINK ADD makes routing decisions with\nthe assistance of Alg.1 and Alg.3 without worrying about\nthe reroute speed and the communication delay between the\ncontroller and the switch. In this way, the delay in message\nexchange between the controller and the APs as well as in\ncomputing alternative routes can be decreased. Further, the\nefficiency of load balancing can also be improved. Fig. 4: The flowchart of SD-FFR mechanism. Alg.",
      "size": 951,
      "sentences": 13
    },
    {
      "id": 39,
      "content": "the controller and the APs as well as in\ncomputing alternative routes can be decreased. Further, the\nefficiency of load balancing can also be improved. Fig. 4: The flowchart of SD-FFR mechanism. Alg. 4: Failure Recovery Module\n1: Receive a OFPT PORT STATUS packet. IV. IMPLEMENTATION\n2: If the link state is LINK REMOVED then\n3: Use L sc (u,v) to find all the affected traffic demand\nf in TLt,b\ns,d L(u,v)\n4: W Lsc(u,v) :=∞\n5: W(cid:48) :=∞\nLsc(u,v)\n6: Forall the affected traffic demand f s,d pass through\nL (u,v) do\nsc\n7: Forall L(u,v)∈E\\L sc (u,v) do\n8: Run Alg. 2\nend\n9: Use Dijkstra algorithm to find the backup path\nP on G(V,E) base on W(cid:48)\nfs,d\n10: Install FR P fs H ,d to n, ∀ n ∈ P fs,d\n11: ALt L ,b sc(u,v) :=ALt L ,b sc(u,v) ∪f s,d\n12: TLt L ,b (u,v) :=TLt L ,b (u,v) \\ALt L ,b sc(u,v) ∪ f s,d , ∀\nL(u,v) ∈ P\nfs,d\nend\n13: Else\n14: Use L sc (u,v) to find all the affected traffic demand\nf in ALt,b Fig. 5: Network environment.",
      "size": 941,
      "sentences": 10
    },
    {
      "id": 40,
      "content": "f s,d\n12: TLt L ,b (u,v) :=TLt L ,b (u,v) \\ALt L ,b sc(u,v) ∪ f s,d , ∀\nL(u,v) ∈ P\nfs,d\nend\n13: Else\n14: Use L sc (u,v) to find all the affected traffic demand\nf in ALt,b Fig. 5: Network environment. s,d Lsc(u,v)\n15: Forall the affected traffic demand f s,d pass through\nL (u,v) do Inthissection,weevaluatethebehaviorofdatatransmission\nsc\n16: Run Alg. 1 (Line 3-8) inSDNassisteddual-bandWiFinetworksbycommercialAPs,\n17: Run Alg. 3 (Line 1-9) and apply the measurement for Mininet simulation setup in\n18: ALt L ,b (u,v) :=ALt L ,b (u,v) \\f s,d SectionVaimingtoeffectivelyvalidatetheperformanceofthe\n19: TLt L ,b (u,v) :=TLt L ,b (u,v) \\f s,d , ∀ L(u,v) ∈E p fo ro ll p o o w s i e n d g S F D ig - . FF 5, R ea in ch re c a o l m n m et e w r o ci r a k l e A n P vir h o a n s m E e t n h t e .",
      "size": 794,
      "sentences": 6
    },
    {
      "id": 41,
      "content": "he\n19: TLt L ,b (u,v) :=TLt L ,b (u,v) \\f s,d , ∀ L(u,v) ∈E p fo ro ll p o o w s i e n d g S F D ig - . FF 5, R ea in ch re c a o l m n m et e w r o ci r a k l e A n P vir h o a n s m E e t n h t e . r A ne s t a co r n e n su e l c t - ,\n20: TLt L ,b (u,v) :=TLt L ,b (u,v) ∪f s,d , ∀ L(u,v) ∈P fs,d tivity to the Internet and the SDN controller, 5 GHz wireless\n21: Forall n, ∀ n ∈V do mesh connectivity to neighboring APs and a 2.4 GHz con-\n22: Delete FR P fs H ,d in node n nectivity to mobile devices. Further, we enable OpenFlow1.3\nend\n[18] protocol on the commercial APs (i.e., TP-Link Archer\nend\nC5 AC175) by installing both OpenWrt and OpenvSwitch\nend\n(OVS) on them. Then, the OVS running on the APs can\ncommunicatewiththeONOScontroller.WeuseiPerfandPing\nto measure the link bandwidth the data transmission latency\nE. Description of the SD-FFR Mechanism\nunder different network conditions.",
      "size": 897,
      "sentences": 5
    },
    {
      "id": 42,
      "content": "n the APs can\ncommunicatewiththeONOScontroller.WeuseiPerfandPing\nto measure the link bandwidth the data transmission latency\nE. Description of the SD-FFR Mechanism\nunder different network conditions. Specifically, we collect\nAfter properly integrating the four algorithms of the pro- measurements by using wired and wireless link individually\nposed SD-FFR mechanism, Fig. 4 depicts the flowchart of the which can be further applied for the experimental setup in\nSD-FFR. Specifically, when the network starts, the SD-FFR Mininet. === 페이지 7 ===\n7\nTABLE II presents the measured link bandwidth and data\ntransmission delay in the network formed by the commercial\nAPs.AsshowninTABLEII,Ethernetprovidesthelargestlink\nbandwidth(i.e.,100Mbps)andthesmallestdatatransmission\ndelay (i.e., 0.37ms). 71 Mbps and 47 Mbps are measured\nthrough the 5 GHz wireless mesh link and the 2.4 GHz link,\nrespectively. Unsurprisingly, the delay over 5 GHz wireless\nlink is smaller than the 2.4 GHz wireless link.",
      "size": 986,
      "sentences": 7
    },
    {
      "id": 43,
      "content": "71 Mbps and 47 Mbps are measured\nthrough the 5 GHz wireless mesh link and the 2.4 GHz link,\nrespectively. Unsurprisingly, the delay over 5 GHz wireless\nlink is smaller than the 2.4 GHz wireless link. The results in\nTABLE II will be applied in next section to investigate the\nnetwork performance in the presence of link failure. TABLE II: Mininet modeling. Linkbandwidth Delay\nWiredlink 100Mbps 0.37ms Fig. 7: Delay of failure detection. 5GHzwirelessmeshlink 71Mbps 0.66ms\n2.4GHzwirelesslink 47Mbps 1.8ms\nV. EVALUATIONRESULTS\nA. Experimental Setup\nTo evaluate the performance of the proposed SD-FFR, we\nA. The Challenge in Link Failure Detection by OVS on Com-\nuse Mininet to create a network topology present in Fig. 5.\nmercial APs\nSpecifically, the Mininet runs on the computer with Intel i7-\nTo investigate the behavior of link failure detection and 8705G CPU and 16 GB RAM.",
      "size": 876,
      "sentences": 10
    },
    {
      "id": 44,
      "content": "eate a network topology present in Fig. 5.\nmercial APs\nSpecifically, the Mininet runs on the computer with Intel i7-\nTo investigate the behavior of link failure detection and 8705G CPU and 16 GB RAM. In the network, five APs not\nrecovery on the commercial APs, we manually unplug the onlydirectlyconnecttotheGWthroughwiredconnectionbut\nEthernetonanAPwhichinturncannotaccesstotheInternet. also connect with neighboring APs via 5 GHz wireless link. WefoundthattheOVScannotinstantlyreceivethelinkfailure Each AP serves provides end devices wireless connectivity\ninformationbecausethesynchronizationbetweentheOVSand operatedatthe2.4GHzfrequencyband.Specifically,weadopt\nthe operating system of the AP is non-realtime. On average, the parameters measured in the commercial WiFi APs shown\nadditionally 8 seconds delay is introduced for the ONOS to in TABLE II and the 44.6 ms link failure detection latency\nreceive the failure message.",
      "size": 929,
      "sentences": 6
    },
    {
      "id": 45,
      "content": "parameters measured in the commercial WiFi APs shown\nadditionally 8 seconds delay is introduced for the ONOS to in TABLE II and the 44.6 ms link failure detection latency\nreceive the failure message. However, this situation does not described in Section IV-A to configure the network. Several experiments are conducted to validate the effective-\nhappen in the Mininet. ness of the SD-FFR. The goal of the evaluation are twofolds. Furthermore, we design the “network state detection ac-\nFirst of all, we evaluate the impact of the parameters Q and\nceleration module” shown in Fig. 6 executing on the data b\nαof(1)onthenetworkperformanceintermsofloadbalance. plane,tomitigatetheadverseimpactonnetworkperformance. Furthermore, we investigate the impact network conditions on\nSpecifically,theAPperiodicallydetectsitsportsstatus.When\npacketlossrateandthroughput.Themethodin[15]isapplied\ntheAPdetectstheportstatuschanges,theOVSreceivesDelete\nforthecomparison,becauseitconsiderssimilarnetworksetup.",
      "size": 991,
      "sentences": 9
    },
    {
      "id": 46,
      "content": "riodicallydetectsitsportsstatus.When\npacketlossrateandthroughput.Themethodin[15]isapplied\ntheAPdetectstheportstatuschanges,theOVSreceivesDelete\nforthecomparison,becauseitconsiderssimilarnetworksetup. orAddcommand.Fig.7shows25measurementsofthedelay\nfor the AP in detecting whether the port state changes. As\nshown in Fig. 7, the average delay reduces to 44.6 ms by B. The Impact of Parameters on Load Balance\nimplementing the the “network state detection acceleration Inthisexperiments,differentcombinationsofQ andαare\nb\nmodule”ontheAP.Then,consideringtheminimizedresponse set to investigate the relationships between the link weight\ntimeoflinkfailure,weinputthe44.6msdelayintotheMininet function (1) and the achieved load balance in the normal\nto evaluate the failure recovery performance of the proposed network state. Sixteen hosts are introduced on AP and\n1\nSD-FFR in the real network environment. Additionally, with AP in the network.",
      "size": 938,
      "sentences": 7
    },
    {
      "id": 47,
      "content": "rmal\nto evaluate the failure recovery performance of the proposed network state. Sixteen hosts are introduced on AP and\n1\nSD-FFR in the real network environment. Additionally, with AP in the network. Each host on AP performs an iPerf\n2 1\nthe assistance of the “network state detection acceleration client to communicate with the corresponding iPerf server\nmodule”, the proposed SD-FFR can support failure recovery connecting with AP , and then sixteen UDP traffic flows\n2\nmore time efficiently in real network environment. constantly transmit packets with 20 Mbps data rate to the\nnetwork.WithappropriatelypickedQ andα,eachWMNlink\nb\nshould share three traffic flows while the Ethernet connection\nhandles four traffic flows to avoid link congestion, because\neach AP equips with one Ethernet and four WMN links,\nTABLEIIIillustratesthenumberoftrafficflowswhichcanbe\nsuccessfully delivered under different pairs of Q and α for\nb\nthe performance evaluation.",
      "size": 952,
      "sentences": 5
    },
    {
      "id": 48,
      "content": "use\neach AP equips with one Ethernet and four WMN links,\nTABLEIIIillustratesthenumberoftrafficflowswhichcanbe\nsuccessfully delivered under different pairs of Q and α for\nb\nthe performance evaluation. As present in TABLE III, when\nα = 10 and Q ∈ {0.1,0.3,0.5,0.7} SD-FFR can handle 16\nb\nFig. 6: The flowchart of network state detection acceleration\ntraffic demands. Therefore, in the rest of the experiments, we\nmodule. setα=10andQ =0.1incalculatingthelinkweightsunder\n0\nthe normal network state. [표 데이터 감지됨]\n\n=== 페이지 8 ===\n8\nTABLEIII:TheadjustableparametersQandα correspondto\nThe x-axis shows the number of repeated trials and the y-\nthe number of successfully process traffic demand. axis indicates the corresponding average packet loss rate. The\nα packet loss rarely occurs when flow rates are smaller than\n10 20 30 40 50\nQ0 20 Mbps in both cases.",
      "size": 849,
      "sentences": 8
    },
    {
      "id": 49,
      "content": "ccessfully process traffic demand. axis indicates the corresponding average packet loss rate. The\nα packet loss rarely occurs when flow rates are smaller than\n10 20 30 40 50\nQ0 20 Mbps in both cases. With the increasing flow rates, the\n0.1 16 13 10 9 9\npacket loss rate increases, and the traffic flow with 25 Mpbs\n0.3 16 13 10 9 7\ndata rate approximately experience at most 5% packet loss. 0.5 16 13 12 10 7\n0.7 16 13 12 9 7 However, on average, the packet loss rate for 25 Mbps data\n0.9 15 13 12 10 7 rate is about 1.3% only as shown in TABLE V. Since 5\nGHz wireless link provides 71 Mbps link bandwidth, the\naveragepacketlossrateinbothcasesaresimilarasconcluded\nWe set Q to 0.1 and α to 10 to load balance efficiency\n0 in TABLE V. Specifically, SD-FFR time efficiently recovers\nin the post-recovery network, according to TABLE III, 0 <\nlink failure by rerouting affected traffic flows and carefully\n2Q <1 and Q +Q =1.",
      "size": 920,
      "sentences": 5
    },
    {
      "id": 50,
      "content": "in TABLE V. Specifically, SD-FFR time efficiently recovers\nin the post-recovery network, according to TABLE III, 0 <\nlink failure by rerouting affected traffic flows and carefully\n2Q <1 and Q +Q =1. Moreover, instead of introducing\n0 0 1 plans the operation of failover to reduces the recovery delay. 16 iPerf server-client pairs in the previous experiment, only\nTherefore, the packet loss rate is low. twelves UDP traffic demands whose individual data rate is\n20 Mbps. We disconnect the direct Ethernet connectivity\nbetweenAP and GW as link failure in order to study the\n1\nperformance of the post-recovery network. TABLE IV illus-\ntrates the routing path of each traffic demand before and after\nfault recovery. As found in TABLE IV, the traffic demand 1,\n3and7arereroutedthroughAP ,AP andAP ,respectively\n3 4 5\nbecausethelinkbetweenAP andGWfails.Thesethreeflows\n1\nareevenlyredirectedthroughthreedifferentpathstoavoidthe\nlink congestion after failure recovery.",
      "size": 960,
      "sentences": 7
    },
    {
      "id": 51,
      "content": "arereroutedthroughAP ,AP andAP ,respectively\n3 4 5\nbecausethelinkbetweenAP andGWfails.Thesethreeflows\n1\nareevenlyredirectedthroughthreedifferentpathstoavoidthe\nlink congestion after failure recovery. TABLE IV: Load-balance in post-recovery network. Trafficdemand Originalpath Pathofpostrecoverynetwork\n1 AP1−GW −AP2 AP1−AP3−AP2\n2 AP1−AP2 AP1−AP2\nFig. 8: packet loss rate in case 1. 3 AP1−GW −AP2 AP1−AP4−AP2\n4 AP1−AP3−AP2 AP1−AP3−AP2\n5 AP1−AP4−AP2 AP1−AP4−AP2\n6 AP1−AP5−AP2 AP1−AP5−AP2\n7 AP1−GW −AP2 AP1−AP5−AP2\n8 AP1−AP2 AP1−AP2\n9 AP1−AP2 AP1−AP2\n10 AP1−AP3−AP2 AP1−AP3−AP2\n11 AP1−AP4−AP2 AP1−AP4−AP2\n12 AP1−AP5−AP2 AP1−AP5−AP2\nC. The Impact of Network Conditions on Performance\nTABLE V: Mean of packet loss rate (%). 10Mbps 15Mbps 20Mbps 25Mbps\nCase1 0.39 0.39 0.81 1.28\nFig. 9: Packet loss rate in case 2.",
      "size": 808,
      "sentences": 7
    },
    {
      "id": 52,
      "content": "AP5−AP2 AP1−AP5−AP2\nC. The Impact of Network Conditions on Performance\nTABLE V: Mean of packet loss rate (%). 10Mbps 15Mbps 20Mbps 25Mbps\nCase1 0.39 0.39 0.81 1.28\nFig. 9: Packet loss rate in case 2. Case2 0.39 0.42 0.60 1.35\n1) The impact of flow rates on packet loss: In this ex- 2) TheImpactofLinkFailureRecoveryonTCPThroughput\nperiment, we consider a traffic flow sent through AP and : In this experiment, we evaluate the impact of link failure\n1\nAP to the destination. We used iPerf to generate UDP traffic recovery on TCP traffic flow following the previous setup. 2\nof 10Mbps, 15Mbps, 20Mbps, and 25Mbps for 30 seconds, Hence,thelinkalsofailsatthe15thsecondinbothcases.The\nrespectivelyandwerepeatthemeasurement100timesperflow obtained TCP throughput and congestion windows in case 1\nrate aiming to measure the packet loss rate in the presence of are shown in Fig. 10 - 13. Similarly, Fig. 10 - 13 depicts the\nlink failure.",
      "size": 929,
      "sentences": 9
    },
    {
      "id": 53,
      "content": "ow obtained TCP throughput and congestion windows in case 1\nrate aiming to measure the packet loss rate in the presence of are shown in Fig. 10 - 13. Similarly, Fig. 10 - 13 depicts the\nlink failure. Further, two cases of failure, wired and wireless TCP throughput and the congestion windows in case 2.\nlink failure, are considered. We denote the link failure occurs It can be found that both the congestion window size and\nin the wired connection as case 1 while case 2 denotes the the TCP throughput drops significantly at the 15th second\nwireless link failure. Link failure occurs at the 15th second when a link fails in the network. However, the proposed\nandonlyoccursonceineachtrial.Fig.8-9presentthepacket SD-FFR time efficiently detects the link failure and reroutes\nloss rate during failure recovery in case 1 and 2 respectively. the traffic by install the high priority of flow entries during\n[표 데이터 감지됨]\n\n=== 페이지 9 ===\n9\nfailover.Consequently,theend-to-endperformancecanbefast\nrecovered.",
      "size": 997,
      "sentences": 9
    },
    {
      "id": 54,
      "content": "recovery in case 1 and 2 respectively. the traffic by install the high priority of flow entries during\n[표 데이터 감지됨]\n\n=== 페이지 9 ===\n9\nfailover.Consequently,theend-to-endperformancecanbefast\nrecovered. Fig. 10: TCP Throughput in case 1. Fig. 13: Congestion window size in case 2.\nwhile SCONN takes at 1000 ms for failure recovery. It is\nbecause SD-FFR carefully plans the priority of flow entries\nduring failover and performs the installation and deletion of\nforwarding rules at the right time. The time in collecting link\nusage and calculating rerouting paths can be greatly saved\nwhichinturnreducestherecoverydelaysignificantly.SCONN\ndoesnothavetheseconsiderations,andthustherecoverytime\nis high. Fig. 11: Congestion window size in case 1. Fig. 12: TCP throughput in case 2. Fig. 14: Failure recovery time in case 1. TABLE VI: Compare between different approaches on failure\nD. Theimpactoffailurerecoveryschemesonnetworkperfor-\nrecovery time.",
      "size": 941,
      "sentences": 15
    },
    {
      "id": 55,
      "content": ". 12: TCP throughput in case 2. Fig. 14: Failure recovery time in case 1. TABLE VI: Compare between different approaches on failure\nD. Theimpactoffailurerecoveryschemesonnetworkperfor-\nrecovery time. mance\nAveragerecoverytimeandSTD Case1 Case2\nIn this experiment, we evaluate the performance of failure\nMean:55.5ms Mean:57.6ms\nrecovery through our proposed SD-FFR and SCONN [15] SD-FFR STD:1.48 STD:1.59\nby using Ping. We introduce the link failure at the 15th Mean:1060ms Mean:1061ms\nSCONN[15]\nSTD:0.01 STD:0.01\nsecond within the 30 seconds experiment, and then repeat the\nexperiment100times.Fig.14andFig.15plotthelinkfailure\nrecovery time for each trail in case 1 and 2, respectively. The\nmean and variance of the recovery time are summarized in\nVI. CONCLUSION\nTABLE VI. The proposed SD-FFR recovers the link failure Inthispaper,weproposeaSD-FFRmechanismtoimprove\n18 times faster comparing to SCONN in both cases, since the network reliability in the automatic warehouse.",
      "size": 973,
      "sentences": 10
    },
    {
      "id": 56,
      "content": "he proposed SD-FFR recovers the link failure Inthispaper,weproposeaSD-FFRmechanismtoimprove\n18 times faster comparing to SCONN in both cases, since the network reliability in the automatic warehouse. With SD-\nSD-FFR takes less than 60 ms to complete failure recovery FFR, the SDN controller reroutes the traffic to the backup\n[표 데이터 감지됨]\n\n=== 페이지 10 ===\n10\n[6] K. C. Karthika, “Wireless mesh network: A survey,” in 2016 Interna-\ntionalConferenceonWirelessCommunications,SignalProcessingand\nNetworking(WiSPNET),Mar.2016,pp.1966–1970. [7] K. Bao, J. D. Matyjas, F. Hu, and S. Kumar, “Intelligent Software-\nDefinedMeshNetworksWithLink-FailureAdaptiveTrafficBalancing,”\nIEEE Transactions on Cognitive Communications and Networking,\nvol.4,no.2,pp.266–276,Jun.2018.",
      "size": 759,
      "sentences": 3
    },
    {
      "id": 57,
      "content": "F. Hu, and S. Kumar, “Intelligent Software-\nDefinedMeshNetworksWithLink-FailureAdaptiveTrafficBalancing,”\nIEEE Transactions on Cognitive Communications and Networking,\nvol.4,no.2,pp.266–276,Jun.2018. [8] W. J. Lee, J. W. Shin, H. Y. Lee, and M. Y. Chung, “Testbed imple-\nmentationforroutingWLANtrafficinsoftwaredefinedwirelessmesh\nnetwork,” in 2016 Eighth International Conference on Ubiquitous and\nFutureNetworks(ICUFN),Jul.2016,pp.1052–1055. [9] P. Patil, A. Hakiri, Y. Barve, and A. Gokhale, “Enabling Software-\nDefined Networking for Wireless Mesh Networks in smart environ-\nments,”in2016IEEE15thInternationalSymposiumonNetworkCom-\nputingandApplications(NCA),Oct.2016,pp.153–157. [10] M. Labraoui, M. M. Boc, and A. Fladenmuller, “Software Defined\nNetworking-assistedroutinginwirelessmeshnetworks,”in2016Inter-\nnational Wireless Communications and Mobile Computing Conference\n(IWCMC),Sep.2016,pp.377–382.",
      "size": 908,
      "sentences": 4
    },
    {
      "id": 58,
      "content": "oc, and A. Fladenmuller, “Software Defined\nNetworking-assistedroutinginwirelessmeshnetworks,”in2016Inter-\nnational Wireless Communications and Mobile Computing Conference\n(IWCMC),Sep.2016,pp.377–382. [11] A. Detti, C. Pisa, S. Salsano, and N. B. Melazzi, “Wireless Mesh\nSoftwareDefinedNetworks(wmSDN),”in2013IEEE9thInternational\nConferenceonWirelessandMobileComputing,NetworkingandCom-\nFig. 15: Failure recovery time in case 2. munications(WiMob),Oct.2013,pp.89–95. [12] S.Feng,Y.Wang,X.Zhong,J.Zong,X.Qiu,andS.Guo,“Aring-based\nsingle-linkfailurerecoveryapproachinSDNdataplane,”inNOMS2018\n- 2018 IEEE/IFIP Network Operations and Management Symposium,\nwireless mesh network to react to the occurrence of link Jul.2018,pp.1–7. failure.",
      "size": 733,
      "sentences": 5
    },
    {
      "id": 59,
      "content": "-linkfailurerecoveryapproachinSDNdataplane,”inNOMS2018\n- 2018 IEEE/IFIP Network Operations and Management Symposium,\nwireless mesh network to react to the occurrence of link Jul.2018,pp.1–7. failure. Specifically, SD-FFR carefully sets the priority of [13] G.Saldamli,H.Mishra,N.Ravi,R.R.Kodati,S.A.Kuntamukkala,and\nL. Tawalbeh, “Improving link failure recovery and congestion control\nthe flow entries on each nodes in the network to minimize\nin SDNs,” in 2019 10th International Conference on Information and\nthe appropriate operation time installing and deleting the CommunicationSystems(ICICS),Jun.2019,pp.30–35. corresponding forwarding rules of the traffic flows influenced [14] M. Tanha, D. Sajjadi, and J. Pan, “Demystifying Failure Recovery\nfor Software-Defined Wireless Mesh Networks,” in 2018 4th IEEE\nby the link failure. Therefore, the link failure can be time\nConference on Network Softwarization and Workshops (NetSoft), Jun. efficiently recovered.",
      "size": 962,
      "sentences": 6
    },
    {
      "id": 60,
      "content": "efined Wireless Mesh Networks,” in 2018 4th IEEE\nby the link failure. Therefore, the link failure can be time\nConference on Network Softwarization and Workshops (NetSoft), Jun. efficiently recovered. Considering that the traffic load in the 2018,pp.488–493. automatic warehouse may be unevenly balanced, the SD-FFR [15] C. Huang, W. Chung, and C. Liu, “SCONN: Design and Implement\nDual-BandWirelessNetworkingAssistedFaultTolerantDataTransmis-\nmechanism also design strategy in balancing traffic loads no\nsioninIntelligentBuildings,”in2018IEEE88thVehicularTechnology\nmatter link failure happens or not. Conference(VTC-Fall),Aug.2018,pp.1–5. We evaluate the proposed SD-FFR mechanism on Mininet, [16] X.Zhangetal.,“LocalFastRerouteWithFlowAggregationinSoftware\nDefined Networks,” IEEE Communications Letters, vol. 21, no. 4, pp. and the results show the effectiveness of SD-FFR in im-\n785–788,Dec.2017. proving the network performance.",
      "size": 933,
      "sentences": 11
    },
    {
      "id": 61,
      "content": "lowAggregationinSoftware\nDefined Networks,” IEEE Communications Letters, vol. 21, no. 4, pp. and the results show the effectiveness of SD-FFR in im-\n785–788,Dec.2017. proving the network performance. Specifically, in the Mininet [17] B. Oh, S. Vural, N. Wang, and R. Tafazolli, “Priority-Based Flow\nevaluations, the parameters of link bandwidth and latency Control for Dynamic and Reliable Flow Management in SDN,” IEEE\nTransactionson Networkand ServiceManagement,vol. 15, no.4, pp. in recovering link failure are configured, according to the\n1720–1732,Nov.2018. measurement by commercial APs to study the impact of [18] M.Nicketal.,“OpenFlow:Enablinginnovationincampusnetworks,”\napplying SD-FFR in the real network. In the future, we will ACMSIGCOMMComputerCommunicationReview,vol.38,no.2,pp. 69–74,Mar.2008.",
      "size": 809,
      "sentences": 11
    },
    {
      "id": 62,
      "content": "ct of [18] M.Nicketal.,“OpenFlow:Enablinginnovationincampusnetworks,”\napplying SD-FFR in the real network. In the future, we will ACMSIGCOMMComputerCommunicationReview,vol.38,no.2,pp. 69–74,Mar.2008. design a hybrid failure recovery scheme integrating the active\n[19] D. B. Johnson, “A note on dijkstras shortest path algorithm,” J. ACM,\nand passive failure recovery strategies in order to improve our vol.20,no.3,p.385388,Jul.1973. proposed mechanism further. REFERENCES\n[1] Y. Liu, K. F. Tong, X. Qiu, Y. Liu, and X. Ding, “Wireless Mesh\nNetworks in IoT networks,” in 2017 International Workshop on Elec-\ntromagnetics: Applications and Student Innovation Competition, May. 2017,pp.183–185. [2] A. Karaagac, J. Haxhibeqiri, W. Joseph, I. Moerman, and J. Hoebeke,\n“Wireless industrial communication for connected shuttle systems in\nwarehouses,” in 2017 IEEE 13th International Workshop on Factory\nCommunicationSystems(WFCS),May.2017,pp.1–4.",
      "size": 940,
      "sentences": 8
    },
    {
      "id": 63,
      "content": "erman, and J. Hoebeke,\n“Wireless industrial communication for connected shuttle systems in\nwarehouses,” in 2017 IEEE 13th International Workshop on Factory\nCommunicationSystems(WFCS),May.2017,pp.1–4. [3] E. Alizadeh Jarchlo, J. Haxhibeqiri, I. Moerman, and J. Hoebeke, “To\nMeshornottoMesh:FlexibleWirelessIndoorCommunicationAmong\nMobile Robots in Industrial Environments,” vol. 9724, Jul. 2016, pp. 325–338. [4] A.Fellan,C.Schellenberger,M.Zimmermann,andH.D.Schotten,“En-\nablingCommunicationTechnologiesforAutomatedUnmannedVehicles\ninIndustry4.0,”in2018InternationalConferenceonInformationand\nCommunication Technology Convergence (ICTC), Oct. 2018, pp. 171–\n176. [5] Q. Chen, X. J. Zhang, W. L. Lim, Y. S. Kwok, and S. Sun, “High\nReliability,LowLatencyandCostEffectiveNetworkPlanningforIndus-\ntrialWirelessMeshNetworks,”IEEE/ACMTransactionsonNetworking,\nvol.27,no.6,pp.2354–2362,Dec.2019.",
      "size": 888,
      "sentences": 8
    }
  ]
}